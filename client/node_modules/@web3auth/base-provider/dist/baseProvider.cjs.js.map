{"version":3,"file":"baseProvider.cjs.js","mappings":"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","sources":["webpack://@web3auth/base-provider/./src/jrpcClient.ts","webpack://@web3auth/base-provider/./src/CommonJRPCProvider.ts","webpack://@web3auth/base-provider/./src/baseProvider.ts","webpack://@web3auth/base-provider/./src/commonPrivateKeyProvider.ts","webpack://@web3auth/base-provider/external commonjs2 \"json-rpc-random-id\"","webpack://@web3auth/base-provider/./src/utils.ts","webpack://@web3auth/base-provider/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@web3auth/base-provider/external commonjs2 \"@toruslabs/base-controllers\"","webpack://@web3auth/base-provider/external commonjs2 \"@toruslabs/openlogin-jrpc\"","webpack://@web3auth/base-provider/external commonjs2 \"@web3auth/base\"","webpack://@web3auth/base-provider/external commonjs2 \"eth-rpc-errors\"","webpack://@web3auth/base-provider/webpack/bootstrap","webpack://@web3auth/base-provider/webpack/runtime/compat get default export","webpack://@web3auth/base-provider/webpack/runtime/define property getters","webpack://@web3auth/base-provider/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/base-provider/webpack/runtime/make namespace object","webpack://@web3auth/base-provider/./src/index.ts"],"sourcesContent":["import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport type { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: CustomChainConfig): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<CustomChainConfig>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createJsonRpcClient(providerConfig: CustomChainConfig): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<unknown, unknown>;\n} {\n  const { chainId, rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig), fetchMiddleware]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import { createEventEmitterProxy } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, providerFromEngine } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"./baseProvider\";\nimport { createJsonRpcClient } from \"./jrpcClient\";\n\nexport type CommonJRPCProviderConfig = BaseProviderConfig;\n\nexport type CommonJRPCProviderState = BaseProviderState;\n\nexport class CommonJRPCProvider extends BaseProvider<CommonJRPCProviderConfig, CommonJRPCProviderState, never> {\n  constructor({ config, state }: { config: CommonJRPCProviderConfig; state?: CommonJRPCProviderState }) {\n    super({ config, state });\n  }\n\n  public static getProviderInstance = async (params: { chainConfig: CustomChainConfig }): Promise<CommonJRPCProvider> => {\n    const providerFactory = new CommonJRPCProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider();\n    return providerFactory;\n  };\n\n  public async setupProvider(): Promise<void> {\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    const engine = new JRPCEngine();\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    await this.setupProvider();\n  }\n\n  public updateProviderEngineProxy(provider: SafeEventEmitterProvider) {\n    if (this._providerEngineProxy) {\n      (this._providerEngineProxy as any).setTarget(provider);\n    } else {\n      this._providerEngineProxy = createEventEmitterProxy<SafeEventEmitterProvider>(provider);\n    }\n  }\n\n  protected getProviderEngineProxy(): SafeEventEmitterProvider | null {\n    return this._providerEngineProxy;\n  }\n\n  protected lookupNetwork(): Promise<string | void> {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n","import { BaseConfig, BaseController, BaseState, createEventEmitterProxy } from \"@toruslabs/base-controllers\";\nimport { CustomChainConfig, SafeEventEmitterProvider, WalletInitializationError } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseProvider } from \"./IBaseProvider\";\n\nexport interface BaseProviderState extends BaseState {\n  chainId: string;\n}\n\nexport interface BaseProviderConfig extends BaseConfig {\n  chainConfig: Partial<CustomChainConfig>;\n  networks?: Record<string, CustomChainConfig>;\n  skipLookupNetwork?: boolean;\n}\n\nexport abstract class BaseProvider<C extends BaseProviderConfig, S extends BaseProviderState, P>\n  extends BaseController<C, S>\n  implements IBaseProvider<P>\n{\n  // should be Assigned in setupProvider\n  public _providerEngineProxy: SafeEventEmitterProvider | null = null;\n\n  constructor({ config, state }: { config: C; state?: S }) {\n    super({ config, state });\n    if (!config.chainConfig) throw WalletInitializationError.invalidProviderConfigError(\"Please provide chainConfig\");\n    if (!config.chainConfig.chainId) throw WalletInitializationError.invalidProviderConfigError(\"Please provide chainId inside chainConfig\");\n    if (!config.chainConfig.rpcTarget) throw WalletInitializationError.invalidProviderConfigError(\"Please provide rpcTarget inside chainConfig\");\n    this.defaultState = {\n      chainId: \"loading\",\n    } as S;\n    this.defaultConfig = {\n      chainConfig: config.chainConfig,\n      networks: { [config.chainConfig.chainId]: config.chainConfig },\n    } as C;\n    super.initialize();\n  }\n\n  get currentChainConfig(): Partial<CustomChainConfig> {\n    return this.config.chainConfig;\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    return this._providerEngineProxy;\n  }\n\n  set provider(_) {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public addChain(chainConfig: CustomChainConfig): void {\n    if (!chainConfig.chainId) throw ethErrors.rpc.invalidParams(\"chainId is required\");\n    if (!chainConfig.rpcTarget) throw ethErrors.rpc.invalidParams(\"chainId is required\");\n    this.configure({\n      networks: { ...this.config.networks, [chainConfig.chainId]: chainConfig },\n    } as C);\n  }\n\n  public getChainConfig(chainId: string): CustomChainConfig | null {\n    const chainConfig = this.config.networks?.[chainId];\n    if (!chainConfig) throw ethErrors.rpc.invalidRequest(`Chain ${chainId} is not supported, please add chainConfig for it`);\n    return chainConfig;\n  }\n\n  protected getProviderEngineProxy(): SafeEventEmitterProvider | null {\n    return this._providerEngineProxy;\n  }\n\n  protected updateProviderEngineProxy(provider: SafeEventEmitterProvider) {\n    if (this._providerEngineProxy) {\n      (this._providerEngineProxy as any).setTarget(provider);\n    } else {\n      this._providerEngineProxy = createEventEmitterProxy<SafeEventEmitterProvider>(provider);\n    }\n  }\n\n  abstract setupProvider(provider: P): Promise<void>;\n\n  abstract switchChain(params: { chainId: string }): Promise<void>;\n\n  protected abstract lookupNetwork(provider?: P): Promise<string | void>;\n}\n","import { createEventEmitterProxy } from \"@toruslabs/base-controllers\";\nimport {\n  createAsyncMiddleware,\n  createScaffoldMiddleware,\n  JRPCEngine,\n  JRPCMiddleware,\n  JRPCRequest,\n  JRPCResponse,\n  providerFromEngine,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\n\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"./baseProvider\";\nimport { IBaseProvider } from \"./IBaseProvider\";\n\nexport interface CommonPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface CommonPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\n\nexport class CommonPrivateKeyProvider extends BaseProvider<BaseProviderConfig, CommonPrivKeyProviderState, string> implements IBaseProvider<string> {\n  // should be Assigned in setupProvider\n  public _providerEngineProxy: SafeEventEmitterProvider | null = null;\n\n  constructor({ config, state }: { config: CommonPrivKeyProviderConfig; state?: CommonPrivKeyProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.OTHER } }, state });\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    return this._providerEngineProxy;\n  }\n\n  set provider(_) {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<CommonPrivateKeyProvider> => {\n    const providerFactory = new CommonPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  addChain(_: CustomChainConfig): void {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const privKeyMiddleware = this.getPrivKeyMiddleware(privKey);\n    const engine = new JRPCEngine();\n    engine.push(privKeyMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    return Promise.resolve();\n  }\n\n  protected getProviderEngineProxy(): SafeEventEmitterProvider | null {\n    return this._providerEngineProxy;\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    return Promise.resolve(\"\");\n  }\n\n  protected updateProviderEngineProxy(provider: SafeEventEmitterProvider) {\n    if (this._providerEngineProxy) {\n      (this._providerEngineProxy as any).setTarget(provider);\n    } else {\n      this._providerEngineProxy = createEventEmitterProxy<SafeEventEmitterProvider>(provider);\n    }\n  }\n\n  private getPrivKeyMiddleware(privKey: string): JRPCMiddleware<unknown, unknown> {\n    const middleware = {\n      getPrivatekey: async (): Promise<string> => {\n        return privKey;\n      },\n    };\n    return this.createPrivKeyMiddleware(middleware);\n  }\n\n  private createPrivKeyMiddleware({ getPrivatekey }): JRPCMiddleware<unknown, unknown> {\n    async function getPrivatekeyHandler(_: JRPCRequest<{ privateKey: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n      res.result = await getPrivatekey();\n    }\n\n    return createScaffoldMiddleware({\n      private_key: createAsyncMiddleware(getPrivatekeyHandler),\n    });\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"json-rpc-random-id\");","import getCreateRandomId from \"json-rpc-random-id\";\nexport const createRandomId = getCreateRandomId();\n","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@toruslabs/base-controllers\");","module.exports = require(\"@toruslabs/openlogin-jrpc\");","module.exports = require(\"@web3auth/base\");","module.exports = require(\"eth-rpc-errors\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * from \"./baseProvider\";\nexport * from \"./CommonJRPCProvider\";\nexport * from \"./commonPrivateKeyProvider\";\nexport * from \"./IBaseProvider\";\nexport * from \"./utils\";\n"],"names":["createFetchMiddleware","mergeMiddleware","createChainIdMiddleware","chainId","req","res","next","end","method","result","createProviderConfigMiddleware","providerConfig","createJsonRpcClient","rpcTarget","fetchMiddleware","networkMiddleware","createEventEmitterProxy","JRPCEngine","providerFromEngine","ethErrors","BaseProvider","CommonJRPCProvider","constructor","_ref","config","state","setupProvider","chainConfig","engine","push","provider","updateProviderEngineProxy","switchChain","params","_providerEngineProxy","custom","message","code","getChainConfig","update","configure","setTarget","getProviderEngineProxy","lookupNetwork","Error","_defineProperty","providerFactory","BaseController","WalletInitializationError","invalidProviderConfigError","defaultState","defaultConfig","networks","initialize","currentChainConfig","_","addChain","rpc","invalidParams","_objectSpread","_this$config$networks","invalidRequest","createAsyncMiddleware","createScaffoldMiddleware","CHAIN_NAMESPACES","CommonPrivateKeyProvider","chainNamespace","OTHER","privKey","privKeyMiddleware","getPrivKeyMiddleware","Promise","resolve","middleware","getPrivatekey","createPrivKeyMiddleware","_ref2","getPrivatekeyHandler","private_key","getCreateRandomId","createRandomId"],"sourceRoot":""}