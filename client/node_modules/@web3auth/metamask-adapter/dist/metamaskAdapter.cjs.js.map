{"version":3,"file":"metamaskAdapter.cjs.js","mappings":"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","sources":["webpack://@web3auth/metamask-adapter/webpack/bootstrap","webpack://@web3auth/metamask-adapter/webpack/runtime/compat get default export","webpack://@web3auth/metamask-adapter/webpack/runtime/define property getters","webpack://@web3auth/metamask-adapter/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/metamask-adapter/webpack/runtime/make namespace object","webpack://@web3auth/metamask-adapter/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@metamask/detect-provider\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@web3auth/base\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@web3auth/base-evm-adapter\"","webpack://@web3auth/metamask-adapter/./src/metamaskAdapter.ts","webpack://@web3auth/metamask-adapter/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@metamask/detect-provider\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base-evm-adapter\");","import detectEthereumProvider from \"@metamask/detect-provider\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  BaseAdapterSettings,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n  Web3AuthError,\n} from \"@web3auth/base\";\nimport { BaseEvmAdapter } from \"@web3auth/base-evm-adapter\";\n\ninterface EthereumProvider extends SafeEventEmitterProvider {\n  isMetaMask?: boolean;\n  isConnected: () => boolean;\n  chainId: string;\n}\nexport type MetamaskAdapterOptions = BaseAdapterSettings;\n\nclass MetamaskAdapter extends BaseEvmAdapter<void> {\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.EIP155;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.EIP155;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  readonly name: string = WALLET_ADAPTERS.METAMASK;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  private metamaskProvider: EthereumProvider | null = null;\n\n  get provider(): SafeEventEmitterProvider | null {\n    if (this.status !== ADAPTER_STATUS.NOT_READY && this.metamaskProvider) {\n      return this.metamaskProvider as SafeEventEmitterProvider;\n    }\n    return null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions = {}): Promise<void> {\n    await super.init(options);\n    super.checkInitializationRequirements();\n    this.metamaskProvider = (await detectEthereumProvider({ mustBeMetaMask: true })) as EthereumProvider;\n    if (!this.metamaskProvider) throw WalletInitializationError.notInstalled(\"Metamask extension is not installed\");\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.METAMASK);\n    try {\n      log.debug(\"initializing metamask adapter\");\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n    }\n  }\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    super.checkConnectionRequirements();\n    if (!this.metamaskProvider) throw WalletLoginError.notConnectedError(\"Not able to connect with metamask\");\n    const { ethereum } = window as any;\n    const isPhantom = Boolean(\"isPhantom\" in ethereum);\n    // check which is the active provider\n    if (ethereum && ethereum.isMetaMask && isPhantom) {\n      // this means phantom is the active provider.\n      if (ethereum.providers && ethereum.providers.length > 0) {\n        const provider = ethereum.providers.find((p: any) => p.isMetaMask && !p.overrideIsMetaMask);\n\n        if (provider) {\n          ethereum.setProvider(provider);\n        }\n      }\n    } else if (ethereum && (ethereum.providers || []).length > 0) {\n      // this means that there are another providers than metamask (like coinbase).\n      const provider = ethereum.providers.find((p: any) => p.isMetaMask);\n      if (provider) {\n        ethereum.setSelectedProvider(provider);\n      }\n    }\n\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.METAMASK });\n    try {\n      await this.metamaskProvider.request({ method: \"eth_requestAccounts\" });\n      const { chainId } = this.metamaskProvider;\n      if (chainId !== (this.chainConfig as CustomChainConfig).chainId) {\n        await this.addChain(this.chainConfig as CustomChainConfig, true);\n        await this.switchChain(this.chainConfig as CustomChainConfig, true);\n      }\n      this.status = ADAPTER_STATUS.CONNECTED;\n      if (!this.provider) throw WalletLoginError.notConnectedError(\"Failed to connect with provider\");\n      const disconnectHandler = () => {\n        // ready to be connected again\n        this.disconnect();\n        this.provider?.removeListener(\"disconnect\", disconnectHandler);\n      };\n      this.provider.on(\"disconnect\", disconnectHandler);\n      this.emit(ADAPTER_EVENTS.CONNECTED, { adapter: WALLET_ADAPTERS.METAMASK, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      if (error instanceof Web3AuthError) throw error;\n      throw WalletLoginError.connectionError(\"Failed to login with metamask wallet\");\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    await super.disconnectSession();\n    this.provider?.removeAllListeners();\n    if (options.cleanup) {\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.metamaskProvider = null;\n    } else {\n      // ready to be connected again\n      this.status = ADAPTER_STATUS.READY;\n    }\n    await super.disconnect();\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    return {};\n  }\n\n  public async addChain(chainConfig: CustomChainConfig, init = false): Promise<void> {\n    super.checkAddChainRequirements(chainConfig, init);\n    await this.metamaskProvider?.request({\n      method: \"wallet_addEthereumChain\",\n      params: [\n        {\n          chainId: chainConfig.chainId,\n          chainName: chainConfig.displayName,\n          rpcUrls: [chainConfig.rpcTarget],\n          blockExplorerUrls: [chainConfig.blockExplorer],\n          nativeCurrency: {\n            name: chainConfig.tickerName,\n            symbol: chainConfig.ticker,\n            decimals: chainConfig.decimals || 18,\n          },\n        },\n      ],\n    });\n    this.addChainConfig(chainConfig);\n  }\n\n  public async switchChain(params: { chainId: string }, init = false): Promise<void> {\n    super.checkSwitchChainRequirements(params, init);\n    await this.metamaskProvider?.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: params.chainId }],\n    });\n    this.setAdapterSettings({ chainConfig: this.getChainConfig(params.chainId) as CustomChainConfig });\n  }\n}\n\nexport { MetamaskAdapter };\n","export * from \"./metamaskAdapter\";\n"],"names":["detectEthereumProvider","ADAPTER_CATEGORY","ADAPTER_EVENTS","ADAPTER_NAMESPACES","ADAPTER_STATUS","CHAIN_NAMESPACES","log","WALLET_ADAPTERS","WalletInitializationError","WalletLoginError","Web3AuthError","BaseEvmAdapter","MetamaskAdapter","constructor","arguments","_defineProperty","EIP155","EXTERNAL","METAMASK","NOT_READY","provider","status","metamaskProvider","_","Error","init","options","length","undefined","checkInitializationRequirements","mustBeMetaMask","notInstalled","READY","emit","debug","autoConnect","rehydrated","connect","error","ERRORED","checkConnectionRequirements","notConnectedError","ethereum","window","isPhantom","Boolean","isMetaMask","providers","find","p","overrideIsMetaMask","setProvider","setSelectedProvider","CONNECTING","adapter","request","method","chainId","chainConfig","addChain","switchChain","CONNECTED","disconnectHandler","_this$provider","disconnect","removeListener","on","reconnected","connectionError","_this$provider2","cleanup","disconnectSession","removeAllListeners","getUserInfo","_this$metamaskProvide","checkAddChainRequirements","params","chainName","displayName","rpcUrls","rpcTarget","blockExplorerUrls","blockExplorer","nativeCurrency","name","tickerName","symbol","ticker","decimals","addChainConfig","_this$metamaskProvide2","checkSwitchChainRequirements","setAdapterSettings","getChainConfig"],"sourceRoot":""}