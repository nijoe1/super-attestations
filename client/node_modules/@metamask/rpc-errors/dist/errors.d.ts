import { JsonRpcError, EthereumProviderError } from './classes';
import { DataWithOptionalCause } from './utils';
type EthereumErrorOptions<T extends DataWithOptionalCause> = {
    message?: string;
    data?: T;
};
type ServerErrorOptions<T extends DataWithOptionalCause> = {
    code: number;
} & EthereumErrorOptions<T>;
type CustomErrorArg<T extends DataWithOptionalCause> = ServerErrorOptions<T>;
type JsonRpcErrorsArg<T extends DataWithOptionalCause> = EthereumErrorOptions<T> | string;
export declare const rpcErrors: {
    /**
     * Get a JSON RPC 2.0 Parse (-32700) error.
     *
     * @param arg - The error message or options bag.
     * @returns An instance of the {@link JsonRpcError} class.
     */
    parse: <T extends DataWithOptionalCause>(arg?: JsonRpcErrorsArg<T> | undefined) => JsonRpcError<T>;
    /**
     * Get a JSON RPC 2.0 Invalid Request (-32600) error.
     *
     * @param arg - The error message or options bag.
     * @returns An instance of the {@link JsonRpcError} class.
     */
    invalidRequest: <T_1 extends DataWithOptionalCause>(arg?: JsonRpcErrorsArg<T_1> | undefined) => JsonRpcError<T_1>;
    /**
     * Get a JSON RPC 2.0 Invalid Params (-32602) error.
     *
     * @param arg - The error message or options bag.
     * @returns An instance of the {@link JsonRpcError} class.
     */
    invalidParams: <T_2 extends DataWithOptionalCause>(arg?: JsonRpcErrorsArg<T_2> | undefined) => JsonRpcError<T_2>;
    /**
     * Get a JSON RPC 2.0 Method Not Found (-32601) error.
     *
     * @param arg - The error message or options bag.
     * @returns An instance of the {@link JsonRpcError} class.
     */
    methodNotFound: <T_3 extends DataWithOptionalCause>(arg?: JsonRpcErrorsArg<T_3> | undefined) => JsonRpcError<T_3>;
    /**
     * Get a JSON RPC 2.0 Internal (-32603) error.
     *
     * @param arg - The error message or options bag.
     * @returns An instance of the {@link JsonRpcError} class.
     */
    internal: <T_4 extends DataWithOptionalCause>(arg?: JsonRpcErrorsArg<T_4> | undefined) => JsonRpcError<T_4>;
    /**
     * Get a JSON RPC 2.0 Server error.
     * Permits integer error codes in the [ -32099 <= -32005 ] range.
     * Codes -32000 through -32004 are reserved by EIP-1474.
     *
     * @param opts - The error options bag.
     * @returns An instance of the {@link JsonRpcError} class.
     */
    server: <T_5 extends DataWithOptionalCause>(opts: ServerErrorOptions<T_5>) => JsonRpcError<T_5>;
    /**
     * Get an Ethereum JSON RPC Invalid Input (-32000) error.
     *
     * @param arg - The error message or options bag.
     * @returns An instance of the {@link JsonRpcError} class.
     */
    invalidInput: <T_6 extends DataWithOptionalCause>(arg?: JsonRpcErrorsArg<T_6> | undefined) => JsonRpcError<T_6>;
    /**
     * Get an Ethereum JSON RPC Resource Not Found (-32001) error.
     *
     * @param arg - The error message or options bag.
     * @returns An instance of the {@link JsonRpcError} class.
     */
    resourceNotFound: <T_7 extends DataWithOptionalCause>(arg?: JsonRpcErrorsArg<T_7> | undefined) => JsonRpcError<T_7>;
    /**
     * Get an Ethereum JSON RPC Resource Unavailable (-32002) error.
     *
     * @param arg - The error message or options bag.
     * @returns An instance of the {@link JsonRpcError} class.
     */
    resourceUnavailable: <T_8 extends DataWithOptionalCause>(arg?: JsonRpcErrorsArg<T_8> | undefined) => JsonRpcError<T_8>;
    /**
     * Get an Ethereum JSON RPC Transaction Rejected (-32003) error.
     *
     * @param arg - The error message or options bag.
     * @returns An instance of the {@link JsonRpcError} class.
     */
    transactionRejected: <T_9 extends DataWithOptionalCause>(arg?: JsonRpcErrorsArg<T_9> | undefined) => JsonRpcError<T_9>;
    /**
     * Get an Ethereum JSON RPC Method Not Supported (-32004) error.
     *
     * @param arg - The error message or options bag.
     * @returns An instance of the {@link JsonRpcError} class.
     */
    methodNotSupported: <T_10 extends DataWithOptionalCause>(arg?: JsonRpcErrorsArg<T_10> | undefined) => JsonRpcError<T_10>;
    /**
     * Get an Ethereum JSON RPC Limit Exceeded (-32005) error.
     *
     * @param arg - The error message or options bag.
     * @returns An instance of the {@link JsonRpcError} class.
     */
    limitExceeded: <T_11 extends DataWithOptionalCause>(arg?: JsonRpcErrorsArg<T_11> | undefined) => JsonRpcError<T_11>;
};
export declare const providerErrors: {
    /**
     * Get an Ethereum Provider User Rejected Request (4001) error.
     *
     * @param arg - The error message or options bag.
     * @returns An instance of the {@link EthereumProviderError} class.
     */
    userRejectedRequest: <T extends DataWithOptionalCause>(arg?: JsonRpcErrorsArg<T> | undefined) => EthereumProviderError<T>;
    /**
     * Get an Ethereum Provider Unauthorized (4100) error.
     *
     * @param arg - The error message or options bag.
     * @returns An instance of the {@link EthereumProviderError} class.
     */
    unauthorized: <T_1 extends DataWithOptionalCause>(arg?: JsonRpcErrorsArg<T_1> | undefined) => EthereumProviderError<T_1>;
    /**
     * Get an Ethereum Provider Unsupported Method (4200) error.
     *
     * @param arg - The error message or options bag.
     * @returns An instance of the {@link EthereumProviderError} class.
     */
    unsupportedMethod: <T_2 extends DataWithOptionalCause>(arg?: JsonRpcErrorsArg<T_2> | undefined) => EthereumProviderError<T_2>;
    /**
     * Get an Ethereum Provider Not Connected (4900) error.
     *
     * @param arg - The error message or options bag.
     * @returns An instance of the {@link EthereumProviderError} class.
     */
    disconnected: <T_3 extends DataWithOptionalCause>(arg?: JsonRpcErrorsArg<T_3> | undefined) => EthereumProviderError<T_3>;
    /**
     * Get an Ethereum Provider Chain Not Connected (4901) error.
     *
     * @param arg - The error message or options bag.
     * @returns An instance of the {@link EthereumProviderError} class.
     */
    chainDisconnected: <T_4 extends DataWithOptionalCause>(arg?: JsonRpcErrorsArg<T_4> | undefined) => EthereumProviderError<T_4>;
    /**
     * Get a custom Ethereum Provider error.
     *
     * @param opts - The error options bag.
     * @returns An instance of the {@link EthereumProviderError} class.
     */
    custom: <T_5 extends DataWithOptionalCause>(opts: CustomErrorArg<T_5>) => EthereumProviderError<T_5>;
};
export {};
