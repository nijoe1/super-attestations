{
  "version": 3,
  "sources": ["../src/index.ts", "../esbuild/react-shim.js", "../src/hooks/useIDKit.ts", "../src/lang/index.ts", "../src/store/idkit.ts", "../src/types/app.ts", "../src/types/index.ts", "../src/lib/telemetry.ts", "../src/components/QRCode.tsx", "../src/lib/hashing.ts", "../src/components/IDKitWidget/index.tsx", "../src/components/IDKitWidget/BaseWidget.tsx", "stylePlugin:/Users/m1guelpf/Code/idkit-playground/idkit/build/index.css", "../src/hooks/useMedia.ts", "../src/lib/utils.ts", "../src/components/Icons/XMarkIcon.tsx", "../src/components/IDKitWidget/States/ErrorState.tsx", "../src/components/Icons/LoadingIcon.tsx", "../src/components/WorldIDIcon.tsx", "../src/components/Icons/InfoIcon.tsx", "../src/components/IDKitWidget/States/PrivacyState.tsx", "../src/components/Icons/CheckIcon.tsx", "../src/components/IDKitWidget/States/SuccessState.tsx", "../src/components/IDKitWidget/States/WorldID/QRState.tsx", "../src/components/Icons/WorldcoinIcon.tsx", "../src/components/IDKitWidget/States/WorldIDState.tsx", "../src/components/Icons/LockIcon.tsx", "../src/components/Icons/HumanIcon.tsx", "../src/components/AboutWorldID.tsx", "../src/services/walletconnect.ts", "../src/lib/qr.ts", "../src/lib/consts.ts", "../src/components/Icons/DevicePhoneMobileIcon.tsx", "../src/components/Icons/WorldIDWordmark.tsx", "../src/components/Icons/ArrowLongLeftIcon.tsx", "../src/components/IDKitWidget/experimental/states/EnterPhoneState.tsx", "../src/components/PhoneInput.tsx", "../src/components/IDKitWidget/experimental/components/CountryCodeSelect.tsx", "../src/components/Icons/ChevronDownIcon.tsx", "../src/services/phone.ts", "../src/components/IDKitWidget/experimental/states/VerifyCodeState.tsx", "../src/components/ResendButton.tsx", "../src/components/SMSCodeInput.tsx", "../src/components/IDKitWidget/experimental/states/SelectMethodState.tsx", "../src/components/IDKitWidget/States/HostAppVerificationState.tsx", "../stitches.config.ts", "../src/components/SignInButton.tsx", "../src/components/SignInWithWorldID.tsx"],
  "sourcesContent": ["import useIDKit from './hooks/useIDKit'\nimport { CredentialType } from '@/types'\nimport QRCode from './components/QRCode'\nimport type { ISuccessResult } from '@/types'\nimport { solidityEncode } from './lib/hashing'\nimport IDKitWidget from '@/components/IDKitWidget'\nimport SignInButton from './components/SignInButton'\nimport useAppConnection from '@/services/walletconnect'\nimport type { WidgetProps, Config } from '@/types/config'\nimport { VerificationState, AppErrorCodes } from './types/app'\nimport SignInWithWorldID from './components/SignInWithWorldID'\nimport { hashToField, validateABILikeEncoding, generateExternalNullifier } from './lib/hashing'\n\n// NOTE: For internal use in other Worldcoin packages\nconst internal = {\n\thashToField,\n\tvalidateABILikeEncoding,\n\tgenerateExternalNullifier,\n\tQRCode,\n\tuseAppConnection,\n\tVerificationState,\n\tAppErrorCodes,\n}\n\nexport { IDKitWidget, useIDKit, solidityEncode, internal, SignInWithWorldID, CredentialType, SignInButton }\nexport type { ISuccessResult, Config, WidgetProps }\n", "import * as React from 'react'\nexport { React }\n", "import { useEffect } from 'react'\nimport useIDKitStore from '@/store/idkit'\nimport { shallow } from 'zustand/shallow'\nimport type { Config } from '@/types/config'\nimport { ConfigSource } from '@/types/config'\nimport type { IDKitStore } from '@/store/idkit'\n\ntype HookConfig = Partial<Pick<Config, 'handleVerify' | 'onSuccess'>>\n\nconst getStore = ({ open, onOpenChange, addSuccessCallback, addVerificationCallback }: IDKitStore) => ({\n\topen,\n\tonOpenChange,\n\taddSuccessCallback,\n\taddVerificationCallback,\n})\n\nconst useIDKit = ({ handleVerify, onSuccess }: HookConfig = {}) => {\n\tconst { open, onOpenChange, addSuccessCallback, addVerificationCallback } = useIDKitStore(getStore, shallow)\n\n\tuseEffect(() => {\n\t\tif (onSuccess) addSuccessCallback(onSuccess, ConfigSource.HOOK)\n\t\tif (handleVerify) addVerificationCallback(handleVerify, ConfigSource.HOOK)\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [handleVerify, onSuccess])\n\n\treturn { open, setOpen: onOpenChange }\n}\n\nexport default useIDKit\n", "const translations: Record<string, Record<string, string> | undefined> = {}\n\nconst getLang = (): Record<string, string> | undefined => {\n\tif (typeof navigator === 'undefined') return\n\n\tconst supportedLang = navigator.languages.find(l => translations[l] != undefined) ?? ''\n\n\treturn translations[supportedLang]\n}\n\ntype CleanWord<T> = T extends `${string}${' ' | ',' | '!' | '?' | '.' | '`'}${string}`\n\t? never\n\t: T extends ''\n\t? never\n\t: T\n\ntype ExtractPlaceholders<S extends string> = S extends `${string}:${infer Placeholder}`\n\t? Placeholder extends `${infer Word}${' ' | ',' | '!' | '?' | '.' | '`'}${infer Rest}`\n\t\t? CleanWord<Word> | ExtractPlaceholders<Rest>\n\t\t: never\n\t: never\n\ntype NoPlaceholder<S extends string> = S extends `${string}:${string}` ? never : S\ntype PlaceholderValues<S extends string> = { [K in ExtractPlaceholders<S>]: string }\n\nconst replaceParams = <T extends string>(str: T, params?: PlaceholderValues<T>): string => {\n\tlet replaced: string = str\n\tfor (const [key, value] of Object.entries(params ?? {})) replaced = str.replace(`:${key}`, value as string)\n\n\treturn replaced\n}\n\nexport function __<S extends `${string}:${string}`>(str: S, params: PlaceholderValues<S>): string\nexport function __<S extends string>(str: NoPlaceholder<S>): string\nexport function __<S extends string>(str: S, params?: PlaceholderValues<S>): string {\n\tif (typeof navigator === 'undefined') return str\n\n\treturn replaceParams(getLang()?.[str] ?? str, params)\n}\n", "import { __ } from '@/lang'\nimport { create } from 'zustand'\nimport { AppErrorCodes } from '@/types/app'\nimport { CredentialType, IDKITStage } from '@/types'\nimport { telemetryModalOpened } from '@/lib/telemetry'\nimport type { VerificationMethods } from '@/types/config'\nimport type { Config, ConfigSource, IDKitConfig } from '@/types/config'\nimport type { CallbackFn, IErrorState, IExperimentalSuccessResult, ISuccessResult } from '@/types'\n\nexport type IDKitStore = {\n\tapp_id: IDKitConfig['app_id']\n\taction: IDKitConfig['action']\n\tsignal: IDKitConfig['signal']\n\taction_description?: IDKitConfig['action_description']\n\twalletConnectProjectId?: IDKitConfig['walletConnectProjectId']\n\tcredential_types?: IDKitConfig['credential_types']\n\tphoneNumber: string // EXPERIMENTAL\n\n\tcode: string\n\topen: boolean\n\tstage: IDKITStage\n\tautoClose: boolean\n\tprocessing: boolean\n\ttheme: Config['theme']\n\tresult: IExperimentalSuccessResult | ISuccessResult | null\n\tmethods: VerificationMethods[]\n\terrorState: IErrorState | null\n\tverifyCallbacks:\n\t\t| Record<ConfigSource, CallbackFn<IExperimentalSuccessResult> | CallbackFn<ISuccessResult> | undefined>\n\t\t| Record<string, never>\n\tsuccessCallbacks:\n\t\t| Record<ConfigSource, CallbackFn<IExperimentalSuccessResult> | CallbackFn<ISuccessResult> | undefined>\n\t\t| Record<string, never>\n\n\tcomputed: {\n\t\tcanGoBack: (stage: IDKITStage) => boolean\n\t\tgetDefaultStage: (methods?: Config['experimental_methods']) => IDKITStage\n\t}\n\n\tretryFlow: () => void\n\tsetCode: (code: string) => void\n\tsetStage: (stage: IDKITStage) => void\n\tonOpenChange: (open: boolean) => void\n\tsetProcessing: (processing: boolean) => void\n\thandleVerify: (result: IExperimentalSuccessResult | ISuccessResult) => void\n\tsetErrorState: (state: IErrorState | null) => void\n\tsetOptions: (options: Config, source: ConfigSource) => void\n\taddSuccessCallback: (\n\t\tcb: CallbackFn<IExperimentalSuccessResult> | CallbackFn<ISuccessResult>,\n\t\tsource: ConfigSource\n\t) => void\n\taddVerificationCallback: (\n\t\tcb: CallbackFn<IExperimentalSuccessResult> | CallbackFn<ISuccessResult>,\n\t\tsource: ConfigSource\n\t) => void\n\tsetPhoneNumber: (phoneNumber: string) => void // EXPERIMENTAL\n}\n\nconst useIDKitStore = create<IDKitStore>()((set, get) => ({\n\tapp_id: '',\n\tsignal: '',\n\taction: '',\n\tphoneNumber: '', // EXPERIMENTAL\n\tmethods: [],\n\taction_description: '',\n\twalletConnectProjectId: '',\n\tcredential_types: [],\n\n\topen: false,\n\tcode: '',\n\tresult: null,\n\ttheme: 'light',\n\terrorTitle: '',\n\terrorDetail: '',\n\tautoClose: true,\n\terrorState: null,\n\tprocessing: false,\n\tverifyCallbacks: {},\n\tsuccessCallbacks: {},\n\tstage: IDKITStage.WORLD_ID,\n\n\tcomputed: {\n\t\tcanGoBack: (stage: IDKITStage) => {\n\t\t\tswitch (stage) {\n\t\t\t\tcase IDKITStage.ENTER_PHONE:\n\t\t\t\t\treturn get().methods.includes('orb')\n\t\t\t\tcase IDKITStage.WORLD_ID:\n\t\t\t\t\treturn get().methods.includes('phone')\n\t\t\t\tcase IDKITStage.ENTER_CODE:\n\t\t\t\tcase IDKITStage.PRIVACY:\n\t\t\t\t\treturn true\n\t\t\t\tdefault:\n\t\t\t\t\treturn false\n\t\t\t}\n\t\t},\n\t\tgetDefaultStage: (methods?: Config['experimental_methods']) => {\n\t\t\tmethods = methods ?? get().methods\n\n\t\t\tif (methods.length > 1) return IDKITStage.SELECT_METHOD\n\t\t\treturn methods[0] === 'phone' ? IDKITStage.ENTER_PHONE : IDKITStage.WORLD_ID\n\t\t},\n\t},\n\n\tsetCode: code => set({ code }),\n\tsetStage: stage => set({ stage }),\n\tsetErrorState: errorState => set({ errorState }),\n\tsetProcessing: (processing: boolean) => set({ processing }),\n\tsetPhoneNumber: phoneNumber => set({ phoneNumber }),\n\tretryFlow: () => {\n\t\tif (get().methods.length === 1) {\n\t\t\tset({ stage: get().computed.getDefaultStage(), errorState: null })\n\t\t}\n\n\t\tset({ stage: IDKITStage.SELECT_METHOD, errorState: null })\n\t},\n\taddSuccessCallback: (\n\t\tcb: CallbackFn<IExperimentalSuccessResult> | CallbackFn<ISuccessResult>,\n\t\tsource: ConfigSource\n\t) => {\n\t\tset(state => {\n\t\t\tstate.successCallbacks[source] = cb\n\n\t\t\treturn state\n\t\t})\n\t},\n\taddVerificationCallback: (\n\t\tcb: CallbackFn<IExperimentalSuccessResult> | CallbackFn<ISuccessResult>,\n\t\tsource: ConfigSource\n\t) => {\n\t\tset(state => {\n\t\t\tstate.verifyCallbacks[source] = cb\n\n\t\t\treturn state\n\t\t})\n\t},\n\tsetOptions: (\n\t\t{\n\t\t\thandleVerify,\n\t\t\tonSuccess,\n\t\t\tsignal,\n\t\t\taction,\n\t\t\tapp_id,\n\t\t\tcredential_types,\n\t\t\taction_description,\n\t\t\texperimental_methods,\n\t\t\twalletConnectProjectId,\n\t\t\tautoClose,\n\t\t\ttheme,\n\t\t}: Config,\n\t\tsource: ConfigSource\n\t) => {\n\t\tconst sanitized_credential_types = credential_types?.filter(type =>\n\t\t\tObject.values(CredentialType).includes(type)\n\t\t)\n\n\t\tconst hasUpdatedMethods = experimental_methods && experimental_methods !== get().methods\n\n\t\tset(store => ({\n\t\t\ttheme,\n\t\t\tsignal,\n\t\t\taction,\n\t\t\tapp_id,\n\t\t\tautoClose,\n\t\t\twalletConnectProjectId,\n\t\t\tcredential_types: sanitized_credential_types,\n\t\t\taction_description,\n\t\t\tmethods: experimental_methods ?? store.methods,\n\t\t\tstage: hasUpdatedMethods ? store.computed.getDefaultStage(experimental_methods) : get().stage,\n\t\t}))\n\n\t\tget().addSuccessCallback(onSuccess, source)\n\t\tif (handleVerify) get().addVerificationCallback(handleVerify, source)\n\t},\n\thandleVerify: (result: IExperimentalSuccessResult | ISuccessResult) => {\n\t\tset({ stage: IDKITStage.HOST_APP_VERIFICATION, processing: false })\n\n\t\tPromise.all(\n\t\t\tObject.values(get().verifyCallbacks).map(cb =>\n\t\t\t\t(cb as CallbackFn<IExperimentalSuccessResult | ISuccessResult>)(result)\n\t\t\t)\n\t\t).then(\n\t\t\t() => {\n\t\t\t\tset({ stage: IDKITStage.SUCCESS, result })\n\n\t\t\t\tif (get().autoClose) setTimeout(() => get().onOpenChange(false), 1000)\n\t\t\t},\n\t\t\tresponse => {\n\t\t\t\tlet errorMessage: string | undefined = undefined\n\t\t\t\tif (response && typeof response === 'object' && (response as Record<string, unknown>).message) {\n\t\t\t\t\terrorMessage = (response as Record<string, unknown>).message as string\n\t\t\t\t}\n\n\t\t\t\tset({\n\t\t\t\t\tstage: IDKITStage.ERROR,\n\t\t\t\t\terrorState: {\n\t\t\t\t\t\tcode: AppErrorCodes.FailedByHostApp,\n\t\t\t\t\t\tmessage: errorMessage ? __(errorMessage) : undefined,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t}\n\t\t)\n\t},\n\tonOpenChange: open => {\n\t\tif (open) {\n\t\t\ttelemetryModalOpened()\n\t\t\treturn set({ open })\n\t\t}\n\n\t\tif (get().stage == IDKITStage.SUCCESS) {\n\t\t\tconst result = get().result\n\t\t\tconst callbacks = get().successCallbacks\n\n\t\t\tif (result)\n\t\t\t\trequestAnimationFrame(() =>\n\t\t\t\t\tObject.values(callbacks).forEach(\n\t\t\t\t\t\tcb => void (cb as CallbackFn<IExperimentalSuccessResult | ISuccessResult>)(result)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t}\n\n\t\tset({\n\t\t\topen,\n\t\t\tcode: '',\n\t\t\tresult: null,\n\t\t\terrorState: null,\n\t\t\tprocessing: false,\n\t\t\tstage: get().computed.getDefaultStage(),\n\t\t})\n\t},\n}))\n\nexport default useIDKitStore\n", "export enum AppErrorCodes {\n\tConnectionFailed = 'connection_failed',\n\tVerificationRejected = 'verification_rejected',\n\tMaxVerificationsReached = 'max_verifications_reached',\n\tAlreadySigned = 'already_signed', // NOTE: Deprecated, handled for backwards compatibility\n\tCredentialUnavailable = 'credential_unavailable',\n\tMalformedRequest = 'malformed_request',\n\tInvalidNetwork = 'invalid_network',\n\tInclusionProofFailed = 'inclusion_proof_failed',\n\tInclusionProofPending = 'inclusion_proof_pending',\n\tUnexpectedResponse = 'unexpected_response', // NOTE: when the World app returns an unexpected response\n\tFailedByHostApp = 'failed_by_host_app', // NOTE: Host app failed/rejected verification (does not come from World App / simulator)\n\tGenericError = 'generic_error',\n\tInvalidPhoneOTP = 'invalid_phone_otp', // NOTE: Experimental, only for phone verification\n}\n\nexport enum VerificationState {\n\tLoadingWidget = 'loading_widget',\n\tAwaitingConnection = 'awaiting_connection',\n\tAwaitingVerification = 'awaiting_verification',\n\tConfirmed = 'confirmed',\n\tFailed = 'failed',\n}\n", "import type { AppErrorCodes } from './app'\nimport type { VerificationMethods } from './config'\n\ndeclare const brand: unique symbol\ntype Brand<T, TBrand extends string> = T & { [brand]: TBrand }\n\nexport type AbiEncodedValue = Brand<{ types: string[]; values: unknown[] }, 'AbiEncodedValue'>\n\nexport enum IDKITStage {\n\tSELECT_METHOD = 'SELECT_METHOD', // EXPERIMENTAL\n\tENTER_PHONE = 'ENTER_PHONE', // EXPERIMENTAL\n\tENTER_CODE = 'ENTER_CODE', // EXPERIMENTAL\n\tWORLD_ID = 'WORLD_ID',\n\tPRIVACY = 'PRIVACY',\n\tSUCCESS = 'SUCCESS',\n\tERROR = 'ERROR',\n\tHOST_APP_VERIFICATION = 'HOST_APP_VERIFICATION',\n}\n\nexport enum CredentialType {\n\tOrb = 'orb',\n\tPhone = 'phone',\n}\n\nexport interface IExperimentalSuccessResult {\n\tnullifier_hash: string\n\tcredential_type: VerificationMethods\n\tproof_payload: OrbSignalProof | PhoneSignalProof\n}\n\nexport interface ISuccessResult {\n\tproof: string\n\tmerkle_root: string\n\tnullifier_hash: string\n\tcredential_type: CredentialType\n}\n\nexport type CallbackFn<T> = (result: T) => Promise<void> | void\n\n// Error response received from World app through WalletConnect\nexport interface ExpectedErrorResponse {\n\tmessage: string\n\tstack: string\n}\n\nexport interface IErrorState {\n\tcode: AppErrorCodes\n\tmessage?: string\n}\n\n// ANCHOR: Experimental\n\nexport enum PhoneVerificationChannel {\n\tSMS = 'sms',\n\tCall = 'call',\n}\n\nexport enum PhoneRequestErrorCodes {\n\tMAX_ATTEMPTS = 'max_attempts',\n\tTIMEOUT = 'timeout',\n\tUNSUPPORTED_COUNTRY = 'unsupported_country',\n\tSERVER_ERROR = 'server_error',\n}\n\nexport interface OrbSignalProof {\n\tmerkle_root: string\n\tproof: string\n}\nexport interface PhoneSignalProof {\n\ttimestamp: number\n\tsignature: string\n}\n", "import { PostHog } from 'posthog-js-lite'\nimport type { PhoneVerificationChannel } from '@/types'\n\n// Set at build time\ndeclare const IDKitVersion: string\n\nfunction factoryPostHogFetchError(error: unknown) {\n\treturn { name: 'telemetry-error', error }\n}\n\nif (typeof globalThis.window !== 'undefined') {\n\twindow.onunhandledrejection = function (event) {\n\t\treturn (event.reason as Record<string, unknown>).name !== 'telemetry-error'\n\t}\n}\n\nasync function posthogFetch(input: RequestInfo, init?: RequestInit): Promise<Response> {\n\ttry {\n\t\treturn await fetch(input, init)\n\t} catch (error) {\n\t\tthrow factoryPostHogFetchError(error)\n\t}\n}\n\nlet posthog: PostHog | null = null\n\nif (typeof globalThis.window !== 'undefined') {\n\tposthog = new PostHog(\n\t\t'phc_QttqgDbMQDYHX1EMH7FnT6ECBVzdp0kGUq92aQaVQ6I', // cspell:disable-line\n\t\t{ persistence: 'memory' }\n\t)\n\tposthog.fetch = posthogFetch\n}\n\n// Attributes sent on all events\nconst SUPER_PROPS = { version: IDKitVersion, package: 'idkit-js' }\n\nexport const getTelemetryId = (): string => {\n\treturn posthog?.getDistinctId() ?? ''\n}\n\nexport const initTelemetry = (enableTelemetry?: boolean): void => {\n\tif (enableTelemetry) {\n\t\tposthog?.capture('idkit loaded', SUPER_PROPS)\n\t} else {\n\t\tposthog?.optOut()\n\t}\n}\n\nexport const telemetryModalOpened = (): void => {\n\tposthog?.capture('idkit opened', SUPER_PROPS)\n}\n\nexport const telemetryPhoneTyped = (): void => {\n\tposthog?.capture('idkit phone typed', SUPER_PROPS)\n}\n\nexport const telemetryRetryCode = (channel: PhoneVerificationChannel): void => {\n\tposthog?.capture('idkit phone code retried', { ...SUPER_PROPS, channel })\n}\n", "import QRCodeUtil from 'qrcode';\nimport { memo, useMemo } from 'react';\nimport type { ReactElement } from 'react';\nconst generateMatrix = (data: string): Array<number[]> => {\n  const arr = QRCodeUtil.create(data, {\n    errorCorrectionLevel: 'M'\n  }).modules.data;\n  const sqrt = Math.sqrt(arr.length);\n  return arr.reduce((rows, key, index) => {\n    if (index % sqrt === 0) rows.push([key]);else rows[rows.length - 1].push(key);\n    return rows;\n  }, ([] as Array<number[]>));\n};\ntype Props = {\n  data: string;\n  size?: number;\n};\nconst Qrcode = ({\n  data,\n  size = 300\n}: Props) => {\n  const dots = useMemo(() => {\n    const dots: ReactElement[] = [];\n    const matrix = generateMatrix(data);\n    const cellSize = size / matrix.length;\n    const qrList = [{\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }];\n    qrList.forEach(({\n      x,\n      y\n    }) => {\n      const x1 = (matrix.length - 7) * cellSize * x;\n      const y1 = (matrix.length - 7) * cellSize * y;\n      for (let i = 0; i < 3; i++) {\n        dots.push(<rect fill=\"currentColor\" x={x1 + cellSize * i} y={y1 + cellSize * i} key={`${i}-${x}-${y}`} width={cellSize * (7 - i * 2)} height={cellSize * (7 - i * 2)} rx={(i - 2) * -5} // calculated border radius for corner squares\n        ry={(i - 2) * -5} // calculated border radius for corner squares\n        className={i % 3 === 0 ? 'text-black' : i % 3 === 1 ? 'text-white' : 'text-black'} />);\n      }\n    });\n    matrix.forEach((row, i) => {\n      row.forEach((_, j) => {\n        if (!matrix[i][j]) return;\n        if (i < 7 && j < 7 || i > matrix.length - 8 && j < 7 || i < 7 && j > matrix.length - 8) return;\n        dots.push(<circle fill=\"currentColor\" r={cellSize / 3} key={`circle-${i}-${j}`} cx={i * cellSize + cellSize / 2} cy={j * cellSize + cellSize / 2} className=\"text-black dark:text-white\" />);\n      });\n    });\n    return dots;\n  }, [size, data]);\n  return <svg height={size} width={size}>\n\t\t\t{dots}\n\t\t</svg>;\n};\nexport default memo(Qrcode);", "import type { ByteArray } from 'viem'\nimport type { AbiEncodedValue } from '@/types'\nimport type { IDKitConfig } from '@/types/config'\nimport { encodePacked, keccak256, isBytes, isHex, toHex } from 'viem'\n\nexport type HashFunctionOutput = { hash: BigInt; digest: `0x${string}` }\n\n/**\n * Hashes an input using the `keccak256` hashing function used across the World ID protocol, to be used as\n * a ZKP input. The function will try to determine the best hashing mechanism, if the string already looks like hex-encoded\n * bytes (e.g. `0x0000000000000000000000000000000000000000`), it will be hashed directly.\n * @param input Any string, hex-like string, bytes represented as a hex string.\n * @returns\n */\nexport function hashToField(input: Uint8Array | string | `0x${string}`): HashFunctionOutput {\n\tif (isBytes(input) || isHex(input)) return hashEncodedBytes(input)\n\n\treturn hashEncodedBytes(toHex(input))\n}\n\nexport function packAndEncode(input: [string, unknown][]): HashFunctionOutput {\n\tconst [types, values] = input.reduce<[string[], unknown[]]>(\n\t\t([types, values], [type, value]) => {\n\t\t\ttypes.push(type)\n\t\t\tvalues.push(value)\n\n\t\t\treturn [types, values]\n\t\t},\n\t\t[[], []]\n\t)\n\n\treturn hashEncodedBytes(encodePacked(types, values))\n}\n\n/**\n * Hashes raw bytes input using the `keccak256` hashing function used across the World ID protocol, to be used as\n * a ZKP input. Example use cases include when you're hashing an address to be verified in a smart contract.\n * @param input - Bytes represented as a hex string.\n * @returns\n */\nfunction hashEncodedBytes(input: ByteArray | `0x${string}`): HashFunctionOutput {\n\tconst hash = BigInt(keccak256(input)) >> BigInt(8)\n\tconst rawDigest = hash.toString(16)\n\n\treturn { hash, digest: `0x${rawDigest.padStart(64, '0')}` }\n}\n\nexport const validateABILikeEncoding = (value: string): boolean => {\n\tconst ABI_REGEX = /^0x[\\dabcdef]+$/\n\treturn !!value.toString().match(ABI_REGEX) && value.length >= 66 // Because `0` contains 66 characters\n}\n\nexport const solidityEncode = (types: string[], values: unknown[]): AbiEncodedValue => {\n\tif (types.length !== values.length) {\n\t\tthrow new Error('Types and values arrays must have the same length.')\n\t}\n\n\treturn { types, values } as AbiEncodedValue\n}\n\nexport const generateSignal = (signal: IDKitConfig['signal']): HashFunctionOutput => {\n\tif (!signal || typeof signal === 'string') return hashToField(signal ?? '')\n\n\treturn packAndEncode(signal.types.map((type, index) => [type, signal.values[index]]))\n}\n\nexport const generateExternalNullifier = (\n\tapp_id: IDKitConfig['app_id'],\n\taction: IDKitConfig['action']\n): HashFunctionOutput => {\n\tif (!action) return packAndEncode([['uint256', hashToField(app_id).hash]])\n\tif (typeof action === 'string') action = solidityEncode(['string'], [action])\n\n\treturn packAndEncode([\n\t\t['uint256', hashToField(app_id).hash],\n\t\t...action.types.map((type, index) => [type, (action as AbiEncodedValue).values[index]] as [string, unknown]),\n\t])\n}\n\nexport const encodeAction = (action: IDKitConfig['action']): string => {\n\tif (!action) return ''\n\tif (typeof action === 'string') return action\n\n\treturn action.types.map((type, index) => `${type}(${action.values[index]})`).join(',')\n}\n", "import { memo } from 'react';\nimport IDKitWidget from './BaseWidget';\nexport default memo(IDKitWidget);", "import { __ } from '@/lang';\nimport type { FC } from 'react';\nimport root from 'react-shadow';\nimport { IDKITStage } from '@/types';\nimport Styles from '@build/index.css';\nimport useMedia from '@/hooks/useMedia';\nimport { classNames } from '@/lib/utils';\nimport useIDKitStore from '@/store/idkit';\nimport { shallow } from 'zustand/shallow';\nimport XMarkIcon from '../Icons/XMarkIcon';\nimport ErrorState from './States/ErrorState';\nimport { ConfigSource } from '@/types/config';\nimport LoadingIcon from '../Icons/LoadingIcon';\nimport * as Toast from '@radix-ui/react-toast';\nimport type { IDKitStore } from '@/store/idkit';\nimport PrivacyState from './States/PrivacyState';\nimport SuccessState from './States/SuccessState';\nimport WorldIDState from './States/WorldIDState';\nimport * as Dialog from '@radix-ui/react-dialog';\nimport type { WidgetProps } from '@/types/config';\nimport { Fragment, useEffect, useMemo } from 'react';\nimport WorldIDWordmark from '../Icons/WorldIDWordmark';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport ArrowLongLeftIcon from '../Icons/ArrowLongLeftIcon';\nimport EnterPhoneState from './experimental/states/EnterPhoneState';\nimport VerifyCodeState from './experimental/states/VerifyCodeState';\nimport SelectMethodState from './experimental/states/SelectMethodState';\nimport HostAppVerificationState from './States/HostAppVerificationState';\nconst getParams = ({\n  open,\n  processing,\n  onOpenChange,\n  stage,\n  setStage,\n  theme,\n  computed,\n  setOptions\n}: IDKitStore) => ({\n  stage,\n  theme,\n  setStage,\n  processing,\n  setOptions,\n  isOpen: open,\n  onOpenChange,\n  canGoBack: computed.canGoBack(stage),\n  defaultStage: computed.getDefaultStage()\n});\nconst IDKitWidget: FC<WidgetProps> = ({\n  children,\n  ...config\n}) => {\n  const {\n    isOpen,\n    onOpenChange,\n    processing,\n    stage,\n    setStage,\n    canGoBack,\n    defaultStage,\n    setOptions,\n    theme: _theme\n  } = useIDKitStore(getParams, shallow);\n  const media = useMedia();\n  useEffect(() => {\n    setOptions(config, ConfigSource.PROPS);\n  }, [config, setOptions]);\n  const StageContent = useMemo(() => {\n    switch (stage) {\n      case IDKITStage.SELECT_METHOD:\n        return SelectMethodState;\n      case IDKITStage.ENTER_PHONE:\n        return EnterPhoneState;\n      case IDKITStage.WORLD_ID:\n        return WorldIDState;\n      case IDKITStage.ENTER_CODE:\n        return VerifyCodeState;\n      case IDKITStage.SUCCESS:\n        return SuccessState;\n      case IDKITStage.ERROR:\n        return ErrorState;\n      case IDKITStage.PRIVACY:\n        return PrivacyState;\n      case IDKITStage.HOST_APP_VERIFICATION:\n        return HostAppVerificationState;\n      default:\n        throw new Error(__('Invalid IDKitStage.'));\n    }\n  }, [stage]);\n  return <Dialog.Root open={isOpen} onOpenChange={onOpenChange}>\n\t\t\t{children?.({\n      open: () => onOpenChange(true)\n    })}\n\t\t\t<Dialog.Portal forceMount>\n\t\t\t\t<Fragment>\n\t\t\t\t\t<AnimatePresence>\n\t\t\t\t\t\t{isOpen && <root.div mode=\"open\" id=\"idkit-widget\">\n\t\t\t\t\t\t\t\t<Styles />\n\t\t\t\t\t\t\t\t<div id=\"modal\" className={classNames(_theme == 'dark' && 'dark', 'fixed z-10 font-sans')}>\n\t\t\t\t\t\t\t\t\t<Dialog.Overlay asChild>\n\t\t\t\t\t\t\t\t\t\t<motion.div initial={{\n                  opacity: 0\n                }} animate={{\n                  opacity: 1\n                }} exit={{\n                  opacity: 0\n                }} className=\"fixed inset-0 bg-black/50 backdrop-blur-lg\" />\n\t\t\t\t\t\t\t\t\t</Dialog.Overlay>\n\t\t\t\t\t\t\t\t\t<div className=\"fixed inset-0 z-10 overflow-y-hidden md:overflow-y-auto\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"flex min-h-full items-end justify-center text-center md:items-center md:p-4\">\n\t\t\t\t\t\t\t\t\t\t\t<Dialog.Content asChild>\n\t\t\t\t\t\t\t\t\t\t\t\t<motion.div layout={media == 'mobile' ? 'position' : true} exit={media == 'mobile' ? 'initMob' : 'init'} initial={media == 'mobile' ? 'initMob' : 'init'} animate={media == 'mobile' ? 'animateMob' : 'animate'} variants={{\n                      init: {\n                        opacity: 0,\n                        scale: 0.9\n                      },\n                      initMob: {\n                        translateY: '100%'\n                      },\n                      animate: {\n                        opacity: 1,\n                        scale: 1\n                      },\n                      animateMob: {\n                        translateY: 0\n                      }\n                    }} transition={{\n                      layout: {\n                        duration: 0.15\n                      }\n                    }} className={'dark:bg-0d151d relative z-50 w-full rounded-t-2xl bg-white pt-6 shadow focus:outline-none focus-visible:ring focus-visible:ring-purple-500/75 md:max-w-md md:rounded-b-2xl'}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Toast.Provider>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Toast.Viewport className=\"flex justify-center\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"mx-6 mb-12 flex items-center justify-between\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button onClick={() => setStage(defaultStage)} disabled={!canGoBack} className={classNames(!canGoBack && 'invisible pointer-events-none', 'dark:bg-d3dfea/15 flex h-8 w-8 items-center justify-center rounded-full bg-gray-100 dark:text-white')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ArrowLongLeftIcon className=\"w-4\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Dialog.Close className=\"dark:bg-d3dfea/15 flex h-8 w-8 items-center justify-center rounded-full bg-gray-100 dark:text-white\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<XMarkIcon className=\"h-5 w-5\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Dialog.Close>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"relative\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<motion.div className=\"mx-6 mb-6\" layout=\"position\" animate={{\n                            visibility: processing ? 'hidden' : 'visible'\n                          }} transition={{\n                            layout: {\n                              duration: 0.15\n                            }\n                          }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<StageContent />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</motion.div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<AnimatePresence>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{processing && <motion.div className=\"absolute inset-0 flex items-center justify-center pb-10\" initial={{\n                              opacity: 0\n                            }} animate={{\n                              opacity: 1\n                            }} exit={{\n                              opacity: 0\n                            }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<LoadingIcon className=\"h-24 w-24\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</motion.div>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</AnimatePresence>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex items-center justify-between py-3 px-5 md:rounded-b-2xl\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-9eafc0 flex items-center gap-1 text-sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{__('Verified with')}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"https://worldcoin.org/world-id\" target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<WorldIDWordmark className=\"text-0d151d h-4 dark:text-white\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{stage != IDKITStage.PRIVACY ? <button onClick={() => setStage(IDKITStage.PRIVACY)} className=\"text-9eafc0 text-sm hover:underline\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{__('Privacy')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button> : <a target=\"_blank\" href=\"https://docs.worldcoin.org/privacy\" className=\"text-9eafc0 dark:text-9eafc0 text-sm hover:underline\" rel=\"noreferrer\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{__('Learn More')} &rarr;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Toast.Provider>\n\t\t\t\t\t\t\t\t\t\t\t\t</motion.div>\n\t\t\t\t\t\t\t\t\t\t\t</Dialog.Content>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</root.div>}\n\t\t\t\t\t</AnimatePresence>\n\t\t\t\t</Fragment>\n\t\t\t</Dialog.Portal>\n\t\t</Dialog.Root>;\n};\nexport default IDKitWidget;", "\n\t\t\t\t\tconst styles = `@import url(\"https://fonts.googleapis.com/css2?family=Rubik:wght@400;600;700&family=Sora:wght@600&display=swap\");\n/*! tailwindcss v3.2.6 | MIT License | https://tailwindcss.com*/*,:after,:before{border:0 solid #e5e7eb;box-sizing:border-box}:after,:before{--tw-content:\"\"}html{-webkit-text-size-adjust:100%;font-feature-settings:normal;font-family:Rubik,ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5;tab-size:4}body{line-height:inherit;margin:0}hr{border-top-width:1px;color:inherit;height:0}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}button,input,optgroup,select,textarea{color:inherit;font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0}fieldset,legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::placeholder,textarea::placeholder{color:#9ca3af;opacity:1}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}[hidden]{display:none}[multiple],[type=date],[type=datetime-local],[type=email],[type=month],[type=number],[type=password],[type=search],[type=tel],[type=text],[type=time],[type=url],[type=week],select,textarea{--tw-shadow:0 0 #0000;appearance:none;background-color:#fff;border-color:#6b7280;border-radius:0;border-width:1px;font-size:1rem;line-height:1.5rem;padding:.5rem .75rem}[multiple]:focus,[type=date]:focus,[type=datetime-local]:focus,[type=email]:focus,[type=month]:focus,[type=number]:focus,[type=password]:focus,[type=search]:focus,[type=tel]:focus,[type=text]:focus,[type=time]:focus,[type=url]:focus,[type=week]:focus,select:focus,textarea:focus{--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:#2563eb;--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);border-color:#2563eb;box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow);outline:2px solid transparent;outline-offset:2px}input::placeholder,textarea::placeholder{color:#6b7280;opacity:1}::-webkit-datetime-edit-fields-wrapper{padding:0}::-webkit-date-and-time-value{min-height:1.5em}::-webkit-datetime-edit,::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-hour-field,::-webkit-datetime-edit-meridiem-field,::-webkit-datetime-edit-millisecond-field,::-webkit-datetime-edit-minute-field,::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-second-field,::-webkit-datetime-edit-year-field{padding-bottom:0;padding-top:0}select{background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3E%3Cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3E%3C/svg%3E\");background-position:right .5rem center;background-repeat:no-repeat;background-size:1.5em 1.5em;padding-right:2.5rem;-webkit-print-color-adjust:exact;print-color-adjust:exact}[multiple]{background-image:none;background-position:0 0;background-repeat:unset;background-size:initial;padding-right:.75rem;-webkit-print-color-adjust:unset;print-color-adjust:unset}[type=checkbox],[type=radio]{--tw-shadow:0 0 #0000;appearance:none;background-color:#fff;background-origin:border-box;border-color:#6b7280;border-width:1px;color:#2563eb;display:inline-block;flex-shrink:0;height:1rem;padding:0;-webkit-print-color-adjust:exact;print-color-adjust:exact;-webkit-user-select:none;user-select:none;vertical-align:middle;width:1rem}[type=checkbox]{border-radius:0}[type=radio]{border-radius:100%}[type=checkbox]:focus,[type=radio]:focus{--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:2px;--tw-ring-offset-color:#fff;--tw-ring-color:#2563eb;--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow);outline:2px solid transparent;outline-offset:2px}[type=checkbox]:checked,[type=radio]:checked{background-color:currentColor;background-position:50%;background-repeat:no-repeat;background-size:100% 100%;border-color:transparent}[type=checkbox]:checked{background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 16 16' fill='%23fff' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M12.207 4.793a1 1 0 0 1 0 1.414l-5 5a1 1 0 0 1-1.414 0l-2-2a1 1 0 0 1 1.414-1.414L6.5 9.086l4.293-4.293a1 1 0 0 1 1.414 0z'/%3E%3C/svg%3E\")}[type=radio]:checked{background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 16 16' fill='%23fff' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='8' cy='8' r='3'/%3E%3C/svg%3E\")}[type=checkbox]:checked:focus,[type=checkbox]:checked:hover,[type=radio]:checked:focus,[type=radio]:checked:hover{background-color:currentColor;border-color:transparent}[type=checkbox]:indeterminate{background-color:currentColor;background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3E%3Cpath stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3E%3C/svg%3E\");background-position:50%;background-repeat:no-repeat;background-size:100% 100%;border-color:transparent}[type=checkbox]:indeterminate:focus,[type=checkbox]:indeterminate:hover{background-color:currentColor;border-color:transparent}[type=file]{background:unset;border-color:inherit;border-radius:0;border-width:0;font-size:unset;line-height:inherit;padding:0}[type=file]:focus{outline:1px solid ButtonText;outline:1px auto -webkit-focus-ring-color}*,:after,:before{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.container{width:100%}@media (min-width:414px){.container{max-width:414px}}@media (min-width:640px){.container{max-width:640px}}@media (min-width:768px){.container{max-width:768px}}@media (min-width:1024px){.container{max-width:1024px}}@media (min-width:1280px){.container{max-width:1280px}}@media (min-width:1536px){.container{max-width:1536px}}.sr-only{clip:rect(0,0,0,0);border-width:0;height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;white-space:nowrap;width:1px}.pointer-events-none{pointer-events:none}.visible{visibility:visible}.invisible{visibility:hidden}.fixed{position:fixed}.\\\\!absolute{position:absolute!important}.absolute{position:absolute}.relative{position:relative}.inset-0{bottom:0;left:0;right:0;top:0}.inset-px{bottom:1px;left:1px;right:1px;top:1px}.inset-x-0{left:0;right:0}.left-1\\\\/2{left:50%}.top-1\\\\/2{top:50%}.top-full{top:100%}.z-0{z-index:0}.z-10{z-index:10}.z-20{z-index:20}.z-50{z-index:50}.\\\\!-m-px{margin:-1px!important}.mx-2{margin-left:.5rem;margin-right:.5rem}.mx-6{margin-left:1.5rem;margin-right:1.5rem}.-ml-4{margin-left:-1rem}.-mt-1{margin-top:-.25rem}.-mt-5{margin-top:-1.25rem}.-mt-6{margin-top:-1.5rem}.-mt-\\\\[2px\\\\]{margin-top:-2px}.mb-12{margin-bottom:3rem}.mb-2{margin-bottom:.5rem}.mb-6{margin-bottom:1.5rem}.ml-2{margin-left:.5rem}.ml-2\\\\.5{margin-left:.625rem}.mr-1{margin-right:.25rem}.mt-1{margin-top:.25rem}.mt-1\\\\.5{margin-top:.375rem}.mt-2{margin-top:.5rem}.mt-3{margin-top:.75rem}.mt-4{margin-top:1rem}.mt-8{margin-top:2rem}.mt-\\\\[2px\\\\]{margin-top:2px}.block{display:block}.inline-block{display:inline-block}.inline{display:inline}.flex{display:flex}.inline-flex{display:inline-flex}.grid{display:grid}.hidden{display:none}.aspect-\\\\[6\\\\/7\\\\]{aspect-ratio:6/7}.aspect-square{aspect-ratio:1/1}.\\\\!h-px{height:1px!important}.h-1{height:.25rem}.h-1\\\\.5{height:.375rem}.h-12{height:3rem}.h-20{height:5rem}.h-24{height:6rem}.h-3{height:.75rem}.h-4{height:1rem}.h-5{height:1.25rem}.h-6{height:1.5rem}.h-8{height:2rem}.h-\\\\[244px\\\\]{height:244px}.h-\\\\[72px\\\\]{height:72px}.h-auto{height:auto}.h-px{height:1px}.max-h-\\\\[var\\\\(--max-h\\\\2c _0px\\\\)\\\\]{max-height:var(--max-h,0)}.min-h-full{min-height:100%}.\\\\!w-px{width:1px!important}.w-10{width:2.5rem}.w-12{width:3rem}.w-20{width:5rem}.w-24{width:6rem}.w-3{width:.75rem}.w-4{width:1rem}.w-5{width:1.25rem}.w-6{width:1.5rem}.w-8{width:2rem}.w-\\\\[244px\\\\]{width:244px}.w-\\\\[34px\\\\]{width:34px}.w-\\\\[72px\\\\]{width:72px}.w-auto{width:auto}.w-full{width:100%}.min-w-\\\\[calc\\\\(100vw_-_48px\\\\)\\\\]{min-width:calc(100vw - 48px)}.flex-1{flex:1 1 0%}.flex-none{flex:none}.shrink-0{flex-shrink:0}.basis-4{flex-basis:1rem}.-translate-x-1\\\\/2{--tw-translate-x:-50%}.-translate-x-1\\\\/2,.-translate-y-1\\\\/2{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.-translate-y-1\\\\/2{--tw-translate-y:-50%}.scale-x-\\\\[2\\\\.0\\\\]{--tw-scale-x:2.0}.scale-x-\\\\[2\\\\.0\\\\],.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}@keyframes spin{to{transform:rotate(1turn)}}.animate-spin{animation:spin 1s linear infinite}.cursor-pointer{cursor:pointer}.select-none{-webkit-user-select:none;user-select:none}.list-disc{list-style-type:disc}.flex-col{flex-direction:column}.place-items-center{place-items:center}.items-end{align-items:flex-end}.items-center{align-items:center}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.gap-1{gap:.25rem}.gap-4{gap:1rem}.space-x-1>:not([hidden])~:not([hidden]){--tw-space-x-reverse:0;margin-left:calc(.25rem*(1 - var(--tw-space-x-reverse)));margin-right:calc(.25rem*var(--tw-space-x-reverse))}.space-x-2>:not([hidden])~:not([hidden]){--tw-space-x-reverse:0;margin-left:calc(.5rem*(1 - var(--tw-space-x-reverse)));margin-right:calc(.5rem*var(--tw-space-x-reverse))}.space-x-3>:not([hidden])~:not([hidden]){--tw-space-x-reverse:0;margin-left:calc(.75rem*(1 - var(--tw-space-x-reverse)));margin-right:calc(.75rem*var(--tw-space-x-reverse))}.space-x-4>:not([hidden])~:not([hidden]){--tw-space-x-reverse:0;margin-left:calc(1rem*(1 - var(--tw-space-x-reverse)));margin-right:calc(1rem*var(--tw-space-x-reverse))}.space-x-6>:not([hidden])~:not([hidden]){--tw-space-x-reverse:0;margin-left:calc(1.5rem*(1 - var(--tw-space-x-reverse)));margin-right:calc(1.5rem*var(--tw-space-x-reverse))}.space-y-2>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(.5rem*var(--tw-space-y-reverse));margin-top:calc(.5rem*(1 - var(--tw-space-y-reverse)))}.space-y-3>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(.75rem*var(--tw-space-y-reverse));margin-top:calc(.75rem*(1 - var(--tw-space-y-reverse)))}.space-y-4>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(1rem*var(--tw-space-y-reverse));margin-top:calc(1rem*(1 - var(--tw-space-y-reverse)))}.space-y-6>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(1.5rem*var(--tw-space-y-reverse));margin-top:calc(1.5rem*(1 - var(--tw-space-y-reverse)))}.space-y-8>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(2rem*var(--tw-space-y-reverse));margin-top:calc(2rem*(1 - var(--tw-space-y-reverse)))}.\\\\!overflow-hidden{overflow:hidden!important}.overflow-hidden{overflow:hidden}.overflow-y-hidden{overflow-y:hidden}.overflow-y-scroll{overflow-y:scroll}.\\\\!whitespace-nowrap{white-space:nowrap!important}.whitespace-nowrap{white-space:nowrap}.whitespace-pre-wrap{white-space:pre-wrap}.rounded-2xl{border-radius:1rem}.rounded-full{border-radius:9999px}.rounded-lg{border-radius:.5rem}.rounded-md{border-radius:.375rem}.rounded-xl{border-radius:.75rem}.rounded-t-2xl{border-top-left-radius:1rem;border-top-right-radius:1rem}.\\\\!border-0{border-width:0!important}.border{border-width:1px}.border-0{border-width:0}.border-2{border-width:2px}.border-4{border-width:4px}.border-solid{border-style:solid}.border-none{border-style:none}.border-current{border-color:currentColor}.border-f1f5f8{--tw-border-opacity:1;border-color:rgb(241 245 248/var(--tw-border-opacity))}.border-transparent{border-color:transparent}.border-white\\\\/10{border-color:hsla(0,0%,100%,.1)}.border-r-transparent{border-right-color:transparent}.bg-0d151d{--tw-bg-opacity:1;background-color:rgb(13 21 29/var(--tw-bg-opacity))}.bg-0d151d\\\\/5{background-color:rgba(13,21,29,.05)}.bg-\\\\[\\\\#fecaca\\\\]{--tw-bg-opacity:1;background-color:rgb(254 202 202/var(--tw-bg-opacity))}.bg-black{--tw-bg-opacity:1;background-color:rgb(0 0 0/var(--tw-bg-opacity))}.bg-black\\\\/50{background-color:rgba(0,0,0,.5)}.bg-d3dfea\\\\/30{background-color:rgba(211,223,234,.3)}.bg-f2f5f9{--tw-bg-opacity:1;background-color:rgb(242 245 249/var(--tw-bg-opacity))}.bg-gray-100{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.bg-green-100{--tw-bg-opacity:1;background-color:rgb(220 252 231/var(--tw-bg-opacity))}.bg-green-500{--tw-bg-opacity:1;background-color:rgb(34 197 94/var(--tw-bg-opacity))}.bg-indigo-600{--tw-bg-opacity:1;background-color:rgb(79 70 229/var(--tw-bg-opacity))}.bg-red-100{--tw-bg-opacity:1;background-color:rgb(254 226 226/var(--tw-bg-opacity))}.bg-red-500{--tw-bg-opacity:1;background-color:rgb(239 68 68/var(--tw-bg-opacity))}.bg-transparent{background-color:transparent}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity))}.bg-gradient-conic{background-image:conic-gradient(var(--tw-gradient-stops))}.bg-gradient-to-r{background-image:linear-gradient(to right,var(--tw-gradient-stops))}.from-\\\\[\\\\#FF6848\\\\]{--tw-gradient-from:#ff6848;--tw-gradient-to:rgba(255,104,72,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-black{--tw-gradient-from:#000;--tw-gradient-to:transparent;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-f2f5f9{--tw-gradient-from:#f2f5f9;--tw-gradient-to:rgba(242,245,249,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.via-gray-200{--tw-gradient-to:rgba(229,231,235,0);--tw-gradient-stops:var(--tw-gradient-from),#e5e7eb,var(--tw-gradient-to)}.via-white\\\\/30{--tw-gradient-to:hsla(0,0%,100%,0);--tw-gradient-stops:var(--tw-gradient-from),hsla(0,0%,100%,.3),var(--tw-gradient-to)}.to-\\\\[\\\\#4940E0\\\\]{--tw-gradient-to:#4940e0}.to-black{--tw-gradient-to:#000}.to-gray-200{--tw-gradient-to:#e5e7eb}.bg-clip-text{-webkit-background-clip:text;background-clip:text}.\\\\!p-0{padding:0!important}.p-2{padding:.5rem}.p-3{padding:.75rem}.p-5{padding:1.25rem}.px-12{padding-left:3rem;padding-right:3rem}.px-2{padding-left:.5rem;padding-right:.5rem}.px-24{padding-left:6rem;padding-right:6rem}.px-3{padding-left:.75rem;padding-right:.75rem}.px-4{padding-left:1rem;padding-right:1rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.px-8{padding-left:2rem;padding-right:2rem}.py-1{padding-bottom:.25rem;padding-top:.25rem}.py-2{padding-bottom:.5rem;padding-top:.5rem}.py-3{padding-bottom:.75rem;padding-top:.75rem}.py-4{padding-bottom:1rem;padding-top:1rem}.py-6{padding-bottom:1.5rem;padding-top:1.5rem}.pb-10{padding-bottom:2.5rem}.pl-6{padding-left:1.5rem}.pt-6{padding-top:1.5rem}.text-left{text-align:left}.text-center{text-align:center}.align-\\\\[-0\\\\.125em\\\\]{vertical-align:-.125em}.font-sans{font-family:Rubik,ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji}.font-sora{font-family:Sora,ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji}.text-2xl{font-size:1.5rem;line-height:2rem}.text-base{font-size:1rem;line-height:1.5rem}.text-lg{font-size:1.125rem;line-height:1.75rem}.text-sm{font-size:.875rem;line-height:1.25rem}.text-xs{font-size:.75rem;line-height:1rem}.font-medium{font-weight:500}.font-normal{font-weight:400}.font-semibold{font-weight:600}.uppercase{text-transform:uppercase}.text-0d151d{--tw-text-opacity:1;color:rgb(13 21 29/var(--tw-text-opacity))}.text-0d151d\\\\/70{color:rgba(13,21,29,.7)}.text-29343f{--tw-text-opacity:1;color:rgb(41 52 63/var(--tw-text-opacity))}.text-4940e0{--tw-text-opacity:1;color:rgb(73 64 224/var(--tw-text-opacity))}.text-70868f{--tw-text-opacity:1;color:rgb(112 134 143/var(--tw-text-opacity))}.text-9eafc0{--tw-text-opacity:1;color:rgb(158 175 192/var(--tw-text-opacity))}.text-black{--tw-text-opacity:1;color:rgb(0 0 0/var(--tw-text-opacity))}.text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity:1;color:rgb(55 65 81/var(--tw-text-opacity))}.text-gray-900{--tw-text-opacity:1;color:rgb(17 24 39/var(--tw-text-opacity))}.text-indigo-500{--tw-text-opacity:1;color:rgb(99 102 241/var(--tw-text-opacity))}.text-red-400{--tw-text-opacity:1;color:rgb(248 113 113/var(--tw-text-opacity))}.text-red-600{--tw-text-opacity:1;color:rgb(220 38 38/var(--tw-text-opacity))}.text-transparent{color:transparent}.text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.caret-transparent{caret-color:transparent}.opacity-0{opacity:0}.opacity-100{opacity:1}.shadow{--tw-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px -1px rgba(0,0,0,.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color),0 1px 2px -1px var(--tw-shadow-color)}.shadow,.shadow-lg{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color)}.shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0,0,0,.05);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.outline-0{outline-width:0}.ring{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring,.ring-1{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.ring-1{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring-black\\\\/5{--tw-ring-color:rgba(0,0,0,.05)}.ring-transparent{--tw-ring-color:transparent}.blur{--tw-blur:blur(8px)}.blur,.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.backdrop-blur-lg{--tw-backdrop-blur:blur(16px);-webkit-backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia)}.transition{transition-duration:.15s;transition-property:color,background-color,border-color,outline-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,outline-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,outline-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1)}.transition-colors{transition-duration:.15s;transition-property:color,background-color,border-color,outline-color,text-decoration-color,fill,stroke;transition-timing-function:cubic-bezier(.4,0,.2,1)}.duration-100{transition-duration:.1s}.ease-in{transition-timing-function:cubic-bezier(.4,0,1,1)}.will-change-transform{will-change:transform}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{appearance:none}.\\\\!\\\\[clip\\\\:rect\\\\(0\\\\2c 0\\\\2c 0\\\\2c 0\\\\)\\\\]{clip:rect(0,0,0,0)!important}.placeholder\\\\:text-9eafc0::placeholder{--tw-text-opacity:1;color:rgb(158 175 192/var(--tw-text-opacity))}.focus-within\\\\:border-0d151d:focus-within{--tw-border-opacity:1;border-color:rgb(13 21 29/var(--tw-border-opacity))}.focus-within\\\\:bg-white:focus-within{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity))}.hover\\\\:bg-indigo-700:hover{--tw-bg-opacity:1;background-color:rgb(67 56 202/var(--tw-bg-opacity))}.hover\\\\:underline:hover{text-decoration-line:underline}.focus\\\\:border-transparent:focus{border-color:transparent}.focus\\\\:bg-gray-100:focus{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.focus\\\\:bg-transparent:focus{background-color:transparent}.focus\\\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\\\\:ring-2:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\\\:ring-0d151d:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(13 21 29/var(--tw-ring-opacity))}.focus\\\\:ring-5b52f3:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(91 82 243/var(--tw-ring-opacity))}.focus\\\\:ring-indigo-500:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(99 102 241/var(--tw-ring-opacity))}.focus\\\\:ring-transparent:focus{--tw-ring-color:transparent}.focus\\\\:ring-offset-2:focus{--tw-ring-offset-width:2px}.focus-visible\\\\:ring:focus-visible{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus-visible\\\\:ring-purple-500\\\\/75:focus-visible{--tw-ring-color:rgba(168,85,247,.75)}.disabled\\\\:cursor-not-allowed:disabled{cursor:not-allowed}.disabled\\\\:cursor-wait:disabled{cursor:wait}.disabled\\\\:bg-d3dfea:disabled{--tw-bg-opacity:1;background-color:rgb(211 223 234/var(--tw-bg-opacity))}.disabled\\\\:text-gray-900:disabled{--tw-text-opacity:1;color:rgb(17 24 39/var(--tw-text-opacity))}.disabled\\\\:opacity-40:disabled{opacity:.4}.disabled\\\\:hover\\\\:bg-indigo-600:hover:disabled{--tw-bg-opacity:1;background-color:rgb(79 70 229/var(--tw-bg-opacity))}@media (prefers-reduced-motion:reduce){@keyframes spin{to{transform:rotate(1turn)}}.motion-reduce\\\\:animate-\\\\[spin_1\\\\.5s_linear_infinite\\\\]{animation:spin 1.5s linear infinite}}.dark .dark\\\\:border{border-width:1px}.dark .dark\\\\:border-f1f5f8\\\\/10{border-color:rgba(241,245,248,.1)}.dark .dark\\\\:bg-0d151d{--tw-bg-opacity:1;background-color:rgb(13 21 29/var(--tw-bg-opacity))}.dark .dark\\\\:bg-29343f{--tw-bg-opacity:1;background-color:rgb(41 52 63/var(--tw-bg-opacity))}.dark .dark\\\\:bg-d3dfea\\\\/15{background-color:rgba(211,223,234,.15)}.dark .dark\\\\:bg-ece8fb\\\\/10{background-color:rgba(236,232,251,.1)}.dark .dark\\\\:bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity))}.dark .dark\\\\:text-0d151d{--tw-text-opacity:1;color:rgb(13 21 29/var(--tw-text-opacity))}.dark .dark\\\\:text-596673{--tw-text-opacity:1;color:rgb(89 102 115/var(--tw-text-opacity))}.dark .dark\\\\:text-9eafc0{--tw-text-opacity:1;color:rgb(158 175 192/var(--tw-text-opacity))}.dark .dark\\\\:text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.dark .dark\\\\:text-white\\\\/70{color:hsla(0,0%,100%,.7)}.dark .dark\\\\:focus-within\\\\:border-white:focus-within{--tw-border-opacity:1;border-color:rgb(255 255 255/var(--tw-border-opacity))}.dark .dark\\\\:focus-within\\\\:bg-transparent:focus-within{background-color:transparent}.dark .dark\\\\:focus\\\\:bg-ece8fb\\\\/25:focus{background-color:rgba(236,232,251,.25)}.dark .dark\\\\:disabled\\\\:bg-29343f:disabled{--tw-bg-opacity:1;background-color:rgb(41 52 63/var(--tw-bg-opacity))}.dark .dark\\\\:disabled\\\\:text-white:disabled{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}@media (min-width:414px){.xs\\\\:w-12{width:3rem}}@media (min-width:640px){.sm\\\\:text-sm{font-size:.875rem;line-height:1.25rem}}@media (min-width:768px){.md\\\\:mt-2{margin-top:.5rem}.md\\\\:block{display:block}.md\\\\:hidden{display:none}.md\\\\:max-h-96{max-height:24rem}.md\\\\:min-w-\\\\[20rem\\\\]{min-width:20rem}.md\\\\:max-w-md{max-width:28rem}.md\\\\:items-center{align-items:center}.md\\\\:overflow-y-auto{overflow-y:auto}.md\\\\:rounded-b-2xl{border-bottom-left-radius:1rem;border-bottom-right-radius:1rem}.md\\\\:p-4{padding:1rem}}`\n\t\t\t\t\texport default () => (<style>{styles}</style>)\n                ", "import { useEffect, useState } from 'react'\n\nconst useMedia = (): 'desktop' | 'mobile' => {\n\tconst [media, setMedia] = useState<'desktop' | 'mobile'>('desktop')\n\n\tuseEffect(() => {\n\t\tconst mql = window.matchMedia('(max-width: 768px)')\n\n\t\tconst handleChange = (mql: MediaQueryList | MediaQueryListEvent) => setMedia(mql.matches ? 'mobile' : 'desktop')\n\n\t\thandleChange(mql)\n\t\tmql.addEventListener('change', handleChange)\n\t\treturn () => {\n\t\t\tmql.removeEventListener('change', handleChange)\n\t\t}\n\t}, [])\n\n\treturn media\n}\n\nexport default useMedia\n", "export const classNames = (...classes: unknown[]): string => {\n\treturn classes.filter(Boolean).join(' ')\n}\n\nexport const randomNumber = (min: number, max: number): number => {\n\treturn Math.floor(Math.random() * (max - min + 1) + min)\n}\n", "import type { FC, HTMLAttributes } from 'react';\nconst XMarkIcon: FC<HTMLAttributes<SVGElement>> = props => <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n\t\t<path strokeWidth=\"1.5\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"m16.243 7.758-8.485 8.485m8.485 0L7.758 7.758\" />\n\t</svg>;\nexport default XMarkIcon;", "import { __ } from '@/lang';\nimport useIDKitStore from '@/store/idkit';\nimport { shallow } from 'zustand/shallow';\nimport { AppErrorCodes } from '@/types/app';\nimport type { IDKitStore } from '@/store/idkit';\nimport XMarkIcon from '@/components/Icons/XMarkIcon';\nconst getParams = ({\n  retryFlow,\n  errorState\n}: IDKitStore) => ({\n  retryFlow,\n  errorState\n});\nconst ERROR_TITLES: Partial<Record<AppErrorCodes, string>> = {\n  [AppErrorCodes.FailedByHostApp]: __('Verification Declined'),\n  [AppErrorCodes.GenericError]: __('Verification Failed')\n};\nconst ERROR_MESSAGES: Record<AppErrorCodes, string> = {\n  [AppErrorCodes.ConnectionFailed]: __('Connection to the World App or identity wallet failed. Please try again.'),\n  [AppErrorCodes.VerificationRejected]: __('Verification request rejected in the World App.'),\n  [AppErrorCodes.MaxVerificationsReached]: __('You have already verified the maximum number of times for this action.'),\n  [AppErrorCodes.AlreadySigned]: __('You have already verified for this action.'),\n  [AppErrorCodes.CredentialUnavailable]: __('It seems you do not have the credential required by this app.'),\n  [AppErrorCodes.MalformedRequest]: __('There was a problem with this request. Please try again or contact the app owner.'),\n  [AppErrorCodes.InvalidNetwork]: __('This app is not available on the network you are connected to. Visit docs.worldcoin.org/test for details.'),\n  [AppErrorCodes.InclusionProofFailed]: __('There was an issue fetching your credential. Please try again.'),\n  [AppErrorCodes.InclusionProofPending]: __('Your credential is still being registered. Please wait a few minutes and try again.'),\n  [AppErrorCodes.FailedByHostApp]: __('Verification failed by the app. Please contact the app owner for details.'),\n  [AppErrorCodes.UnexpectedResponse]: __('Unexpected response from the World App or identity wallet. Please try again.'),\n  [AppErrorCodes.GenericError]: __('Something unexpected went wrong. Please try again.'),\n  [AppErrorCodes.InvalidPhoneOTP]: __('The phone verification code you entered is invalid. Please try again.')\n};\nconst ErrorState = () => {\n  const {\n    retryFlow,\n    errorState\n  } = useIDKitStore(getParams, shallow);\n  return <div className=\"space-y-8\">\n\t\t\t<div className=\"-mt-5 flex items-center justify-center\">\n\t\t\t\t<div className=\"inline-flex aspect-square items-center justify-center rounded-full bg-red-100 p-5\">\n\t\t\t\t\t<div className=\"flex aspect-square items-center justify-center rounded-full bg-red-500 p-5\">\n\t\t\t\t\t\t<XMarkIcon className=\"w-8 text-white\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<p className=\"text-center text-2xl font-semibold text-gray-900 dark:text-white\">\n\t\t\t\t\t{errorState?.code && ERROR_TITLES[errorState.code] || ERROR_TITLES[AppErrorCodes.GenericError]}\n\t\t\t\t</p>\n\t\t\t\t<p className=\"mt-2 text-center text-lg text-gray-400\">\n\t\t\t\t\t{/* eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing */}\n\t\t\t\t\t{errorState?.message || ERROR_MESSAGES[errorState?.code ?? AppErrorCodes.GenericError]}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"flex justify-center\">\n\t\t\t\t<button type=\"button\" onClick={retryFlow} className=\"inline-flex items-center rounded-full border border-transparent bg-indigo-600 px-8 py-3 font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-40 disabled:hover:bg-indigo-600\">\n\t\t\t\t\t{__('Try Again')}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<p className=\"mt-4 text-xs text-gray-400\">\n\t\t\t\t\t{__('If you are the app owner, check the console for further details.')}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>;\n};\nexport default ErrorState;", "import { __ } from '@/lang';\nconst LoadingIcon = ({\n  className = ''\n}: {\n  className?: string;\n}) => <div className=\"flex items-center justify-center\">\n\t\t<div className={`inline-block h-8 w-8 animate-spin rounded-full border-4 border-solid border-current border-r-transparent align-[-0.125em] motion-reduce:animate-[spin_1.5s_linear_infinite] ${className}`} role=\"status\">\n\t\t\t<span className=\"!absolute !-m-px !h-px !w-px !overflow-hidden !whitespace-nowrap !border-0 !p-0 ![clip:rect(0,0,0,0)]\">\n\t\t\t\t{__('Loading...')}\n\t\t\t</span>\n\t\t</div>\n\t</div>;\nexport default LoadingIcon;", "import { classNames } from '@/lib/utils';\nimport verifiedIcon from '@images/verified.webp';\nimport type { DetailedHTMLProps, ImgHTMLAttributes } from 'react';\ntype Props = Omit<DetailedHTMLProps<ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement> & {\n  border?: string;\n  size?: 'md' | 'sm';\n}, 'height' | 'src' | 'width'>;\nconst WorldIDIcon = ({\n  border,\n  size = 'sm',\n  ...props\n}: Props) => {\n  const heightWidth = size === 'md' ? 36 : 24; // NOTE: we enforce sizes because something larger than 48px will not render well (image's native resolution is 96px)\n  return <>\n\t\t\t{border && <svg className={classNames(border, 'absolute left-1/2 top-1/2 w-[34px] -mt-[2px] transform -translate-x-1/2 -translate-y-1/2')} xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 26 26\">\n\t\t\t\t\t<path d=\"M8.382 2.244a6.938 6.938 0 0 1 9.236 0l1.626 1.451c.346.308.722.581 1.122.815l1.882 1.098a6.937 6.937 0 0 1 2.854 8.784l-.877 1.995c-.187.424-.33.866-.428 1.319l-.463 2.129a6.938 6.938 0 0 1-7.473 5.429l-2.168-.218a6.934 6.934 0 0 0-1.386 0l-2.168.218a6.938 6.938 0 0 1-7.473-5.429l-.463-2.13a6.937 6.937 0 0 0-.428-1.318l-.877-1.995a6.938 6.938 0 0 1 2.854-8.784L5.634 4.51c.4-.234.776-.507 1.122-.815l1.626-1.45Z\" />\n\t\t\t\t</svg>}\n\t\t\t<img src={(verifiedIcon as string)} {...props} alt=\"Verified\" width={heightWidth} height={heightWidth} />\n\t\t</>;\n};\nexport default WorldIDIcon;", "import type { FC, HTMLAttributes } from 'react';\nconst InfoIcon: FC<HTMLAttributes<SVGElement>> = props => <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 16 16\">\n\t\t<path fill=\"currentColor\" fillRule=\"evenodd\" d=\"M14.665 7.999a6.667 6.667 0 1 1-13.333 0 6.667 6.667 0 0 1 13.333 0Zm-6-3.334a.667.667 0 1 1-1.333 0 .667.667 0 0 1 1.333 0Zm-1.333 1.5a.5.5 0 0 0 0 1h.167v4.167a.5.5 0 1 0 1 0V6.665a.5.5 0 0 0-.5-.5h-.667Z\" clipRule=\"evenodd\" />\n\t</svg>;\nexport default InfoIcon;", "import { __ } from '@/lang';\nimport WorldIDIcon from '@/components/WorldIDIcon';\nimport InfoIcon from '@/components/Icons/InfoIcon';\nconst PrivacyState = () => {\n  return <div className=\"-mt-6 flex flex-col items-center justify-center space-y-6 font-sans text-sm\">\n\t\t\t<WorldIDIcon className=\"h-12 w-12\" />\n\t\t\t<p className=\"text-center text-2xl font-semibold dark:text-white\">\n\t\t\t\t{__('Privacy preserving to the core.')}\n\t\t\t</p>\n\t\t\t<ul className=\"text-9eafc0 mb-6 list-disc space-y-3 px-12 dark:text-white\">\n\t\t\t\t<li className=\"text-left\">\n\t\t\t\t\t{__('World ID uses Zero-Knowledge Proofs to make it cryptographically impossible to track persons across applications.')}\n\t\t\t\t</li>\n\t\t\t\t<li className=\"text-left\">{__('Orb biometrics analyzed by the Orb are not stored.')}</li>\n\t\t\t\t<li className=\"text-left \">\n\t\t\t\t\t{__('Code and hardware are open source or source available on')}{' '}\n\t\t\t\t\t<a href=\"https://github.com/worldcoin/idkit-js\" target=\"_blank\" className=\"text-4940e0\" rel=\"noreferrer\">\n\t\t\t\t\t\tGitHub\n\t\t\t\t\t</a>\n\t\t\t\t\t.\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<div className=\"text-9eafc0 dark:text-9eafc0 -ml-4 flex items-center space-x-3\">\n\t\t\t\t<InfoIcon className=\"h-4 w-4 \" />\n\t\t\t\t<p className=\"whitespace-nowrap text-sm font-medium\">{__('Biometrics are never shared.')}</p>\n\t\t\t</div>\n\t\t</div>;\n};\nexport default PrivacyState;", "import type { FC, HTMLAttributes } from 'react';\nconst CheckIcon: FC<HTMLAttributes<SVGElement>> = props => <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 11 8\">\n\t\t<path stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1.6\" d=\"M9.868 1 3.771 7 1 4.273\" />\n\t</svg>;\nexport default CheckIcon;", "import { __ } from '@/lang';\nimport CheckIcon from '@/components/Icons/CheckIcon';\nconst SuccessState = () => {\n  return <div className=\"space-y-6\">\n\t\t\t<div className=\"-mt-5 flex items-center justify-center\">\n\t\t\t\t<div className=\"inline-flex aspect-square items-center justify-center rounded-full bg-green-100 p-5\">\n\t\t\t\t\t<div className=\"flex aspect-square items-center justify-center rounded-full bg-green-500 p-5\">\n\t\t\t\t\t\t<CheckIcon className=\"w-8 text-white\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<p className=\"text-center text-2xl font-semibold text-gray-900 dark:text-white\">{__('Success! \uD83C\uDF89')}</p>\n\t\t\t\t{/* eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing */}\n\t\t\t\t<p className=\"text-70868f mt-2 text-center text-lg\">{__('World ID verification was successful')}</p>\n\t\t\t</div>\n\t\t</div>;\n};\nexport default SuccessState;", "import { __ } from '@/lang';\nimport type { FC } from 'react';\nimport copy from 'copy-to-clipboard';\nimport useMedia from '@/hooks/useMedia';\nimport { classNames } from '@/lib/utils';\nimport Qrcode from '@/components/QRCode';\nimport { useCallback, useState } from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport LoadingIcon from '@/components/Icons/LoadingIcon';\nimport WorldcoinIcon from '@/components/Icons/WorldcoinIcon';\ntype Props = {\n  qrData: {\n    default: string;\n    mobile: string;\n  } | null;\n  showQR: boolean;\n  setShowQR: (show: boolean | ((state: boolean) => boolean)) => void;\n};\nconst QRState: FC<Props> = ({\n  qrData,\n  showQR,\n  setShowQR\n}) => {\n  const media = useMedia();\n  const [copiedLink, setCopiedLink] = useState(false);\n  const copyLink = useCallback(() => {\n    copy(qrData?.default ?? '');\n    setCopiedLink(true);\n    setTimeout(() => setCopiedLink(false), 2000);\n  }, [qrData]);\n  return <>\n\t\t\t{(media == 'desktop' || showQR) && <>\n\t\t\t\t\t<AnimatePresence>\n\t\t\t\t\t\t{copiedLink && <motion.div className=\"text-9eafc0 text-sm\" key=\"copied\" initial=\"hidden\" animate=\"visible\" exit=\"hidden\" variants={{\n          visible: {\n            y: 0,\n            opacity: 1\n          },\n          hidden: {\n            y: '100%',\n            opacity: 0\n          },\n          exit: {\n            y: '100%',\n            opacity: 0,\n            transition: {\n              duration: 0.5\n            }\n          }\n        }} transition={{\n          duration: 0.5,\n          ease: 'easeInOut'\n        }}>\n\t\t\t\t\t\t\t\t<span className=\"border-f1f5f8 rounded-lg border py-1 px-2 text-sm\">\n\t\t\t\t\t\t\t\t\t{__('QR Code copied')}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</motion.div>}\n\t\t\t\t\t</AnimatePresence>\n\t\t\t\t\t<div className=\"border-f1f5f8 dark:border-f1f5f8/10 relative inline-flex items-center justify-center rounded-2xl border p-2\">\n\t\t\t\t\t\t<div className=\"text-29343f dark:text-white\">\n\t\t\t\t\t\t\t{qrData ?\n          // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n          <div onClick={copyLink} className=\"cursor-pointer\">\n\t\t\t\t\t\t\t\t\t<Qrcode data={qrData.default} size={244} />\n\t\t\t\t\t\t\t\t</div> : <div className=\"flex h-[244px] w-[244px] items-center justify-center\">\n\t\t\t\t\t\t\t\t\t<LoadingIcon className=\"h-[72px] w-[72px]\" />\n\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>}\n\t\t\t<div className=\"space-y-4\">\n\t\t\t\t<motion.a whileTap={{\n        scale: 0.95\n      }} whileHover={{\n        scale: 1.05\n      }} transition={{\n        layout: {\n          duration: 0.15\n        }\n      }} layoutId={media == 'desktop' ? undefined : 'worldid-button'} href={qrData?.mobile} className={classNames('flex w-full space-x-2 items-center px-4 py-4 border border-transparent font-medium rounded-2xl shadow-sm', 'bg-0d151d dark:bg-white text-white dark:text-0d151d md:hidden')}>\n\t\t\t\t\t<WorldcoinIcon className=\"h-5 w-5\" />\n\t\t\t\t\t<motion.span className=\"flex-1 text-center\" transition={{\n          layout: {\n            duration: 0.15\n          }\n        }} layoutId={media == 'desktop' ? undefined : 'worldid-text'}>\n\t\t\t\t\t\t{__('Open Worldcoin App')}\n\t\t\t\t\t</motion.span>\n\t\t\t\t</motion.a>\n\t\t\t\t<div className=\"space-x-2 md:hidden\">\n\t\t\t\t\t<motion.button className=\"text-9eafc0 text-sm\" onClick={() => setShowQR(state => !state)}>\n\t\t\t\t\t\t{showQR ? __('Hide QR Code') : __('Show QR Code instead')}\n\t\t\t\t\t</motion.button>\n\t\t\t\t\t{showQR && <>\n\t\t\t\t\t\t\t<span className=\"text-9eafc0\">&middot;</span>\n\t\t\t\t\t\t\t<button className=\"text-sm dark:text-white\" onClick={copyLink}>\n\t\t\t\t\t\t\t\t{copiedLink ? __('Copied!') : __('Copy QR Code')}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</>}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>;\n};\nexport default QRState;", "import type { HTMLAttributes, FC } from 'react';\nconst WorldcoinIcon: FC<HTMLAttributes<SVGElement>> = props => <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 33 32\">\n\t\t<path fill=\"currentColor\" d=\"M30.7195 9.77312C29.9097 7.87434 28.7647 6.17103 27.2845 4.6911C25.8044 3.21117 24.1288 2.06632 22.2298 1.25654C20.247 0.418848 18.1525 0 16.0021 0C13.8238 0 11.7293 0.418848 9.7744 1.25654C7.87537 2.06632 6.17184 3.21117 4.69171 4.6911C3.21159 6.17103 2.06659 7.87434 1.25671 9.77312C0.418903 11.7277 0 13.822 0 16C0 18.1501 0.418903 20.2443 1.25671 22.2269C2.06659 24.1257 3.21159 25.829 4.69171 27.3089C6.17184 28.7888 7.87537 29.9337 9.7744 30.7155C11.7572 31.5532 13.8517 31.9721 16.0021 31.9721C18.1525 31.9721 20.247 31.5532 22.2298 30.7155C24.1288 29.9058 25.8323 28.7609 27.3125 27.281C28.7926 25.801 29.9376 24.0977 30.7475 22.1989C31.5853 20.2164 32.0042 18.1222 32.0042 15.9721C32.0042 13.822 31.5574 11.7277 30.7195 9.77312ZM10.696 14.4921C11.3383 11.9232 13.6842 10.0524 16.4489 10.0524H27.5638C28.2899 11.4206 28.7367 12.9284 28.9043 14.4921H10.696ZM28.9043 17.5079C28.7367 19.0716 28.262 20.5794 27.5638 21.9476H16.4489C13.6842 21.9476 11.3662 20.0489 10.696 17.5079H28.9043ZM6.81415 6.81326C9.27172 4.35602 12.5392 3.01571 16.0021 3.01571C19.465 3.01571 22.7325 4.35602 25.19 6.81326C25.2738 6.89703 25.3297 6.95288 25.4134 7.03665H16.4489C14.0472 7.03665 11.8131 7.95811 10.1095 9.66143C8.76903 11.0017 7.9033 12.6771 7.62403 14.4921H3.09988C3.435 11.5881 4.71964 8.9075 6.81415 6.81326ZM16.0021 28.9843C12.5392 28.9843 9.27172 27.644 6.81415 25.1867C4.71964 23.0925 3.435 20.3839 3.09988 17.5079H7.62403C7.93123 19.3229 8.79696 20.9983 10.1095 22.3386C11.8131 24.0419 14.0472 24.9633 16.4489 24.9633H25.4134C25.3297 25.0471 25.2738 25.103 25.19 25.1867C22.7325 27.644 19.465 28.9843 16.0021 28.9843Z\" />\n\t</svg>;\nexport default WorldcoinIcon;", "import { __ } from '@/lang';\nimport { IDKITStage } from '@/types';\nimport useMedia from '@/hooks/useMedia';\nimport QRState from './WorldID/QRState';\nimport useIDKitStore from '@/store/idkit';\nimport { shallow } from 'zustand/shallow';\nimport { useEffect, useState } from 'react';\nimport type { IDKitStore } from '@/store/idkit';\nimport AboutWorldID from '@/components/AboutWorldID';\nimport useAppConnection from '@/services/walletconnect';\nimport LoadingIcon from '@/components/Icons/LoadingIcon';\nimport WorldcoinIcon from '@/components/Icons/WorldcoinIcon';\nimport { AppErrorCodes, VerificationState } from '@/types/app';\nimport DevicePhoneMobileIcon from '@/components/Icons/DevicePhoneMobileIcon';\nconst getOptions = (store: IDKitStore) => ({\n  signal: store.signal,\n  app_id: store.app_id,\n  action: store.action,\n  setStage: store.setStage,\n  handleVerify: store.handleVerify,\n  setErrorState: store.setErrorState,\n  showAbout: store.methods.length == 1,\n  credential_types: store.credential_types,\n  isExperimental: store.methods.length > 0,\n  hasPhone: store.methods.includes('phone'),\n  action_description: store.action_description,\n  walletConnectProjectId: store.walletConnectProjectId,\n  usePhone: () => store.setStage(IDKITStage.ENTER_PHONE)\n});\nconst WorldIDState = () => {\n  const media = useMedia();\n  const [showQR, setShowQR] = useState<boolean>(false);\n  const {\n    app_id,\n    action,\n    signal,\n    setStage,\n    usePhone,\n    handleVerify,\n    isExperimental,\n    action_description,\n    credential_types,\n    hasPhone,\n    walletConnectProjectId,\n    setErrorState\n  } = useIDKitStore(getOptions, shallow);\n  const {\n    result,\n    qrData,\n    verificationState,\n    reset,\n    errorCode\n  } = useAppConnection(app_id, action, signal, credential_types, action_description, walletConnectProjectId);\n  useEffect(() => reset, [reset]);\n  useEffect(() => {\n    if (verificationState === VerificationState.Failed) {\n      setStage(IDKITStage.ERROR);\n      setErrorState({\n        code: errorCode ?? AppErrorCodes.GenericError\n      });\n    }\n    if (result) {\n      if (!isExperimental) return handleVerify(result);\n      const {\n        nullifier_hash,\n        credential_type,\n        ...proof_payload\n      } = result;\n      handleVerify({\n        proof_payload,\n        nullifier_hash,\n        credential_type\n      });\n    }\n  }, [result, reset, handleVerify, verificationState, setStage, errorCode, setErrorState, isExperimental]);\n  return <div className=\"-mt-6 space-y-6\">\n\t\t\t<div>\n\t\t\t\t<div className=\"mb-2 flex items-center justify-center\">\n\t\t\t\t\t<WorldcoinIcon className=\"text-0d151d h-8 dark:text-white\" />\n\t\t\t\t</div>\n\t\t\t\t<p className=\"font-sora text-center text-2xl font-semibold text-gray-900 dark:text-white\">\n\t\t\t\t\t{/* eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing */}\n\t\t\t\t\t{verificationState === VerificationState.AwaitingVerification ? __('Confirm in World App') : __('Continue with Worldcoin')}\n\t\t\t\t</p>\n\t\t\t\t{verificationState === VerificationState.AwaitingVerification && <p className=\"text-70868f dark:text-9eafc0 mt-3 text-center md:mt-2\">\n\t\t\t\t\t\tPlease confirm the request in your app to continue.\n\t\t\t\t\t</p>}\n\t\t\t</div>\n\t\t\t{verificationState === VerificationState.AwaitingVerification ? <div className=\"flex items-center justify-center\">\n\t\t\t\t\t<LoadingIcon className=\"h-20 w-20\" />\n\t\t\t\t</div> : <QRState showQR={showQR} setShowQR={setShowQR} qrData={qrData} />}\n\t\t\t{(media == 'desktop' || !showQR) && (verificationState === VerificationState.AwaitingConnection || verificationState === VerificationState.LoadingWidget) && <AboutWorldID />}\n\t\t\t{hasPhone && verificationState == VerificationState.AwaitingConnection && <div className=\"hidden space-y-3 md:block\">\n\t\t\t\t\t<div className=\"flex items-center justify-between space-x-6\">\n\t\t\t\t\t\t<div className=\"bg-f2f5f9 dark:bg-29343f h-px flex-1\" />\n\t\t\t\t\t\t<p className=\"text-9eafc0 dark:text-596673 text-xs\">or</p>\n\t\t\t\t\t\t<div className=\"bg-f2f5f9 dark:bg-29343f h-px flex-1\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"flex items-center justify-center\">\n\t\t\t\t\t\t<button onClick={usePhone} className=\"flex items-center space-x-2\">\n\t\t\t\t\t\t\t<DevicePhoneMobileIcon className=\"text-0d151d/70 h-6 w-6 dark:text-white/70\" />\n\t\t\t\t\t\t\t<p className=\"text-0d151d text-sm font-medium dark:text-white\">\n\t\t\t\t\t\t\t\t{__('Verify with Phone Number')}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\t\t</div>;\n};\nexport default WorldIDState;", "import type { FC, HTMLAttributes } from 'react';\nconst LockIcon: FC<HTMLAttributes<SVGElement>> = props => <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 12 14\">\n\t\t<path fill=\"currentColor\" fillRule=\"evenodd\" d=\"M6 0a3.555 3.555 0 0 0-3.563 3.547v.052A3.001 3.001 0 0 0 0 6.547V11a3 3 0 0 0 3 3h6a3 3 0 0 0 3-3V6.547a3.001 3.001 0 0 0-2.438-2.948v-.052A3.555 3.555 0 0 0 5.999 0Zm2.437 3.547A2.432 2.432 0 0 0 5.999 1.12a2.432 2.432 0 0 0-2.437 2.427h4.875ZM7.5 8.773c0 .825-.671 1.494-1.5 1.494-.828 0-1.5-.669-1.5-1.494 0-.824.672-1.493 1.5-1.493.829 0 1.5.669 1.5 1.493Z\" clipRule=\"evenodd\" />\n\t</svg>;\nexport default LockIcon;", "import type { FC, HTMLAttributes } from 'react';\nconst HumanIcon: FC<HTMLAttributes<SVGElement>> = props => <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 10 14\">\n\t\t<path fill=\"currentColor\" d=\"M9.98 3.6c-.08-.345-.392-.553-.732-.477-.093.021-2.59.754-4.236.768C3.36 3.877.87 3.144.776 3.123a.629.629 0 0 0-.76.477.64.64 0 0 0 .467.767c.433.111 1.139.318 2.83.72 0 0-.02 2.28-.093 3.663-.1 1.99-.672 4.424-.672 4.424-.1.463.126.74.406.801.573.125.76-.276.826-.56l1.092-4.16A.128.128 0 0 1 5 9.164c.053 0 .106.027.126.09l1.093 4.16c.066.284.253.685.825.56.28-.062.507-.338.407-.801 0 0-.566-2.433-.673-4.424-.073-1.383-.093-3.664-.093-3.664 1.698-.4 2.398-.608 2.83-.719a.637.637 0 0 0 .467-.767Z\" />\n\t\t<path fill=\"currentColor\" d=\"M5.007 3.11a1.55 1.55 0 0 0 1.539-1.555C6.546.698 5.86 0 5.007 0A1.55 1.55 0 0 0 3.47 1.555c0 .857.686 1.555 1.538 1.555Z\" />\n\t</svg>;\nexport default HumanIcon;", "import { __ } from '@/lang';\nimport LockIcon from './Icons/LockIcon';\nimport { classNames } from '@/lib/utils';\nimport HumanIcon from './Icons/HumanIcon';\nimport type { FC, HTMLAttributes, PropsWithChildren } from 'react';\ntype Props = {\n  className?: string;\n};\nconst AboutWorldID: FC<Props> = ({\n  className\n}) => {\n  return <div className={classNames(className, 'space-y-4 text-left')}>\n\t\t\t<p className=\"text-0d151d text-sm font-medium uppercase dark:text-white\">{__('What is World ID?')}</p>\n\t\t\t<div className=\"space-y-3\">\n\t\t\t\t<FeatureHighlight title=\"Your global digital ID\" icon={HumanIcon}>\n\t\t\t\t\t<p>{__('With Worldcoin and World ID sign in seamlessly and prove you are a unique human.')}</p>\n\t\t\t\t</FeatureHighlight>\n\t\t\t\t<FeatureHighlight title=\"Privacy-preserving\" icon={LockIcon}>\n\t\t\t\t\t<p>{__('Maximum privacy. Prevents cross-tracking and can be used fully anonymously.')}</p>\n\t\t\t\t</FeatureHighlight>\n\t\t\t</div>\n\t\t</div>;\n};\ntype FeatureHighlightProps = PropsWithChildren<{\n  title: string;\n  icon: FC<HTMLAttributes<SVGElement>>;\n}>;\nconst FeatureHighlight: FC<FeatureHighlightProps> = ({\n  icon: Icon,\n  title,\n  children\n}) => <div className=\"flex space-x-6\">\n\t\t<div className=\"bg-d3dfea/30 dark:bg-29343f flex aspect-square h-8 w-8 items-center justify-center rounded-full\">\n\t\t\t<Icon className=\"text-0d151d h-3 w-3 dark:text-white\" />\n\t\t</div>\n\t\t<div>\n\t\t\t<p className=\"text-0d151d font-medium dark:text-white\">{title}</p>\n\t\t\t<div className=\"text-9eafc0 dark:text-9eafc0 mt-[2px] text-sm font-normal\">{children}</div>\n\t\t</div>\n\t</div>;\nexport default AboutWorldID;", "import { __ } from '@/lang'\nimport { create } from 'zustand'\nimport { buildQRData } from '@/lib/qr'\nimport { CredentialType } from '@/types'\nimport { useEffect, useRef } from 'react'\nimport { randomNumber } from '@/lib/utils'\nimport { WC_PROJECT_ID } from '@/lib/consts'\nimport Client from '@walletconnect/sign-client'\nimport type { IDKitConfig } from '@/types/config'\nimport { getSdkError } from '@walletconnect/utils'\nimport { AppErrorCodes, VerificationState } from '@/types/app'\nimport type { ExpectedErrorResponse, ISuccessResult } from '@/types'\nimport { encodeAction, generateExternalNullifier, generateSignal, validateABILikeEncoding } from '@/lib/hashing'\n\ntype WalletConnectStore = {\n\tconnected: boolean\n\turi: string\n\ttopic: string\n\tresult: ISuccessResult | null\n\terrorCode: AppErrorCodes | null\n\tverificationState: VerificationState\n\tconfig: IDKitConfig | null\n\tqrData: {\n\t\tdefault: string\n\t\tmobile: string\n\t} | null\n\tclient: Client | null\n\n\tresetConnection: () => void\n\tonConnectionEstablished: (client: Client) => void\n\tsetUri: (uri: string) => void\n\tcreateClient: (\n\t\tapp_id: IDKitConfig['app_id'],\n\t\taction: IDKitConfig['action'],\n\t\tsignal: IDKitConfig['signal'],\n\t\tcredential_types?: IDKitConfig['credential_types'],\n\t\taction_description?: IDKitConfig['action_description'],\n\t\twalletConnectProjectId?: IDKitConfig['walletConnectProjectId']\n\t) => Promise<void>\n\tconnectClient: (client: Client) => Promise<void>\n}\n\nconst namespaces = {\n\teip155: {\n\t\tmethods: ['world_id_v1'],\n\t\tchains: ['eip155:1'], // Chain ID used does not matter, since we only perform custom JSON RPC messages (World ID verification)\n\t\tevents: ['accountsChanged'],\n\t},\n}\n\nconst useWalletConnectStore = create<WalletConnectStore>()((set, get) => ({\n\tqrData: null,\n\tconfig: null,\n\tresult: null,\n\tconnected: false,\n\turi: '',\n\ttopic: '',\n\terrorCode: null,\n\tverificationState: VerificationState.LoadingWidget,\n\tclient: null,\n\n\tcreateClient: async (\n\t\tapp_id: IDKitConfig['app_id'],\n\t\taction: IDKitConfig['action'],\n\t\tsignal?: IDKitConfig['signal'],\n\t\tcredential_types?: IDKitConfig['credential_types'],\n\t\taction_description?: IDKitConfig['action_description'],\n\t\twalletConnectProjectId = WC_PROJECT_ID\n\t) => {\n\t\tif (credential_types && !credential_types.length) {\n\t\t\tconsole.warn(\n\t\t\t\t__('Cannot set empty `:param`. Defaulting to only Orb credential.', { param: 'credential_types' })\n\t\t\t)\n\t\t}\n\n\t\tset({\n\t\t\tconfig: {\n\t\t\t\tapp_id,\n\t\t\t\taction,\n\t\t\t\tsignal,\n\t\t\t\taction_description,\n\t\t\t\twalletConnectProjectId,\n\t\t\t\tcredential_types: credential_types?.length ? credential_types : [CredentialType.Orb],\n\t\t\t},\n\t\t})\n\n\t\ttry {\n\t\t\tconst client = await Client.init({\n\t\t\t\tprojectId: walletConnectProjectId,\n\t\t\t\tmetadata: {\n\t\t\t\t\tname: 'IDKit',\n\t\t\t\t\tdescription: __('Verify with World ID'),\n\t\t\t\t\turl: 'https://worldcoin.org',\n\t\t\t\t\ticons: ['https://worldcoin.org/icons/logo-small.svg'],\n\t\t\t\t},\n\t\t\t})\n\t\t\tset({ client: client })\n\n\t\t\treturn get().connectClient(client)\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t}\n\t},\n\n\tconnectClient: async (client: Client) => {\n\t\ttry {\n\t\t\tconst { uri, approval } = await client.connect({ requiredNamespaces: namespaces })\n\n\t\t\tif (uri) {\n\t\t\t\tget().setUri(uri)\n\t\t\t\tconst session = await approval()\n\n\t\t\t\tif (typeof session !== 'undefined') {\n\t\t\t\t\tset({ topic: session.topic })\n\t\t\t\t\treturn get().onConnectionEstablished(client)\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tset({ errorCode: AppErrorCodes.ConnectionFailed })\n\t\t\tconsole.error(__('Unable to establish a connection with the World app.'), error)\n\t\t}\n\t},\n\n\tsetUri: (uri: string) => {\n\t\tif (!uri) return\n\n\t\tset({\n\t\t\turi: uri,\n\t\t\tverificationState: VerificationState.AwaitingConnection,\n\t\t\tqrData: {\n\t\t\t\tdefault: buildQRData(uri),\n\t\t\t\tmobile: buildQRData(uri, window.location.href),\n\t\t\t},\n\t\t})\n\t},\n\n\t// eslint-disable-next-line @typescript-eslint/no-misused-promises\n\tonConnectionEstablished: async (client: Client) => {\n\t\tset({ verificationState: VerificationState.AwaitingVerification })\n\n\t\tawait client\n\t\t\t.request({\n\t\t\t\ttopic: get().topic,\n\t\t\t\tchainId: 'eip155:1',\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\trequest: buildVerificationRequest(get().config!),\n\t\t\t})\n\t\t\t.then(result => {\n\t\t\t\tif (!ensureVerificationResponse(result)) {\n\t\t\t\t\treturn set({ errorCode: AppErrorCodes.UnexpectedResponse })\n\t\t\t\t}\n\n\t\t\t\tset({ result, verificationState: VerificationState.Confirmed })\n\t\t\t})\n\t\t\t.catch((error: unknown) => {\n\t\t\t\tlet errorCode = AppErrorCodes.GenericError\n\n\t\t\t\tconst errorMessage = (error as ExpectedErrorResponse).message\n\t\t\t\tif (errorMessage && Object.values(AppErrorCodes).includes(errorMessage as AppErrorCodes)) {\n\t\t\t\t\terrorCode = errorMessage as AppErrorCodes\n\t\t\t\t}\n\n\t\t\t\tconsole.warn(__('Error receiving proof: :errorCode', { errorCode }))\n\t\t\t\tconsole.warn(__('Raw error response'), error)\n\n\t\t\t\tset({ errorCode, verificationState: VerificationState.Failed })\n\t\t\t})\n\t\t\t.finally(() => void client.disconnect({ topic: get().topic, reason: getSdkError('USER_DISCONNECTED') }))\n\t\t\t.catch((error: string) => {\n\t\t\t\tconsole.error(__(`Unable to disconnect: :error`, { error }))\n\t\t\t})\n\t},\n\n\tresetConnection: () => {\n\t\tset({\n\t\t\tresult: null,\n\t\t\tconfig: null,\n\t\t\tqrData: null,\n\t\t\terrorCode: null,\n\t\t\tconnected: false,\n\t\t\tclient: null,\n\t\t\tverificationState: VerificationState.LoadingWidget,\n\t\t})\n\t},\n}))\n\nconst buildVerificationRequest = (config: IDKitConfig) => ({\n\tjsonrpc: '2.0',\n\tmethod: 'world_id_v1',\n\tid: randomNumber(100000, 9999999),\n\tparams: [\n\t\t{\n\t\t\tapp_id: config.app_id,\n\t\t\taction: encodeAction(config.action),\n\t\t\tcredential_types: config.credential_types,\n\t\t\tsignal: generateSignal(config.signal).digest,\n\t\t\taction_description: config.action_description,\n\t\t\texternal_nullifier: generateExternalNullifier(config.app_id, config.action).digest,\n\t\t},\n\t],\n})\n\nconst ensureVerificationResponse = (result: unknown): result is ISuccessResult => {\n\tif (!result || typeof result !== 'object') return false\n\tconst proof = 'proof' in result ? (result as Record<string, string>).proof : undefined\n\tconst merkle_root = 'merkle_root' in result ? (result as Record<string, string>).merkle_root : undefined\n\tconst nullifier_hash = 'nullifier_hash' in result ? (result as Record<string, string>).nullifier_hash : undefined\n\tconst credential_type = 'credential_type' in result ? (result as Record<string, string>).credential_type : undefined\n\n\tif (!credential_type) return false\n\tfor (const attr of [merkle_root, nullifier_hash, proof]) {\n\t\tif (!attr || !validateABILikeEncoding(attr)) return false\n\t}\n\n\treturn true\n}\n\ntype UseAppConnectionResponse = {\n\treset: () => void\n\tresult: ISuccessResult | null\n\terrorCode: AppErrorCodes | null\n\tverificationState: VerificationState\n\tqrData: {\n\t\tdefault: string\n\t\tmobile: string\n\t} | null\n}\n\nconst getStore = (store: WalletConnectStore) => ({\n\tqrData: store.qrData,\n\tresult: store.result,\n\terrorCode: store.errorCode,\n\treset: store.resetConnection,\n\tclient: store.client,\n\tcreateClient: store.createClient,\n\tconnectClient: store.connectClient,\n\tverificationState: store.verificationState,\n})\n\nconst useAppConnection = (\n\tapp_id: IDKitConfig['app_id'],\n\taction: IDKitConfig['action'],\n\tsignal?: IDKitConfig['signal'],\n\tcredential_types?: IDKitConfig['credential_types'],\n\taction_description?: IDKitConfig['action_description'],\n\twalletConnectProjectId?: IDKitConfig['walletConnectProjectId']\n): UseAppConnectionResponse => {\n\tconst { result, verificationState, errorCode, qrData, client, createClient, reset } =\n\t\tuseWalletConnectStore(getStore)\n\n\tconst ref_credential_types = useRef(credential_types)\n\n\tuseEffect(() => {\n\t\tif (!app_id) return\n\t\tif (!client) {\n\t\t\tvoid createClient(\n\t\t\t\tapp_id,\n\t\t\t\taction,\n\t\t\t\tsignal,\n\t\t\t\tref_credential_types.current,\n\t\t\t\taction_description,\n\t\t\t\twalletConnectProjectId\n\t\t\t)\n\t\t}\n\t}, [\n\t\tapp_id,\n\t\taction,\n\t\tsignal,\n\t\twalletConnectProjectId,\n\t\taction_description,\n\t\tclient,\n\t\tcreateClient,\n\t\tverificationState,\n\t\tref_credential_types,\n\t])\n\n\treturn { result, reset, verificationState, errorCode, qrData }\n}\n\nexport default useAppConnection\n", "/**\n * Build data for QR Code\n */\nexport function buildQRData(uri: string, returnUrl?: string): string {\n\tconst result = new window.URL('https://worldcoin.org/verify')\n\tresult.searchParams.append('w', uri)\n\n\t// returnUrl optionally instructs the World app how to return to the website after the verification is complete (intended for mobile only).\n\tif (returnUrl) result.searchParams.append('r', returnUrl)\n\n\treturn result.toString()\n}\n", "export const WC_PROJECT_ID = 'c3e6053f10efbb423808783ee874cf6a' // Default WalletConnect project ID for IDKit\n", "import type { FC, HTMLAttributes } from 'react';\nconst DevicePhoneMobileIcon: FC<HTMLAttributes<SVGElement>> = props => <svg {...props} fill=\"none\" strokeWidth={1.5} viewBox=\"0 0 24 24\" stroke=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M10.5 1.5H8.25A2.25 2.25 0 006 3.75v16.5a2.25 2.25 0 002.25 2.25h7.5A2.25 2.25 0 0018 20.25V3.75a2.25 2.25 0 00-2.25-2.25H13.5m-3 0V3h3V1.5m-3 0h3m-3 18.75h3\" />\n\t</svg>;\nexport default DevicePhoneMobileIcon;", "import type { HTMLAttributes, FC } from 'react';\nconst WorldIDWordmark: FC<HTMLAttributes<SVGElement>> = props => <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 188 32\" clipRule=\"evenodd\" fillRule=\"evenodd\">\n\t\t<g clipPath=\"url(#clip0_17_787)\">\n\t\t\t<path d=\"M68.7294 9.91241C72.0806 9.91241 74.8174 12.6489 74.8174 15.9997C74.8174 19.3504 72.0806 22.0869 68.7294 22.0869C65.3781 22.0869 62.6413 19.3504 62.6413 15.9997C62.6413 12.6489 65.3502 9.91241 68.7294 9.91241ZM68.7294 6.98047C63.7584 6.98047 59.709 11.0293 59.709 15.9997C59.709 20.97 63.7584 25.0189 68.7294 25.0189C73.7003 25.0189 77.7497 20.97 77.7497 15.9997C77.7497 11.0014 73.7003 6.98047 68.7294 6.98047Z\" fill=\"black\" />\n\t\t\t<path d=\"M156.112 9.91241C159.463 9.91241 162.2 12.6489 162.2 15.9997C162.2 19.3504 159.463 22.0869 156.112 22.0869C152.761 22.0869 150.024 19.3504 150.024 15.9997C150.024 12.6489 152.761 9.91241 156.112 9.91241ZM156.112 6.98047C151.141 6.98047 147.092 11.0293 147.092 15.9997C147.092 20.97 151.141 25.0189 156.112 25.0189C161.083 25.0189 165.133 20.97 165.133 15.9997C165.133 11.0014 161.111 6.98047 156.112 6.98047Z\" fill=\"black\" />\n\t\t\t<path d=\"M142.511 18.0939C141.645 20.4395 139.411 22.0869 136.786 22.0869C133.435 22.0869 130.698 19.3504 130.698 15.9997C130.698 12.6489 133.435 9.91241 136.786 9.91241C139.411 9.91241 141.645 11.5878 142.511 13.9054H145.555C144.633 9.94033 141.059 6.98047 136.786 6.98047C131.815 6.98047 127.766 11.0293 127.766 15.9997C127.766 20.97 131.815 25.0189 136.786 25.0189C141.059 25.0189 144.633 22.059 145.555 18.0939H142.511Z\" fill=\"black\" />\n\t\t\t<path d=\"M117.209 10.1937C120.477 10.1937 123.13 12.9301 123.018 16.2251C122.906 19.3804 120.225 21.8097 117.07 21.8097H113.858V10.1937H117.209ZM117.209 7.26172H110.926V24.7416H117.209C122.041 24.7416 125.95 20.8324 125.95 16.0017C125.95 11.171 122.041 7.26172 117.209 7.26172Z\" fill=\"black\" />\n\t\t\t<path d=\"M170.216 7.28906H167.283V24.7131H170.216V7.28906Z\" fill=\"black\" />\n\t\t\t<path d=\"M44.0696 24.7947L47.3929 11.978L50.7162 24.7947H54.7377L59.2898 7.20312H56.2737L52.727 20.8576L49.1803 7.20312H45.6056L42.0589 20.8576L38.5122 7.20312H35.4961L40.0482 24.7947H44.0696Z\" fill=\"black\" />\n\t\t\t<path d=\"M176.079 12.3158L184.96 24.7137H185.295H187.892V7.28964H184.96V19.6875L176.079 7.26172H175.855L175.827 7.28964H173.146V24.7137H176.079V12.3158Z\" fill=\"black\" />\n\t\t\t<path d=\"M99.4753 7.28906H96.543V24.7131H108.775V21.7812H99.4753V7.28906Z\" fill=\"black\" />\n\t\t\t<path d=\"M90.9038 17.5363C92.6911 16.6428 93.9199 14.8277 93.9199 12.7056C93.9199 9.7178 91.4902 7.31641 88.53 7.31641H83.0005H79.9844V18.1227V24.7405H83.0005V18.0948H84.6761C88.2507 18.2065 91.0993 21.1105 91.0993 24.7126H94.1154C94.1433 21.8644 92.8866 19.2955 90.9038 17.5363ZM83.0005 15.0791V10.3042H88.53C89.8426 10.3042 90.9038 11.3653 90.9038 12.6777C90.9038 13.9901 89.8426 15.0791 88.53 15.0791H83.0005Z\" fill=\"black\" />\n\t\t\t<path d=\"M30.7195 9.77312C29.9097 7.87434 28.7647 6.17103 27.2845 4.6911C25.8044 3.21117 24.1288 2.06632 22.2298 1.25654C20.247 0.418848 18.1525 0 16.0021 0C13.8238 0 11.7293 0.418848 9.7744 1.25654C7.87537 2.06632 6.17184 3.21117 4.69171 4.6911C3.21159 6.17103 2.06659 7.87434 1.25671 9.77312C0.418903 11.7277 0 13.822 0 16C0 18.1501 0.418903 20.2443 1.25671 22.2269C2.06659 24.1257 3.21159 25.829 4.69171 27.3089C6.17184 28.7888 7.87537 29.9337 9.7744 30.7155C11.7572 31.5532 13.8517 31.9721 16.0021 31.9721C18.1525 31.9721 20.247 31.5532 22.2298 30.7155C24.1288 29.9058 25.8323 28.7609 27.3125 27.281C28.7926 25.801 29.9376 24.0977 30.7475 22.1989C31.5853 20.2164 32.0042 18.1222 32.0042 15.9721C32.0042 13.822 31.5574 11.7277 30.7195 9.77312ZM10.696 14.4921C11.3383 11.9232 13.6842 10.0524 16.4489 10.0524H27.5638C28.2899 11.4206 28.7367 12.9284 28.9043 14.4921H10.696ZM28.9043 17.5079C28.7367 19.0716 28.262 20.5794 27.5638 21.9476H16.4489C13.6842 21.9476 11.3662 20.0489 10.696 17.5079H28.9043ZM6.81415 6.81326C9.27172 4.35602 12.5392 3.01571 16.0021 3.01571C19.465 3.01571 22.7325 4.35602 25.19 6.81326C25.2738 6.89703 25.3297 6.95288 25.4134 7.03665H16.4489C14.0472 7.03665 11.8131 7.95811 10.1095 9.66143C8.76903 11.0017 7.9033 12.6771 7.62403 14.4921H3.09988C3.435 11.5881 4.71964 8.9075 6.81415 6.81326ZM16.0021 28.9843C12.5392 28.9843 9.27172 27.644 6.81415 25.1867C4.71964 23.0925 3.435 20.3839 3.09988 17.5079H7.62403C7.93123 19.3229 8.79696 20.9983 10.1095 22.3386C11.8131 24.0419 14.0472 24.9633 16.4489 24.9633H25.4134C25.3297 25.0471 25.2738 25.103 25.19 25.1867C22.7325 27.644 19.465 28.9843 16.0021 28.9843Z\" fill=\"black\" />\n\t\t</g>\n\t\t<defs>\n\t\t\t<clipPath id=\"clip0_17_787\">\n\t\t\t\t<rect width=\"187.892\" height=\"32\" fill=\"white\" />\n\t\t\t</clipPath>\n\t\t</defs>\n\t</svg>;\nexport default WorldIDWordmark;", "import type { FC, HTMLAttributes } from 'react';\nconst ArrowLongLeftIcon: FC<HTMLAttributes<SVGElement>> = props => <svg {...props} fill=\"none\" strokeWidth={1.5} viewBox=\"0 0 24 24\" stroke=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6.75 15.75L3 12m0 0l3.75-3.75M3 12h18\" />\n\t</svg>;\nexport default ArrowLongLeftIcon;", "import { __ } from '@/lang';\nimport { motion } from 'framer-motion';\nimport { classNames } from '@/lib/utils';\nimport useIDKitStore from '@/store/idkit';\nimport { AppErrorCodes } from '@/types/app';\nimport * as Toast from '@radix-ui/react-toast';\nimport type { IDKitStore } from '@/store/idkit';\nimport PhoneInput from '@/components/PhoneInput';\nimport WorldIDIcon from '@/components/WorldIDIcon';\nimport AboutWorldID from '@/components/AboutWorldID';\nimport XMarkIcon from '@/components/Icons/XMarkIcon';\nimport { isRequestCodeError, requestCode } from '@/services/phone';\nimport { getTelemetryId, telemetryPhoneTyped } from '@/lib/telemetry';\nimport { IDKITStage, PhoneRequestErrorCodes, PhoneVerificationChannel } from '@/types';\nconst getParams = ({\n  processing,\n  errorState,\n  phoneNumber,\n  setStage,\n  methods,\n  setProcessing,\n  setErrorState,\n  app_id\n}: IDKitStore) => ({\n  processing,\n  errorState,\n  app_id,\n  phoneNumber,\n  showAbout: methods.length == 1,\n  hasWorldID: methods.includes('orb'),\n  useWorldID: () => setStage(IDKITStage.WORLD_ID),\n  onSubmit: async () => {\n    try {\n      setProcessing(true);\n      setErrorState(null);\n      await requestCode(phoneNumber, app_id, PhoneVerificationChannel.SMS, getTelemetryId());\n      telemetryPhoneTyped();\n      setProcessing(false);\n      setStage(IDKITStage.ENTER_CODE);\n    } catch (error) {\n      console.error(error);\n      setProcessing(false);\n      let message: string | undefined = undefined;\n      if (isRequestCodeError(error)) {\n        message = Object.values(PhoneRequestErrorCodes).includes(error.code) && error.detail || undefined;\n        if (error.code !== PhoneRequestErrorCodes.TIMEOUT) {\n          setStage(IDKITStage.ERROR);\n        }\n      } else {\n        setStage(IDKITStage.ERROR);\n      }\n      setErrorState({\n        code: AppErrorCodes.InvalidPhoneOTP,\n        message\n      });\n    }\n  },\n  onResetErrorState: () => {\n    setErrorState(null);\n  }\n});\nconst EnterPhoneState = () => {\n  const {\n    phoneNumber,\n    processing,\n    showAbout,\n    onSubmit,\n    errorState,\n    onResetErrorState,\n    hasWorldID,\n    useWorldID\n  } = useIDKitStore(getParams);\n  return <div className=\"-mt-6 space-y-6\">\n\t\t\t<Toast.Root className=\"absolute -mt-1 flex gap-4 rounded-md bg-[#fecaca] p-3 shadow-lg\" open={!!errorState} onOpenChange={onResetErrorState} asChild>\n\t\t\t\t<motion.div initial={{\n        opacity: 0,\n        y: -40\n      }} animate={{\n        opacity: 1,\n        y: 0\n      }} transition={{\n        duration: 0.3\n      }}>\n\t\t\t\t\t<Toast.Title className=\"text-xs font-medium text-red-600\">\n\t\t\t\t\t\t{/* eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing */}\n\t\t\t\t\t\t{__(errorState?.message || 'Unable to send code. Please try again.')}\n\t\t\t\t\t</Toast.Title>\n\t\t\t\t\t<Toast.Action altText=\"Close\">\n\t\t\t\t\t\t<XMarkIcon className=\"h-4 w-4\" />\n\t\t\t\t\t</Toast.Action>\n\t\t\t\t</motion.div>\n\t\t\t</Toast.Root>\n\t\t\t<div>\n\t\t\t\t<p className=\"text-center text-2xl font-semibold text-gray-900 dark:text-white\">\n\t\t\t\t\t{__('Verify with Phone')}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"mt-2 space-y-2\">\n\t\t\t\t<PhoneInput disabled={processing} onSubmit={onSubmit} />\n\t\t\t\t<p className=\"text-9eafc0 dark:text-9eafc0 text-center text-xs\">\n\t\t\t\t\t{__(\"We'll call or text to confirm your number. No data is stored.\")}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"mt-4 flex justify-center\">\n\t\t\t\t<motion.button animate={{\n        opacity: phoneNumber ? 1 : 0.4\n      }} type=\"button\" whileTap={{\n        scale: phoneNumber ? 0.95 : 1\n      }} whileHover={{\n        scale: phoneNumber ? 1.05 : 1\n      }} transition={{\n        layout: {\n          duration: 0.15\n        }\n      }} onClick={() => void onSubmit()} layoutId=\"phone-button\" disabled={!phoneNumber || processing} className={classNames('flex w-full items-center justify-center px-8 py-4 border border-transparent font-medium rounded-xl shadow-sm', 'bg-0d151d dark:bg-white text-white dark:text-0d151d', 'focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500', 'disabled:cursor-not-allowed disabled:bg-d3dfea dark:disabled:bg-29343f')}>\n\t\t\t\t\t<motion.span transition={{\n          layout: {\n            duration: 0.15\n          }\n        }} layoutId=\"phone-text\">\n\t\t\t\t\t\t{__('Continue')}\n\t\t\t\t\t</motion.span>\n\t\t\t\t</motion.button>\n\t\t\t</div>\n\t\t\t{showAbout && <AboutWorldID />}\n\t\t\t{hasWorldID && <div className=\"hidden space-y-3 md:block\">\n\t\t\t\t\t<div className=\"flex items-center justify-between space-x-6\">\n\t\t\t\t\t\t<div className=\"bg-f2f5f9 dark:bg-29343f h-px flex-1\" />\n\t\t\t\t\t\t<p className=\"text-9eafc0 dark:text-596673 text-xs\">or</p>\n\t\t\t\t\t\t<div className=\"bg-f2f5f9 dark:bg-29343f h-px flex-1\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"flex items-center justify-center\">\n\t\t\t\t\t\t<button onClick={useWorldID} className=\"flex items-center space-x-2\">\n\t\t\t\t\t\t\t<WorldIDIcon />\n\t\t\t\t\t\t\t<p className=\"text-0d151d text-sm font-medium dark:text-white\">\n\t\t\t\t\t\t\t\t{__('Verify with World ID')}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\t\t</div>;\n};\nexport default EnterPhoneState;", "import { __ } from '@/lang';\nimport { phone } from 'phone';\nimport useIDKitStore from '@/store/idkit';\nimport type { IDKitStore } from '@/store/idkit';\nimport { Fragment, memo, useEffect, useState } from 'react';\nimport CountryCodeSelect from './IDKitWidget/experimental/components/CountryCodeSelect';\nconst getParams = ({\n  setPhoneNumber\n}: IDKitStore) => ({\n  setPhoneNumber\n});\nconst PhoneInput = ({\n  disabled,\n  onSubmit\n}: {\n  disabled?: boolean;\n  onSubmit?: () => Promise<void> | void;\n}) => {\n  const {\n    setPhoneNumber\n  } = useIDKitStore(getParams);\n  const [countryCode, setCountryCode] = useState<string>('1');\n  const [phoneNumberState, setPhoneNumberState] = useState<string>('');\n  useEffect(() => {\n    const validatedPhone = phone(`+${countryCode} ${phoneNumberState}`);\n    if (!validatedPhone.isValid) {\n      setPhoneNumber('');\n      return;\n    }\n    setPhoneNumber(validatedPhone.phoneNumber);\n  }, [countryCode, phoneNumberState, setPhoneNumber]);\n  return <Fragment>\n\t\t\t<label htmlFor=\"phone-number\" className=\"sr-only block text-sm font-medium text-gray-700\">\n\t\t\t\t{__('Phone Number')}\n\t\t\t</label>\n\t\t\t<div className=\"dark:bg-29343f focus-within:border-0d151d relative mt-1 flex rounded-2xl border-2 border-transparent bg-gray-100 py-2 px-3 shadow-sm transition-colors focus-within:bg-white dark:focus-within:border-white dark:focus-within:bg-transparent\">\n\t\t\t\t<div className=\"flex items-center\">\n\t\t\t\t\t<label htmlFor=\"country\" className=\"sr-only\">\n\t\t\t\t\t\t{__('Country')}\n\t\t\t\t\t</label>\n\t\t\t\t\t<CountryCodeSelect value={countryCode} onChange={setCountryCode} />\n\t\t\t\t</div>\n\t\t\t\t<input type=\"tel\" name=\"phone-number\" value={phoneNumberState} placeholder={__('Phone number')} onChange={e => setPhoneNumberState(e.target.value)} className=\"placeholder:text-9eafc0 block w-full rounded-md border-transparent bg-transparent pl-6 focus:border-transparent focus:ring-transparent dark:text-white sm:text-sm\" disabled={disabled} onKeyDown={e => e.key === 'Enter' && void onSubmit?.()} />\n\t\t\t</div>\n\t\t</Fragment>;\n};\nexport default memo(PhoneInput);", "import { __ } from '@/lang';\nimport { classNames } from '@/lib/utils';\nimport ReactCountryFlag from 'react-country-flag';\nimport CheckIcon from '@/components/Icons/CheckIcon';\nimport { allCountries } from 'country-telephone-data';\nimport { Listbox, Transition } from '@headlessui/react';\nimport ChevronDownIcon from '@/components/Icons/ChevronDownIcon';\nimport { Fragment, useCallback, useEffect, useRef, useState } from 'react';\ntype Props = {\n  value: string;\n  onChange: (value: string) => void;\n};\nconst CountryCodeSelect = ({\n  value,\n  onChange\n}: Props) => {\n  const [countryCode, setCountryCode] = useState<string>('us');\n  const listRef = useRef<HTMLUListElement>(null);\n\n  // FIXME: temporary solution for scroll list\n  useEffect(() => {\n    const List = listRef.current;\n    if (!List) {\n      return;\n    }\n    let touchY = 0;\n    const handleWheel = (e: WheelEvent) => {\n      List.scrollTop += e.deltaY;\n    };\n    const handleTouchStart = (e: TouchEvent) => {\n      touchY = List.scrollTop + e.touches[0].pageY;\n    };\n    const handleTouchMove = (e: TouchEvent) => {\n      List.scrollTop = touchY - e.touches[0].pageY;\n    };\n    List.addEventListener('wheel', handleWheel);\n    List.addEventListener('touchstart', handleTouchStart);\n    List.addEventListener('touchmove', handleTouchMove);\n    return () => {\n      List.removeEventListener('wheel', handleWheel);\n      List.removeEventListener('touchstart', handleTouchStart);\n      List.removeEventListener('touchmove', handleTouchMove);\n    };\n  }, []);\n  const handleSetListHeight = useCallback(() => {\n    const List = listRef.current;\n    if (!List) return;\n    const bounds = List.getBoundingClientRect();\n    List.style.maxHeight = `${window.innerHeight - bounds.top - 12}px`;\n  }, []);\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    onChange(allCountries.find(country => country.iso2 === countryCode)!.dialCode);\n  }, [countryCode, onChange]);\n  return <Listbox value={countryCode} onChange={setCountryCode}>\n\t\t\t{({\n      open\n    }) => <>\n\t\t\t\t\t<Listbox.Label className=\"sr-only block text-sm font-medium text-gray-700\">\n\t\t\t\t\t\t{__('Country Code')}\n\t\t\t\t\t</Listbox.Label>\n\t\t\t\t\t<Listbox.Button className=\"relative z-20 flex flex-none items-center\">\n\t\t\t\t\t\t<ReactCountryFlag svg countryCode={countryCode} style={{\n          width: 24,\n          height: 24,\n          flexShrink: 0,\n          objectFit: 'cover',\n          borderRadius: '50%'\n        }} />\n\t\t\t\t\t\t<p className=\"ml-2.5 mr-1 dark:text-white\">+{value}</p>\n\t\t\t\t\t\t<ChevronDownIcon className=\"text-9eafc0 h-1.5 w-auto shrink-0 basis-4\" aria-hidden=\"true\" />\n\t\t\t\t\t</Listbox.Button>\n\n\t\t\t\t\t<Transition show={open} as={Fragment} leave=\"transition ease-in duration-100\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\" beforeEnter={handleSetListHeight} unmount={false}>\n\t\t\t\t\t\t<Listbox.Options ref={listRef} className=\"dark:bg-29343f absolute inset-x-0 top-full z-10 mt-1.5 max-h-[var(--max-h,_0px)] w-full min-w-[calc(100vw_-_48px)] overflow-hidden rounded-2xl bg-white text-base shadow-lg ring-1 ring-black/5 focus:outline-none sm:text-sm md:max-h-96 md:min-w-[20rem]\" unmount={false}>\n\t\t\t\t\t\t\t<div className=\"overflow-y-scroll px-2 py-1\">\n\t\t\t\t\t\t\t\t{allCountries.map(country => <Listbox.Option key={country.iso2} className={({\n              selected,\n              active\n            }) => classNames('dark:text-white', selected ? 'bg-0d151d dark:bg-white text-white dark:text-0d151d font-medium' : active ? 'bg-0d151d/5 dark:bg-ece8fb/10' : 'text-gray-900 dark:text-white', 'relative flex items-center justify-between px-2 py-2 w-full rounded-xl text-sm focus:bg-gray-100 dark:focus:bg-ece8fb/25', 'focus:outline-none select-none')} value={country.iso2}>\n\t\t\t\t\t\t\t\t\t\t{({\n                selected\n              }) => <>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex items-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ReactCountryFlag svg countryCode={country.iso2} style={{\n                    width: 24,\n                    height: 24,\n                    flexShrink: 0\n                  }} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"mx-2 whitespace-pre-wrap\">{country.name}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{selected ? <span className=\"text-white\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckIcon className=\"h-auto w-3\" aria-hidden=\"true\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> : null}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<span className={classNames('font-medium', selected ? 'text-white dark:text-0d151d' : 'text-0d151d dark:text-white')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t+{country.dialCode}\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t</Listbox.Option>)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Listbox.Options>\n\t\t\t\t\t</Transition>\n\t\t\t\t</>}\n\t\t</Listbox>;\n};\nexport default CountryCodeSelect;", "import type { FC, HTMLAttributes } from 'react';\nconst ChevronDownIcon: FC<HTMLAttributes<SVGElement>> = props => <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 10 6\">\n\t\t<path stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1.846\" d=\"m1.004 1 4 4 4-4\" />\n\t</svg>;\nexport default ChevronDownIcon;", "/**\n * This module is fully experimental. Usage is not yet supported except as individually shared.\n */\nimport type { PhoneRequestErrorCodes, PhoneSignalProof, PhoneVerificationChannel } from '@/types'\n\nconst API_BASE_URL = 'https://world-id-lens-bridge.vercel.app/api/v1'\n\nexport async function requestCode(\n\tphone_number: string,\n\tapp_id: string,\n\tchannel: PhoneVerificationChannel,\n\tph_distinct_id: string\n): Promise<void> {\n\tconst res = await post('/phone/request', {\n\t\tphone_number,\n\t\tapp_id,\n\t\tchannel,\n\t\tph_distinct_id,\n\t})\n\n\tif (!res.ok) throw await res.json()\n}\n\ninterface VerifyCodeSuccess extends Pick<PhoneSignalProof, 'signature' | 'timestamp'> {\n\tsuccess: true\n\tnullifier_hash: string\n}\n\nexport async function verifyCode(\n\tphone_number: string,\n\tcode: string,\n\tapp_id: string,\n\tph_distinct_id: string\n): Promise<VerifyCodeSuccess> {\n\tconst res = await post('/phone/verify', {\n\t\tphone_number,\n\t\tcode,\n\t\tapp_id,\n\t\tph_distinct_id,\n\t})\n\tif (!res.ok) throw await res.json()\n\n\treturn res.json() as Promise<VerifyCodeSuccess>\n}\n\ninterface RequestCodeError {\n\tcode: PhoneRequestErrorCodes\n\tdetail: string\n}\n\nexport function isRequestCodeError(error: unknown): error is RequestCodeError {\n\treturn (\n\t\ttypeof error === 'object' &&\n\t\terror !== null &&\n\t\tObject.prototype.hasOwnProperty.call(error as Record<string, unknown>, 'code') &&\n\t\tObject.prototype.hasOwnProperty.call(error as Record<string, unknown>, 'detail')\n\t)\n}\n\nexport interface VerifyCodeError {\n\tcode: 'invalid_code'\n\tdetails: string\n}\n\nexport function isVerifyCodeError(error: unknown): error is VerifyCodeError {\n\treturn (\n\t\ttypeof error === 'object' &&\n\t\terror !== null &&\n\t\tObject.prototype.hasOwnProperty.call(error as Record<string, unknown>, 'code')\n\t)\n}\n\nconst post = (path: string, body: Record<string, string>) =>\n\tfetch(`${API_BASE_URL}${path}`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify(body),\n\t})\n", "import { __ } from '@/lang';\nimport { IDKITStage } from '@/types';\nimport { motion } from 'framer-motion';\nimport { useMemo, useRef } from 'react';\nimport { classNames } from '@/lib/utils';\nimport useIDKitStore from '@/store/idkit';\nimport { AppErrorCodes } from '@/types/app';\nimport type { IDKitStore } from '@/store/idkit';\nimport { getTelemetryId } from '@/lib/telemetry';\nimport WorldIDIcon from '@/components/WorldIDIcon';\nimport ResendButton from '@/components/ResendButton';\nimport SMSCodeInput from '@/components/SMSCodeInput';\nimport { isVerifyCodeError, verifyCode } from '@/services/phone';\nconst getParams = ({\n  processing,\n  phoneNumber,\n  code,\n  setStage,\n  setProcessing,\n  setCode,\n  handleVerify,\n  setErrorState,\n  errorState,\n  app_id\n}: IDKitStore) => ({\n  processing,\n  phoneNumber,\n  code,\n  errorState,\n  setCode,\n  setErrorState,\n  app_id,\n  onSubmit: async () => {\n    try {\n      setErrorState(null);\n      setProcessing(true);\n      const {\n        nullifier_hash,\n        ...proof_payload\n      } = await verifyCode(phoneNumber, code, app_id, getTelemetryId());\n      handleVerify({\n        credential_type: 'phone',\n        nullifier_hash,\n        proof_payload\n      });\n    } catch (error) {\n      setProcessing(false);\n      setCode('');\n      if (isVerifyCodeError(error)) {\n        setErrorState({\n          code: AppErrorCodes.InvalidPhoneOTP\n        });\n        console.error(error);\n      } else {\n        setStage(IDKITStage.ERROR);\n      }\n    }\n  },\n  useWorldID: () => setStage(IDKITStage.WORLD_ID)\n});\nconst VerifyCodeState = () => {\n  const submitRef = useRef<HTMLButtonElement>(null);\n  const {\n    phoneNumber,\n    processing,\n    code,\n    onSubmit,\n    useWorldID,\n    errorState\n  } = useIDKitStore(getParams);\n  const animation = useMemo(() => {\n    if (!processing && errorState) {\n      return {\n        x: [0, -16, 16, -8, 8, 0]\n      };\n    }\n  }, [processing, errorState]);\n  return <div className=\"space-y-6\">\n\t\t\t<div>\n\t\t\t\t<p className=\"text-center text-2xl font-semibold text-gray-900 dark:text-white\">\n\t\t\t\t\t{__('Enter your 6-digit code to complete the verification.')}\n\t\t\t\t</p>\n\t\t\t\t<p className=\"text-70868f mt-2 text-center\">\n\t\t\t\t\t{__('Code has been sent to')} <span className=\"font-medium\">{phoneNumber}</span>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<form className=\"mt-2 space-y-2\">\n\t\t\t\t<motion.div animate={animation} transition={{\n        type: 'spring',\n        stiffness: 30\n      }}>\n\t\t\t\t\t<SMSCodeInput submitRef={submitRef} disabled={processing} />\n\t\t\t\t</motion.div>\n\t\t\t\t<p className=\"text-70868f text-center text-xs\">\n\t\t\t\t\t{errorState ? <span className=\"text-red-400\">{__('That code is invalid. Please try again.')}</span> : __('Did not receive a code?')}{' '}\n\t\t\t\t\t<ResendButton />\n\t\t\t\t</p>\n\t\t\t</form>\n\t\t\t<div className=\"flex items-center justify-center space-x-1\">\n\t\t\t\t<div className=\"flex items-center space-x-2\">\n\t\t\t\t\t<WorldIDIcon />\n\t\t\t\t\t<p className=\"text-70868f font-medium\">{__('I have World ID')}</p>\n\t\t\t\t</div>\n\t\t\t\t<span className=\"font-medium text-gray-400\">&bull;</span>\n\t\t\t\t<button type=\"button\" onClick={useWorldID} className=\"bg-gradient-to-r from-[#FF6848] to-[#4940E0] bg-clip-text font-medium text-transparent\">\n\t\t\t\t\t{__('Verify human')}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className=\"mt-4 flex justify-center\">\n\t\t\t\t<motion.button layoutId=\"phone-button\" type=\"button\" whileTap={{\n        scale: phoneNumber ? 0.95 : 1\n      }} whileHover={{\n        scale: phoneNumber ? 1.05 : 1\n      }} animate={{\n        opacity: code ? 1 : 0.4\n      }} transition={{\n        layout: {\n          duration: 0.15\n        }\n      }} onClick={() => void onSubmit()} disabled={!code || processing} ref={submitRef} className={classNames('flex w-full items-center justify-center px-8 py-4 border border-transparent font-medium rounded-xl shadow-sm', 'bg-0d151d dark:bg-white text-white dark:text-0d151d', 'focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-0d151d', 'disabled:cursor-not-allowed disabled:bg-d3dfea dark:disabled:bg-29343f')}>\n\t\t\t\t\t<motion.span transition={{\n          layout: {\n            duration: 0.15\n          }\n        }} layoutId=\"phone-text\">\n\t\t\t\t\t\t{__('Continue')}\n\t\t\t\t\t</motion.span>\n\t\t\t\t</motion.button>\n\t\t\t</div>\n\t\t</div>;\n};\nexport default VerifyCodeState;", "import { __ } from '@/lang';\nimport { IDKITStage } from '@/types';\nimport { memo, useState } from 'react';\nimport Countdown from 'react-countdown';\nimport useIDKitStore from '@/store/idkit';\nimport { AppErrorCodes } from '@/types/app';\nimport { PhoneVerificationChannel } from '@/types';\nimport { isRequestCodeError, requestCode } from '@/services/phone';\nimport { getTelemetryId, telemetryRetryCode } from '@/lib/telemetry';\nconst ONE_MINUTE = 59 * 1000;\nconst renderer = ({\n  minutes,\n  seconds,\n  completed\n}: {\n  minutes: number;\n  seconds: number;\n  completed: boolean;\n}) => {\n  if (completed) return;\n  return <span>\n\t\t\tin {minutes}:{seconds < 10 ? `0${seconds}` : seconds}\n\t\t</span>;\n};\nconst ResendButton = () => {\n  const {\n    phoneNumber,\n    app_id,\n    setProcessing,\n    setStage,\n    setErrorState\n  } = useIDKitStore();\n  const [nextTime, setNextTime] = useState<number | undefined>(new Date().getTime() + ONE_MINUTE);\n  const handleRetry = async (channel: PhoneVerificationChannel) => {\n    setNextTime(new Date().getTime() + ONE_MINUTE);\n    try {\n      setProcessing(true);\n      await requestCode(phoneNumber, app_id, channel, getTelemetryId());\n      telemetryRetryCode(channel);\n      setProcessing(false);\n    } catch (error) {\n      setProcessing(false);\n      setNextTime(undefined);\n      if (isRequestCodeError(error) && error.code !== 'server_error') {\n        setErrorState({\n          code: AppErrorCodes.GenericError\n        });\n        console.error(error);\n      } else {\n        setStage(IDKITStage.ERROR);\n      }\n    }\n  };\n  return <>\n\t\t\t<button type=\"button\" disabled={!!nextTime} className=\"font-medium text-indigo-500 disabled:cursor-wait disabled:text-gray-900 dark:disabled:text-white\" onClick={() => void handleRetry(PhoneVerificationChannel.SMS)}>\n\t\t\t\t{__('Resend')}{' '}\n\t\t\t\t{nextTime && <Countdown onComplete={() => setNextTime(undefined)} date={nextTime} renderer={renderer} />}\n\t\t\t</button>{' '}\n\t\t\tor{' '}\n\t\t\t<button type=\"button\" className=\"font-medium text-indigo-500 disabled:cursor-wait disabled:text-gray-900 dark:disabled:text-white\" disabled={!!nextTime} onClick={() => void handleRetry(PhoneVerificationChannel.Call)}>\n\t\t\t\t{__('Call me')}\n\t\t\t</button>\n\t\t</>;\n};\nexport default memo(ResendButton);", "import { __ } from '@/lang';\nimport { classNames } from '@/lib/utils';\nimport useIDKitStore from '@/store/idkit';\nimport type { IDKitStore } from '@/store/idkit';\nimport type { ChangeEvent, ClipboardEvent, KeyboardEvent, RefObject } from 'react';\nimport { createRef, memo, useCallback, useEffect, useMemo, useState } from 'react';\ntype Array6<T> = [T, T, T, T, T, T];\nconst fillValues = (value: string): Array6<string> => {\n  return (new Array(6).fill('').map((_, index) => value[index] || '') as Array6<string>);\n};\nconst getParams = ({\n  code,\n  setCode\n}: IDKitStore) => ({\n  code,\n  setCode\n});\nconst SMSCodeInput = ({\n  submitRef,\n  disabled\n}: {\n  submitRef: RefObject<HTMLButtonElement>;\n  disabled?: boolean;\n}) => {\n  const {\n    code,\n    setCode\n  } = useIDKitStore(getParams);\n  const inputsRefs = useMemo(() => new Array(6).fill(null).map(() => createRef<HTMLInputElement>()), []);\n  const [values, setValues] = useState<Array6<string>>(fillValues(''));\n  const [focusedIndex, setFocusedIndex] = useState<number>(-1);\n  useEffect(() => {\n    if (!code) {\n      setValues(fillValues(''));\n    }\n  }, [code]);\n  const selectInputContent = useCallback((index: number) => {\n    requestAnimationFrame(() => {\n      inputsRefs[index].current?.select();\n    });\n  }, [inputsRefs]);\n  const setValue = useCallback((value: string, index: number) => {\n    const nextValues = [...values];\n    nextValues[index] = value;\n    setValues((nextValues as Array6<string>));\n    const stringifiedValues = nextValues.join('');\n    setCode('');\n    if (stringifiedValues.length !== 6) return;\n    setCode(stringifiedValues);\n  }, [setCode, values]);\n  const focusInput = useCallback((index: number) => {\n    requestAnimationFrame(() => {\n      inputsRefs[index]?.current?.focus();\n    });\n  }, [inputsRefs]);\n  const blurInput = useCallback((index: number) => {\n    requestAnimationFrame(() => {\n      inputsRefs[index].current?.blur();\n    });\n  }, [inputsRefs]);\n  const onInputFocus = (index: number) => {\n    if (!inputsRefs[index]?.current) return;\n    setFocusedIndex(index);\n    selectInputContent(index);\n  };\n  const onInputChange = useCallback((event: ChangeEvent<HTMLInputElement>, index: number) => {\n    const value = event.target.value.replace(values[index], '');\n    if (!/^\\d/.test(value)) return selectInputContent(index);\n    if (value.length > 1) {\n      setValues(fillValues(event.target.value));\n      if (event.target.value.length !== 6) return;\n      setCode(event.target.value);\n      return blurInput(index);\n    }\n    setValue(value, index);\n    if (index === 5) {\n      requestAnimationFrame(() => {\n        submitRef.current?.focus();\n      });\n    } else focusInput(index + 1);\n  }, [blurInput, submitRef, focusInput, selectInputContent, setCode, setValue, values]);\n  const onInputKeyDown = useCallback((event: KeyboardEvent<HTMLInputElement>, index: number) => {\n    if (event.key === 'Backspace' || event.key === 'Delete') {\n      event.preventDefault();\n      setValue('', focusedIndex);\n      return focusInput(index - 1);\n    }\n    if (event.key === values[index]) {\n      if (index === 5) return blurInput(index);\n      focusInput(index + 1);\n    }\n  }, [focusInput, blurInput, focusedIndex, setValue, values]);\n  const onInputPaste = useCallback((event: ClipboardEvent<HTMLInputElement>, index: number) => {\n    event.preventDefault();\n    const pastedValue = event.clipboardData.getData('text');\n    const nextValues = pastedValue.slice(0, 6);\n    if (!/^\\d/.test(nextValues)) return;\n    setValues(fillValues(nextValues));\n    if (nextValues.length !== 6) return focusInput(nextValues.length);\n    setCode(nextValues);\n    blurInput(index);\n  }, [blurInput, focusInput, setCode]);\n  useEffect(() => {\n    focusInput(0);\n  }, [focusInput, inputsRefs]);\n  return <fieldset className=\"flex items-center justify-center space-x-3\">\n\t\t\t<legend className=\"sr-only\">{__('Enter your SMS code')}</legend>\n\t\t\t{inputsRefs.map((ref, i) => <input ref={ref} key={i} maxLength={1} type=\"number\" pattern=\"[0-9]*\" value={values[i]} inputMode=\"numeric\" autoComplete=\"one-time-code\"\n    // eslint-disable-next-line jsx-a11y/no-autofocus\n    autoFocus={i === 0} onFocus={() => onInputFocus(i)} onPaste={event => onInputPaste(event, i)} onChange={event => onInputChange(event, i)} onKeyDown={event => onInputKeyDown(event, i)} className={classNames('w-10 xs:w-12 aspect-[6/7] border-0 outline-0 rounded-xl text-center caret-transparent text-29343f dark:text-white', 'bg-gray-100 dark:bg-29343f focus:bg-transparent', 'ring ring-transparent focus:ring-5b52f3')} disabled={disabled} />)}\n\t\t</fieldset>;\n};\nexport default memo(SMSCodeInput);", "import { __ } from '@/lang';\nimport type { FC } from 'react';\nimport { IDKITStage } from '@/types';\nimport { motion } from 'framer-motion';\nimport { classNames } from '@/lib/utils';\nimport useIDKitStore from '@/store/idkit';\nimport type { IDKitStore } from '@/store/idkit';\nimport WorldIDIcon from '@/components/WorldIDIcon';\nimport AboutWorldID from '@/components/AboutWorldID';\nimport type { VerificationMethods } from '@/types/config';\nimport DevicePhoneMobileIcon from '@/components/Icons/DevicePhoneMobileIcon';\nconst getParams = ({\n  setStage,\n  methods\n}: IDKitStore) => ({\n  methods,\n  setStage\n});\nconst SelectMethodState = () => {\n  const {\n    methods\n  } = useIDKitStore(getParams);\n  return <div className=\"-mt-6 space-y-6\">\n\t\t\t<div>\n\t\t\t\t<p className=\"text-center text-2xl font-semibold text-gray-900 dark:text-white\">\n\t\t\t\t\t{__('Verify your account')}\n\t\t\t\t</p>\n\t\t\t\t<p className=\"text-70868f mt-3 text-center md:mt-2\">\n\t\t\t\t\t{__('Help prevent spam and abuse by verifying your account.')}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"space-y-3\">\n\t\t\t\t{methods.map((method, i) => <MethodButton primary={i == 0} key={method} method={method} />)}\n\t\t\t</div>\n\t\t\t{methods.includes('orb') && <div className=\"mt-4 flex justify-center\">\n\t\t\t\t\t<p className=\"text-70868f text-sm\">\n\t\t\t\t\t\t{__(\"Don't have your World ID yet?\")}{' '}\n\t\t\t\t\t\t<a className=\"text-4940e0 font-medium\" target=\"_blank\" href=\"https://worldcoin.org/download\" rel=\"noreferrer\">\n\t\t\t\t\t\t\t{__('Download Now')}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</p>\n\t\t\t\t</div>}\n\t\t\t<AboutWorldID className=\"mt-8\" />\n\t\t</div>;\n};\nconst getSetStage = ({\n  setStage\n}: IDKitStore) => setStage;\nconst MethodButton: FC<{\n  primary: boolean;\n  method: VerificationMethods;\n}> = ({\n  method,\n  primary\n}) => {\n  const setStage = useIDKitStore(getSetStage);\n  return <motion.button whileTap={{\n    scale: 0.95\n  }} whileHover={{\n    scale: 1.05\n  }} transition={{\n    layout: {\n      duration: 0.15\n    }\n  }} layoutId={method == 'orb' ? 'worldid-button' : 'phone-button'} onClick={() => setStage(method == 'orb' ? IDKITStage.WORLD_ID : IDKITStage.ENTER_PHONE)} className={classNames('flex w-full space-x-2 items-center px-4 py-4 border border-transparent font-medium rounded-2xl shadow-sm', primary ? 'bg-0d151d dark:bg-white text-white dark:text-0d151d' : 'bg-d3dfea/30 dark:bg-29343f text-0d151d dark:text-white')}>\n\t\t\t{method == 'orb' ? <WorldIDIcon className=\"h-5 w-5 text-gray-400\" /> : <DevicePhoneMobileIcon className=\"h-5 w-5 text-gray-400\" />}\n\t\t\t<motion.span className=\"flex-1 text-center\" transition={{\n      layout: {\n        duration: 0.15\n      }\n    }} layoutId={method == 'orb' ? 'worldid-text' : 'phone-text'}>\n\t\t\t\t{method == 'orb' ? __('Verify with World ID') : __('Verify with Phone Number')}\n\t\t\t</motion.span>\n\t\t</motion.button>;\n};\nexport default SelectMethodState;", "/**\n * This state is triggered after a successful signal is received and the host app is performing their own verifications,\n * before we show a success/error state.\n */\n\nimport { __ } from '@/lang';\nimport { memo } from 'react';\nimport LoadingIcon from '@/components/Icons/LoadingIcon';\nconst HostAppVerificationState = () => {\n  return <div className=\"space-y-6\">\n\t\t\t<div className=\"flex justify-center\">\n\t\t\t\t<LoadingIcon className=\"h-24 w-24\" />\n\t\t\t</div>\n\t\t\t<div className=\"text-70868f mt-4\">{__('Transmitting verification to host app. Please wait...')}</div>\n\t\t</div>;\n};\nexport default memo(HostAppVerificationState);", "import { createStitches } from '@stitches/react'\nexport type { CSS } from '@stitches/react/types/css-util'\n\nexport const stitches = createStitches({\n\tprefix: '',\n\ttheme: {},\n\tutils: {},\n})\n\nexport const { css, styled, globalCss, theme, keyframes, getCssText } = stitches\n", "import { styled as _styled } from \"../../stitches.config.ts\";\nimport { __ } from '@/lang';\nimport { motion } from 'framer-motion';\nimport { keyframes } from 'stitches.config';\nimport type { MotionProps } from 'framer-motion';\nimport WorldcoinIcon from './Icons/WorldcoinIcon';\nimport type { ButtonHTMLAttributes, FC } from 'react';\nconst MotionButton = motion(_styled(\"button\", {\n  ...{\n    \"position\": \"relative\",\n    \"overflow\": \"hidden\",\n    \"borderRadius\": \"0.75rem\",\n    \"borderStyle\": \"none\",\n    \"borderColor\": \"rgb(255 255 255 / 0.1)\",\n    \"paddingLeft\": \"6rem\",\n    \"paddingRight\": \"6rem\",\n    \"paddingTop\": \"1.5rem\",\n    \"paddingBottom\": \"1.5rem\",\n    \"willChange\": \"transform\",\n    \"&:focus\": {\n      \"outline\": \"2px solid transparent\",\n      \"outlineOffset\": \"2px\"\n    },\n    \".dark &\": {\n      \"borderWidth\": \"1px\"\n    }\n  },\n  variants: {\n    theme: {\n      dark: {\n        \"--tw-bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgb(0 0 0 / var(--tw-bg-opacity))\"\n      },\n      light: {\n        \"--tw-bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgb(242 245 249 / var(--tw-bg-opacity))\"\n      }\n    }\n  }\n}));\nconst ButtonContent = _styled(\"div\", {\n  ...{\n    \"position\": \"absolute\",\n    \"top\": \"1px\",\n    \"right\": \"1px\",\n    \"bottom\": \"1px\",\n    \"left\": \"1px\",\n    \"zIndex\": \"10\",\n    \"display\": \"grid\",\n    \"cursor\": \"pointer\",\n    \"placeItems\": \"center\",\n    \"borderRadius\": \"0.75rem\"\n  },\n  variants: {\n    theme: {\n      dark: {\n        \"--tw-bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgb(0 0 0 / var(--tw-bg-opacity))\"\n      },\n      light: {\n        \"--tw-bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgb(242 245 249 / var(--tw-bg-opacity))\"\n      }\n    }\n  }\n});\nconst disco = keyframes({\n  '0%': {\n    transform: 'translateY(-50%) rotate(0deg)'\n  },\n  '100%': {\n    transform: 'translateY(-50%) rotate(360deg)'\n  }\n});\nconst AnimatedBorder = _styled(\"span\", {\n  ...{\n    \"position\": \"absolute\",\n    \"top\": \"0px\",\n    \"right\": \"0px\",\n    \"bottom\": \"0px\",\n    \"left\": \"0px\",\n    \"zIndex\": \"0\",\n    \"--tw-scale-x\": \"2.0\",\n    \"transform\": \"translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))\",\n    \"--tw-blur\": \"blur(8px)\",\n    \"filter\": \"var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)\"\n  },\n  '&::before': {\n    content: `''`,\n    animation: `${disco} 1.5s linear infinite`,\n    ...{\n      \"position\": \"absolute\",\n      \"top\": \"50%\",\n      \"right\": \"0px\",\n      \"bottom\": \"0px\",\n      \"left\": \"0px\",\n      \"aspectRatio\": \"1 / 1\",\n      \"backgroundImage\": \"conic-gradient(var(--tw-gradient-stops))\"\n    }\n  },\n  variants: {\n    theme: {\n      dark: {\n        '&::before': {\n          \"--tw-gradient-from\": \"#000\",\n          \"--tw-gradient-to\": \"#000\",\n          \"--tw-gradient-stops\": \"var(--tw-gradient-from), rgb(255 255 255 / 0.3), var(--tw-gradient-to)\"\n        }\n      },\n      light: {\n        '&::before': {\n          \"--tw-gradient-from\": \"#f2f5f9\",\n          \"--tw-gradient-to\": \"#e5e7eb\",\n          \"--tw-gradient-stops\": \"var(--tw-gradient-from), #e5e7eb, var(--tw-gradient-to)\"\n        }\n      }\n    }\n  }\n});\nconst TextContainer = _styled(\"div\", {\n  \"display\": \"flex\",\n  \"alignItems\": \"center\",\n  \"> :not([hidden]) ~ :not([hidden])\": {\n    \"--tw-space-x-reverse\": \"0\",\n    \"marginRight\": \"calc(1rem * var(--tw-space-x-reverse))\",\n    \"marginLeft\": \"calc(1rem * calc(1 - var(--tw-space-x-reverse)))\"\n  }\n});\nconst ButtonLabel = _styled(\"span\", {\n  \"fontFamily\": \"Rubik, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, \\\"Noto Sans\\\", sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\", \\\"Noto Color Emoji\\\"\",\n  \"fontSize\": \"0.875rem\",\n  \"lineHeight\": \"1.25rem\"\n});\ntype Props = ButtonHTMLAttributes<HTMLButtonElement> & MotionProps & {\n  theme?: 'dark' | 'light';\n};\nconst _TwComponent = _styled(WorldcoinIcon, {\n  \"height\": \"1rem\",\n  \"width\": \"1rem\"\n});\nconst SignInButton: FC<Props> = ({\n  className,\n  theme = 'light',\n  ...props\n}) => <MotionButton whileHover={{\n  scale: 1.02\n}} whileTap={{\n  scale: 0.98\n}} theme={theme} {...props}>\n\t\t<ButtonContent theme={theme}>\n\t\t\t<TextContainer>\n\t\t\t\t<_TwComponent data-tw=\"h-4 w-4\" />\n\t\t\t\t<ButtonLabel>{__('Sign in with World ID')}</ButtonLabel>\n\t\t\t</TextContainer>\n\t\t</ButtonContent>\n\t\t<AnimatedBorder aria-hidden theme={theme} />\n\t</MotionButton>;\nexport default SignInButton;", "import type { FC } from 'react';\nimport { useMemo } from 'react';\nimport { useState } from 'react';\nimport { useCallback } from 'react';\nimport IDKitWidget from './IDKitWidget';\nimport type { ISuccessResult } from '..';\nimport SignInButton from './SignInButton';\nimport type { IDKitConfig, WidgetConfig } from '@/types/config';\ntype Props = Omit<WidgetConfig, 'autoClose' | 'experimental_methods' | 'handleVerify'> & Pick<IDKitConfig, 'app_id' | 'walletConnectProjectId'> & {\n  nonce?: string;\n  onSuccess: (jwt: string) => void;\n  children?: ({\n    open\n  }: {\n    open: () => void;\n  }) => JSX.Element;\n};\nconst SignInWithWorldID: FC<Props> = ({\n  onSuccess,\n  app_id,\n  nonce,\n  theme,\n  children,\n  ...props\n}) => {\n  const [token, setToken] = useState<string>('');\n  const signal = useMemo<string>(() => {\n    if (nonce) return nonce;\n    return Date.now().toString();\n  }, [nonce]);\n  const handleVerify = useCallback(async (proof: ISuccessResult) => {\n    const response = await fetch('https://developer.worldcoin.org/api/v1/oidc/authorize', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ...proof,\n        app_id,\n        nonce: signal,\n        response_type: 'id_token'\n      })\n    });\n    if (!response.ok) {\n      if (response.status != 400) {\n        throw new Error('Something went wrong when verifying your identity. Please try again.');\n      }\n      const error = (await response.json() as {\n        code: string;\n        message: string;\n      });\n      throw new Error(error.message);\n    }\n    const {\n      jwt\n    } = (await response.json() as {\n      jwt: string;\n    });\n    setToken(jwt);\n  }, [app_id, signal]);\n  const onIDKitSuccess = useCallback(() => void onSuccess(token), [onSuccess, token]);\n  return <IDKitWidget {...props} action=\"\" autoClose theme={theme} app_id={app_id} signal={signal} onSuccess={onIDKitSuccess} handleVerify={handleVerify}>\n\t\t\t{children ?? (({\n      open\n    }) => <SignInButton onClick={open} theme={theme} />)}\n\t\t</IDKitWidget>;\n};\nexport default SignInWithWorldID;"],
  "mappings": "skCAAA,oLCAA,MAAuB,sBCAvB,OAA0B,iBCA1B,GAAM,IAAmE,CAAC,EAEpE,GAAU,IAA0C,CAF1D,MAGC,GAAI,MAAO,WAAc,IAAa,OAEtC,GAAM,GAAgB,aAAU,UAAU,KAAK,GAAK,GAAa,IAAM,IAAS,IAA1D,OAA+D,GAErF,MAAO,IAAa,EACrB,EAiBM,GAAgB,CAAmB,EAAQ,IAA0C,CAC1F,GAAI,GAAmB,EACvB,OAAW,CAAC,EAAK,IAAU,QAAO,QAAQ,UAAU,CAAC,CAAC,EAAG,EAAW,EAAI,QAAQ,IAAI,IAAO,CAAe,EAE1G,MAAO,EACR,EAIO,WAA8B,EAAQ,EAAuC,CAlCpF,QAmCC,MAAI,OAAO,WAAc,IAAoB,EAEtC,GAAc,SAAQ,IAAR,cAAY,KAAZ,OAAoB,EAAK,CAAM,CACrD,CCrCA,OAAuB,mBCDhB,GAAK,GAAL,CAAK,GACX,oBAAmB,oBACnB,uBAAuB,wBACvB,0BAA0B,4BAC1B,gBAAgB,iBAChB,wBAAwB,yBACxB,mBAAmB,oBACnB,iBAAiB,kBACjB,uBAAuB,yBACvB,wBAAwB,0BACxB,qBAAqB,sBACrB,kBAAkB,qBAClB,eAAe,gBACf,kBAAkB,oBAbP,WAgBA,GAAL,CAAK,GACX,iBAAgB,iBAChB,qBAAqB,sBACrB,uBAAuB,wBACvB,YAAY,YACZ,SAAS,SALE,YCGL,GAAK,GAAL,CAAK,GACX,OAAM,MACN,QAAQ,QAFG,WAsCL,GAAK,IAAL,CAAK,GACX,gBAAe,eACf,UAAU,UACV,sBAAsB,sBACtB,eAAe,eAJJ,YCzDZ,OAAwB,2BAMxB,YAAkC,EAAgB,CACjD,MAAO,CAAE,KAAM,kBAAmB,OAAM,CACzC,CAEA,AAAI,MAAO,YAAW,OAAW,KAChC,YAAO,qBAAuB,SAAU,EAAO,CAC9C,MAAQ,GAAM,OAAmC,OAAS,iBAC3D,GAGD,kBAA4B,EAAoB,EAAuC,CACtF,GAAI,CACH,MAAO,MAAM,OAAM,EAAO,CAAI,CAC/B,OAAS,EAAP,CACD,KAAM,IAAyB,CAAK,CACrC,CACD,CAEA,GAAI,GAA0B,KAE9B,AAAI,MAAO,YAAW,OAAW,KAChC,GAAU,GAAI,YACb,kDACA,CAAE,YAAa,QAAS,CACzB,EACA,EAAQ,MAAQ,IAIjB,GAAM,IAAc,CAAE,QAAS,QAAc,QAAS,UAAW,EAEpD,EAAiB,IAAc,CArC5C,MAsCC,MAAO,oBAAS,kBAAT,OAA4B,EACpC,EAUO,GAAM,IAAuB,IAAY,CAC/C,WAAS,QAAQ,eAAgB,GAClC,EAEa,GAAsB,IAAY,CAC9C,WAAS,QAAQ,oBAAqB,GACvC,EAEa,GAAqB,AAAC,GAA4C,CAC9E,WAAS,QAAQ,2BAA4B,OAAK,IAAL,CAAkB,SAAQ,GACxE,EHDA,GAAM,IAAgB,cAAmB,EAAE,CAAC,EAAK,IAAS,EACzD,OAAQ,GACR,OAAQ,GACR,OAAQ,GACR,YAAa,GACb,QAAS,CAAC,EACV,mBAAoB,GACpB,uBAAwB,GACxB,iBAAkB,CAAC,EAEnB,KAAM,GACN,KAAM,GACN,OAAQ,KACR,MAAO,QACP,WAAY,GACZ,YAAa,GACb,UAAW,GACX,WAAY,KACZ,WAAY,GACZ,gBAAiB,CAAC,EAClB,iBAAkB,CAAC,EACnB,MAAO,WAEP,SAAU,CACT,UAAW,AAAC,GAAsB,CACjC,OAAQ,OACF,cACJ,MAAO,GAAI,EAAE,QAAQ,SAAS,KAAK,MAC/B,WACJ,MAAO,GAAI,EAAE,QAAQ,SAAS,OAAO,MACjC,iBACA,UACJ,MAAO,WAEP,MAAO,GAEV,EACA,gBAAiB,AAAC,GACjB,GAAU,UAAW,EAAI,EAAE,QAEvB,EAAQ,OAAS,EAAU,gBACxB,EAAQ,KAAO,QAAU,cAAyB,WAE3D,EAEA,QAAS,GAAQ,EAAI,CAAE,MAAK,CAAC,EAC7B,SAAU,GAAS,EAAI,CAAE,OAAM,CAAC,EAChC,cAAe,GAAc,EAAI,CAAE,YAAW,CAAC,EAC/C,cAAe,AAAC,GAAwB,EAAI,CAAE,YAAW,CAAC,EAC1D,eAAgB,GAAe,EAAI,CAAE,aAAY,CAAC,EAClD,UAAW,IAAM,CAChB,AAAI,EAAI,EAAE,QAAQ,SAAW,GAC5B,EAAI,CAAE,MAAO,EAAI,EAAE,SAAS,gBAAgB,EAAG,WAAY,IAAK,CAAC,EAGlE,EAAI,CAAE,MAAO,gBAA0B,WAAY,IAAK,CAAC,CAC1D,EACA,mBAAoB,CACnB,EACA,IACI,CACJ,EAAI,GACH,GAAM,iBAAiB,GAAU,EAE1B,EACP,CACF,EACA,wBAAyB,CACxB,EACA,IACI,CACJ,EAAI,GACH,GAAM,gBAAgB,GAAU,EAEzB,EACP,CACF,EACA,WAAY,CACX,CACC,eACA,YACA,SACA,SACA,SACA,mBACA,qBACA,uBACA,yBACA,YACA,SAED,IACI,CACJ,GAAM,GAA6B,iBAAkB,OAAO,GAC3D,OAAO,OAAO,CAAc,EAAE,SAAS,CAAI,GAGtC,EAAoB,GAAwB,IAAyB,EAAI,EAAE,QAEjF,EAAI,GAAU,EACb,QACA,SACA,SACA,SACA,YACA,yBACA,iBAAkB,EAClB,qBACA,QAAS,UAAwB,EAAM,QACvC,MAAO,EAAoB,EAAM,SAAS,gBAAgB,CAAoB,EAAI,EAAI,EAAE,KACzF,EAAE,EAEF,EAAI,EAAE,mBAAmB,EAAW,CAAM,EACtC,GAAc,EAAI,EAAE,wBAAwB,EAAc,CAAM,CACrE,EACA,aAAc,AAAC,GAAwD,CACtE,EAAI,CAAE,MAAO,wBAAkC,WAAY,EAAM,CAAC,EAElE,QAAQ,IACP,OAAO,OAAO,EAAI,EAAE,eAAe,EAAE,IAAI,GACvC,EAA+D,CAAM,CACvE,CACD,EAAE,KACD,IAAM,CACL,EAAI,CAAE,MAAO,UAAoB,QAAO,CAAC,EAErC,EAAI,EAAE,WAAW,WAAW,IAAM,EAAI,EAAE,aAAa,EAAK,EAAG,GAAI,CACtE,EACA,GAAY,CACX,GAAI,GACJ,AAAI,GAAY,MAAO,IAAa,UAAa,EAAqC,SACrF,GAAgB,EAAqC,SAGtD,EAAI,CACH,MAAO,QACP,WAAY,CACX,KAAM,qBACN,QAAS,EAAe,EAAG,CAAY,EAAI,MAC5C,CACD,CAAC,CACF,CACD,CACD,EACA,aAAc,GAAQ,CACrB,GAAI,EACH,UAAqB,EACd,EAAI,CAAE,MAAK,CAAC,EAGpB,GAAI,EAAI,EAAE,OAAS,UAAoB,CACtC,GAAM,GAAS,EAAI,EAAE,OACf,EAAY,EAAI,EAAE,iBAExB,AAAI,GACH,sBAAsB,IACrB,OAAO,OAAO,CAAS,EAAE,QACxB,GAAM,IAAM,GAA+D,CAAM,CAClF,CACD,CACF,CAEA,EAAI,CACH,OACA,KAAM,GACN,OAAQ,KACR,WAAY,KACZ,WAAY,GACZ,MAAO,EAAI,EAAE,SAAS,gBAAgB,CACvC,CAAC,CACF,CACD,EAAE,EAEK,EAAQ,GFrOf,OAAwB,2BAOxB,GAAM,IAAW,CAAC,CAAE,OAAM,eAAc,qBAAoB,6BAA2C,EACtG,OACA,eACA,qBACA,yBACD,GAEM,GAAW,CAAC,CAAE,eAAc,aAA0B,CAAC,IAAM,CAClE,GAAM,CAAE,OAAM,eAAc,qBAAoB,2BAA4B,EAAc,GAAU,UAAO,EAE3G,uBAAU,IAAM,CACf,AAAI,GAAW,EAAmB,EAAW,MAAiB,EAC1D,GAAc,EAAwB,EAAc,MAAiB,CAE1E,EAAG,CAAC,EAAc,CAAS,CAAC,EAErB,CAAE,OAAM,QAAS,CAAa,CACtC,EAEO,GAAQ,GM5Bf,OAAuB,uBACvB,GAA8B,iBAExB,GAAiB,AAAC,GAAkC,CACxD,GAAM,GAAM,WAAW,OAAO,EAAM,CAClC,qBAAsB,GACxB,CAAC,EAAE,QAAQ,KACL,EAAO,KAAK,KAAK,EAAI,MAAM,EACjC,MAAO,GAAI,OAAO,CAAC,EAAM,EAAK,IAC5B,CAAI,EAAQ,IAAS,EAAG,EAAK,KAAK,CAAC,CAAG,CAAC,EAAO,EAAK,EAAK,OAAS,GAAG,KAAK,CAAG,EACrE,GACL,CAAC,CAAqB,CAC5B,EAKM,GAAS,CAAC,CACd,OACA,OAAO,OACI,CACX,GAAM,GAAO,eAAQ,IAAM,CACzB,GAAM,GAAuB,CAAC,EACxB,EAAS,GAAe,CAAI,EAC5B,EAAW,EAAO,EAAO,OAW/B,MAVe,CAAC,CACd,EAAG,EACH,EAAG,CACL,EAAG,CACD,EAAG,EACH,EAAG,CACL,EAAG,CACD,EAAG,EACH,EAAG,CACL,CAAC,EACM,QAAQ,CAAC,CACd,IACA,OACI,CACJ,GAAM,GAAM,GAAO,OAAS,GAAK,EAAW,EACtC,EAAM,GAAO,OAAS,GAAK,EAAW,EAC5C,OAAS,GAAI,EAAG,EAAI,EAAG,IACrB,EAAK,KAAK,gBAAC,QAAK,KAAK,eAAe,EAAG,EAAK,EAAW,EAAG,EAAG,EAAK,EAAW,EAAG,IAAK,GAAG,KAAK,KAAK,IAAK,MAAO,EAAY,GAAI,EAAI,GAAI,OAAQ,EAAY,GAAI,EAAI,GAAI,GAAK,GAAI,GAAK,GACpL,GAAK,GAAI,GAAK,GACd,UAAW,EAAI,IAAM,EAAI,aAAe,EAAI,IAAM,EAAI,aAAe,aAAc,CAAE,CAEzF,CAAC,EACD,EAAO,QAAQ,CAAC,EAAK,IAAM,CACzB,EAAI,QAAQ,CAAC,EAAG,IAAM,CACpB,AAAI,CAAC,EAAO,GAAG,IACX,EAAI,GAAK,EAAI,GAAK,EAAI,EAAO,OAAS,GAAK,EAAI,GAAK,EAAI,GAAK,EAAI,EAAO,OAAS,GACrF,EAAK,KAAK,gBAAC,UAAO,KAAK,eAAe,EAAG,EAAW,EAAG,IAAK,UAAU,KAAK,IAAK,GAAI,EAAI,EAAW,EAAW,EAAG,GAAI,EAAI,EAAW,EAAW,EAAG,UAAU,6BAA6B,CAAE,CAC7L,CAAC,CACH,CAAC,EACM,CACT,EAAG,CAAC,EAAM,CAAI,CAAC,EACf,MAAO,iBAAC,OAAI,OAAQ,EAAM,MAAO,GAC/B,CACF,CACF,EACO,GAAQ,YAAK,EAAM,ECzD1B,MAA+D,gBAWxD,YAAqB,EAAgE,CAC3F,MAAI,cAAQ,CAAK,GAAK,YAAM,CAAK,EAAU,GAAiB,CAAK,EAE1D,GAAiB,YAAM,CAAK,CAAC,CACrC,CAEO,YAAuB,EAAgD,CAC7E,GAAM,CAAC,EAAO,GAAU,EAAM,OAC7B,CAAC,CAAC,EAAO,GAAS,CAAC,EAAM,KACxB,GAAM,KAAK,CAAI,EACf,EAAO,KAAK,CAAK,EAEV,CAAC,EAAO,CAAM,GAEtB,CAAC,CAAC,EAAG,CAAC,CAAC,CACR,EAEA,MAAO,IAAiB,mBAAa,EAAO,CAAM,CAAC,CACpD,CAQA,YAA0B,EAAsD,CAC/E,GAAM,GAAO,OAAO,gBAAU,CAAK,CAAC,GAAK,OAAO,CAAC,EAC3C,EAAY,EAAK,SAAS,EAAE,EAElC,MAAO,CAAE,OAAM,OAAQ,KAAK,EAAU,SAAS,GAAI,GAAG,GAAI,CAC3D,CAEO,GAAM,IAA0B,AAAC,GAA2B,CAClE,GAAM,GAAY,kBAClB,MAAO,CAAC,CAAC,EAAM,SAAS,EAAE,MAAM,CAAS,GAAK,EAAM,QAAU,EAC/D,EAEa,GAAiB,CAAC,EAAiB,IAAuC,CACtF,GAAI,EAAM,SAAW,EAAO,OAC3B,KAAM,IAAI,OAAM,oDAAoD,EAGrE,MAAO,CAAE,QAAO,QAAO,CACxB,EAEa,GAAiB,AAAC,GAC1B,CAAC,GAAU,MAAO,IAAW,SAAiB,GAAY,UAAU,EAAE,EAEnE,GAAc,EAAO,MAAM,IAAI,CAAC,EAAM,IAAU,CAAC,EAAM,EAAO,OAAO,EAAM,CAAC,CAAC,EAGxE,GAA4B,CACxC,EACA,IAEK,EACD,OAAO,IAAW,UAAU,GAAS,GAAe,CAAC,QAAQ,EAAG,CAAC,CAAM,CAAC,GAErE,GAAc,CACpB,CAAC,UAAW,GAAY,CAAM,EAAE,IAAI,EACpC,GAAG,EAAO,MAAM,IAAI,CAAC,EAAM,IAAU,CAAC,EAAO,EAA2B,OAAO,EAAM,CAAsB,CAC5G,CAAC,GANmB,GAAc,CAAC,CAAC,UAAW,GAAY,CAAM,EAAE,IAAI,CAAC,CAAC,EAS7D,GAAe,AAAC,GACvB,EACD,MAAO,IAAW,SAAiB,EAEhC,EAAO,MAAM,IAAI,CAAC,EAAM,IAAU,GAAG,KAAQ,EAAO,OAAO,KAAS,EAAE,KAAK,GAAG,EAHjE,GChFrB,OAAqB,iBCErB,OAAiB,6BCDZ,GAAM,IAAS;AAAA,u32BAER,GAAQ,IAAO,gBAAC,aAAO,EAAO,ECH1C,OAAoC,iBAE9B,GAAW,IAA4B,CAC5C,GAAM,CAAC,EAAO,GAAY,gBAA+B,SAAS,EAElE,uBAAU,IAAM,CACf,GAAM,GAAM,WAAO,WAAW,oBAAoB,EAE5C,EAAe,AAAC,GAA8C,EAAS,EAAI,QAAU,SAAW,SAAS,EAE/G,SAAa,CAAG,EAChB,EAAI,iBAAiB,SAAU,CAAY,EACpC,IAAM,CACZ,EAAI,oBAAoB,SAAU,CAAY,CAC/C,CACD,EAAG,CAAC,CAAC,EAEE,CACR,EAEO,EAAQ,GCpBR,GAAM,GAAa,IAAI,IACtB,EAAQ,OAAO,OAAO,EAAE,KAAK,GAAG,EAG3B,GAAe,CAAC,EAAa,IAClC,KAAK,MAAM,KAAK,OAAO,EAAK,GAAM,EAAM,GAAK,CAAG,EHGxD,OAAwB,2BIPxB,GAAM,IAA4C,GAAS,gBAAC,aAAQ,GAAR,CAAe,MAAM,6BAA6B,KAAK,OAAO,QAAQ,cAChI,gBAAC,QAAK,YAAY,MAAM,OAAO,eAAe,cAAc,QAAQ,eAAe,QAAQ,EAAE,gDAAgD,CAC9I,EACM,EAAQ,GCFf,OAAwB,2BAIxB,GAAM,IAAY,CAAC,CACjB,YACA,gBACiB,EACjB,YACA,YACF,GACM,GAAuD,CAC3D,CAAC,sBAAgC,EAAG,uBAAuB,EAC3D,CAAC,iBAA6B,EAAG,qBAAqB,CACxD,EACM,GAAgD,CACpD,CAAC,qBAAiC,EAAG,0EAA0E,EAC/G,CAAC,yBAAqC,EAAG,iDAAiD,EAC1F,CAAC,6BAAwC,EAAG,wEAAwE,EACpH,CAAC,kBAA8B,EAAG,4CAA4C,EAC9E,CAAC,0BAAsC,EAAG,+DAA+D,EACzG,CAAC,qBAAiC,EAAG,mFAAmF,EACxH,CAAC,mBAA+B,EAAG,2GAA2G,EAC9I,CAAC,0BAAqC,EAAG,gEAAgE,EACzG,CAAC,2BAAsC,EAAG,qFAAqF,EAC/H,CAAC,sBAAgC,EAAG,2EAA2E,EAC/G,CAAC,uBAAmC,EAAG,8EAA8E,EACrH,CAAC,iBAA6B,EAAG,oDAAoD,EACrF,CAAC,qBAAgC,EAAG,uEAAuE,CAC7G,EACM,GAAa,IAAM,CAhCzB,MAiCE,GAAM,CACJ,YACA,cACE,EAAc,GAAW,UAAO,EACpC,MAAO,iBAAC,OAAI,UAAU,aACrB,gBAAC,OAAI,UAAU,0CACd,gBAAC,OAAI,UAAU,qFACd,gBAAC,OAAI,UAAU,8EACd,gBAAC,GAAU,UAAU,iBAAiB,CACvC,CACD,CACD,EACA,gBAAC,WACA,gBAAC,KAAE,UAAU,oEACX,kBAAY,OAAQ,GAAa,EAAW,OAAS,GAAa,gBACpE,EACA,gBAAC,KAAE,UAAU,0CAEX,kBAAY,UAAW,GAAe,oBAAY,OAAZ,OAAoB,gBAC5D,CACD,EACA,gBAAC,OAAI,UAAU,uBACd,gBAAC,UAAO,KAAK,SAAS,QAAS,EAAW,UAAU,uSAClD,EAAG,WAAW,CAChB,CACD,EACA,gBAAC,WACA,gBAAC,KAAE,UAAU,8BACX,EAAG,kEAAkE,CACvE,CACD,CACD,CACF,EACO,GAAQ,GCjEf,GAAM,IAAc,CAAC,CACnB,YAAY,MAGR,gBAAC,OAAI,UAAU,oCACnB,gBAAC,OAAI,UAAW,+KAA+K,IAAa,KAAK,UAChN,gBAAC,QAAK,UAAU,yGACd,EAAG,YAAY,CACjB,CACD,CACD,EACM,EAAQ,GNCf,OAAuB,usWONvB,GAAM,IAAc,AAAC,GAIR,CAJQ,QACnB,UACA,OAAO,MAFY,EAGhB,IAHgB,EAGhB,CAFH,SACA,SAGA,GAAM,GAAc,IAAS,KAAO,GAAK,GACzC,MAAO,iCACL,GAAU,gBAAC,OAAI,UAAW,EAAW,EAAQ,0FAA0F,EAAG,MAAM,6BAA6B,KAAK,eAAe,QAAQ,aACxM,gBAAC,QAAK,EAAE,iaAAia,CAC1a,EACD,gBAAC,WAAI,IAAM,IAA6B,GAAvC,CAA8C,IAAI,WAAW,MAAO,EAAa,OAAQ,GAAa,CACxG,CACF,EACO,EAAQ,GCnBf,GAAM,IAA2C,GAAS,gBAAC,aAAQ,GAAR,CAAe,MAAM,6BAA6B,KAAK,OAAO,QAAQ,cAC/H,gBAAC,QAAK,KAAK,eAAe,SAAS,UAAU,EAAE,iNAAiN,SAAS,UAAU,CACpR,EACM,GAAQ,GCDf,GAAM,IAAe,IACZ,gBAAC,OAAI,UAAU,+EACrB,gBAAC,GAAY,UAAU,YAAY,EACnC,gBAAC,KAAE,UAAU,sDACX,EAAG,iCAAiC,CACtC,EACA,gBAAC,MAAG,UAAU,8DACb,gBAAC,MAAG,UAAU,aACZ,EAAG,mHAAmH,CACxH,EACA,gBAAC,MAAG,UAAU,aAAa,EAAG,oDAAoD,CAAE,EACpF,gBAAC,MAAG,UAAU,cACZ,EAAG,0DAA0D,EAAG,IACjE,gBAAC,KAAE,KAAK,wCAAwC,OAAO,SAAS,UAAU,cAAc,IAAI,cAAa,QAEzG,EAAI,GAEL,CACD,EACA,gBAAC,OAAI,UAAU,kEACd,gBAAC,IAAS,UAAU,WAAW,EAC/B,gBAAC,KAAE,UAAU,yCAAyC,EAAG,8BAA8B,CAAE,CAC1F,CACD,EAEK,GAAQ,GC3Bf,GAAM,IAA4C,GAAS,gBAAC,aAAQ,GAAR,CAAe,MAAM,6BAA6B,KAAK,OAAO,QAAQ,aAChI,gBAAC,QAAK,OAAO,eAAe,cAAc,QAAQ,eAAe,QAAQ,YAAY,MAAM,EAAE,2BAA2B,CACzH,EACM,GAAQ,GCFf,GAAM,IAAe,IACZ,gBAAC,OAAI,UAAU,aACrB,gBAAC,OAAI,UAAU,0CACd,gBAAC,OAAI,UAAU,uFACd,gBAAC,OAAI,UAAU,gFACd,gBAAC,IAAU,UAAU,iBAAiB,CACvC,CACD,CACD,EACA,gBAAC,WACA,gBAAC,KAAE,UAAU,oEAAoE,EAAG,oBAAa,CAAE,EAEnG,gBAAC,KAAE,UAAU,wCAAwC,EAAG,sCAAsC,CAAE,CACjG,CACD,EAEK,GAAQ,GChBf,OAAiB,kCAIjB,OAAsC,iBACtC,EAAwC,yBCNxC,GAAM,IAAgD,GAAS,gBAAC,aAAQ,GAAR,CAAe,MAAM,6BAA6B,KAAK,OAAO,QAAQ,cACpI,gBAAC,QAAK,KAAK,eAAe,EAAE,qlDAAqlD,CAClnD,EACM,EAAQ,GDcf,GAAM,IAAqB,CAAC,CAC1B,SACA,SACA,eACI,CACJ,GAAM,GAAQ,EAAS,EACjB,CAAC,EAAY,GAAiB,gBAAS,EAAK,EAC5C,EAAW,mBAAY,IAAM,CAzBrC,MA0BI,eAAK,oBAAQ,UAAR,OAAmB,EAAE,EAC1B,EAAc,EAAI,EAClB,WAAW,IAAM,EAAc,EAAK,EAAG,GAAI,CAC7C,EAAG,CAAC,CAAM,CAAC,EACX,MAAO,iCACJ,IAAS,WAAa,IAAW,gCACjC,gBAAC,uBACC,GAAc,gBAAC,SAAO,IAAP,CAAW,UAAU,sBAAsB,IAAI,SAAS,QAAQ,SAAS,QAAQ,UAAU,KAAK,SAAS,SAAU,CAC/H,QAAS,CACP,EAAG,EACH,QAAS,CACX,EACA,OAAQ,CACN,EAAG,OACH,QAAS,CACX,EACA,KAAM,CACJ,EAAG,OACH,QAAS,EACT,WAAY,CACV,SAAU,EACZ,CACF,CACF,EAAG,WAAY,CACb,SAAU,GACV,KAAM,WACR,GACA,gBAAC,QAAK,UAAU,qDACd,EAAG,gBAAgB,CACrB,CACD,CACF,EACA,gBAAC,OAAI,UAAU,+GACd,gBAAC,OAAI,UAAU,+BACb,EAEE,gBAAC,OAAI,QAAS,EAAU,UAAU,kBACnC,gBAAC,IAAO,KAAM,EAAO,QAAS,KAAM,IAAK,CAC1C,EAAS,gBAAC,OAAI,UAAU,wDACvB,gBAAC,GAAY,UAAU,oBAAoB,CAC5C,CACF,CACD,CACD,EACD,gBAAC,OAAI,UAAU,aACd,gBAAC,SAAO,EAAP,CAAS,SAAU,CAChB,MAAO,GACT,EAAG,WAAY,CACb,MAAO,IACT,EAAG,WAAY,CACb,OAAQ,CACN,SAAU,GACZ,CACF,EAAG,SAAU,GAAS,UAAY,OAAY,iBAAkB,KAAM,iBAAQ,OAAQ,UAAW,EAAW,2GAA4G,+DAA+D,GACxR,gBAAC,GAAc,UAAU,UAAU,EACnC,gBAAC,SAAO,KAAP,CAAY,UAAU,qBAAqB,WAAY,CACnD,OAAQ,CACN,SAAU,GACZ,CACF,EAAG,SAAU,GAAS,UAAY,OAAY,gBAC/C,EAAG,oBAAoB,CACzB,CACD,EACA,gBAAC,OAAI,UAAU,uBACd,gBAAC,SAAO,OAAP,CAAc,UAAU,sBAAsB,QAAS,IAAM,EAAU,GAAS,CAAC,CAAK,GACrF,EAAS,EAAG,cAAc,EAAI,EAAG,sBAAsB,CACzD,EACC,GAAU,gCACT,gBAAC,QAAK,UAAU,eAAc,MAAQ,EACtC,gBAAC,UAAO,UAAU,0BAA0B,QAAS,GACnD,EAAa,EAAG,SAAS,EAAI,EAAG,cAAc,CAChD,CACD,CACF,CACD,CACD,CACF,EACO,GAAQ,GElGf,OAAwB,2BACxB,GAAoC,iBCLpC,GAAM,IAA2C,GAAS,gBAAC,aAAQ,GAAR,CAAe,MAAM,6BAA6B,KAAK,OAAO,QAAQ,cAC/H,gBAAC,QAAK,KAAK,eAAe,SAAS,UAAU,EAAE,4WAA4W,SAAS,UAAU,CAC/a,EACM,GAAQ,GCHf,GAAM,IAA4C,GAAS,gBAAC,aAAQ,GAAR,CAAe,MAAM,6BAA6B,KAAK,OAAO,QAAQ,cAChI,gBAAC,QAAK,KAAK,eAAe,EAAE,wfAAwf,EACphB,gBAAC,QAAK,KAAK,eAAe,EAAE,4HAA4H,CACzJ,EACM,GAAQ,GCGf,GAAM,IAA0B,CAAC,CAC/B,eAEO,gBAAC,OAAI,UAAW,EAAW,EAAW,qBAAqB,GACjE,gBAAC,KAAE,UAAU,6DAA6D,EAAG,mBAAmB,CAAE,EAClG,gBAAC,OAAI,UAAU,aACd,gBAAC,IAAiB,MAAM,yBAAyB,KAAM,IACtD,gBAAC,SAAG,EAAG,kFAAkF,CAAE,CAC5F,EACA,gBAAC,IAAiB,MAAM,qBAAqB,KAAM,IAClD,gBAAC,SAAG,EAAG,6EAA6E,CAAE,CACvF,CACD,CACD,EAMI,GAA8C,CAAC,CACnD,KAAM,EACN,QACA,cACI,gBAAC,OAAI,UAAU,kBACnB,gBAAC,OAAI,UAAU,mGACd,gBAAC,GAAK,UAAU,sCAAsC,CACvD,EACA,gBAAC,WACA,gBAAC,KAAE,UAAU,2CAA2C,CAAM,EAC9D,gBAAC,OAAI,UAAU,6DAA6D,CAAS,CACtF,CACD,EACM,EAAQ,GCvCf,OAAuB,mBCEhB,YAAqB,EAAa,EAA4B,CACpE,GAAM,GAAS,GAAI,YAAO,IAAI,8BAA8B,EAC5D,SAAO,aAAa,OAAO,IAAK,CAAG,EAG/B,GAAW,EAAO,aAAa,OAAO,IAAK,CAAS,EAEjD,EAAO,SAAS,CACxB,CDPA,OAAkC,iBEJ3B,GAAM,IAAgB,mCFO7B,OAAmB,2CAEnB,GAA4B,gCAiC5B,GAAM,IAAa,CAClB,OAAQ,CACP,QAAS,CAAC,aAAa,EACvB,OAAQ,CAAC,UAAU,EACnB,OAAQ,CAAC,iBAAiB,CAC3B,CACD,EAEM,GAAwB,cAA2B,EAAE,CAAC,EAAK,IAAS,EACzE,OAAQ,KACR,OAAQ,KACR,OAAQ,KACR,UAAW,GACX,IAAK,GACL,MAAO,GACP,UAAW,KACX,kBAAmB,iBACnB,OAAQ,KAER,aAAc,MACb,EACA,EACA,EACA,EACA,EACA,EAAyB,KACrB,CACJ,AAAI,GAAoB,CAAC,EAAiB,QACzC,QAAQ,KACP,EAAG,gEAAiE,CAAE,MAAO,kBAAmB,CAAC,CAClG,EAGD,EAAI,CACH,OAAQ,CACP,SACA,SACA,SACA,qBACA,yBACA,iBAAkB,WAAkB,OAAS,EAAmB,CAAC,KAAkB,CACpF,CACD,CAAC,EAED,GAAI,CACH,GAAM,GAAS,KAAM,YAAO,KAAK,CAChC,UAAW,EACX,SAAU,CACT,KAAM,QACN,YAAa,EAAG,sBAAsB,EACtC,IAAK,wBACL,MAAO,CAAC,4CAA4C,CACrD,CACD,CAAC,EACD,SAAI,CAAE,OAAQ,CAAO,CAAC,EAEf,EAAI,EAAE,cAAc,CAAM,CAClC,OAAS,EAAP,CACD,QAAQ,MAAM,CAAK,CACpB,CACD,EAEA,cAAe,KAAO,IAAmB,CACxC,GAAI,CACH,GAAM,CAAE,MAAK,YAAa,KAAM,GAAO,QAAQ,CAAE,mBAAoB,EAAW,CAAC,EAEjF,GAAI,EAAK,CACR,EAAI,EAAE,OAAO,CAAG,EAChB,GAAM,GAAU,KAAM,GAAS,EAE/B,GAAI,MAAO,GAAY,IACtB,SAAI,CAAE,MAAO,EAAQ,KAAM,CAAC,EACrB,EAAI,EAAE,wBAAwB,CAAM,CAE7C,CACD,OAAS,EAAP,CACD,EAAI,CAAE,UAAW,mBAA+B,CAAC,EACjD,QAAQ,MAAM,EAAG,sDAAsD,EAAG,CAAK,CAChF,CACD,EAEA,OAAQ,AAAC,GAAgB,CACxB,AAAI,CAAC,GAEL,EAAI,CACH,IAAK,EACL,kBAAmB,sBACnB,OAAQ,CACP,QAAS,GAAY,CAAG,EACxB,OAAQ,GAAY,EAAK,WAAO,SAAS,IAAI,CAC9C,CACD,CAAC,CACF,EAGA,wBAAyB,KAAO,IAAmB,CAClD,EAAI,CAAE,kBAAmB,uBAAuC,CAAC,EAEjE,KAAM,GACJ,QAAQ,CACR,MAAO,EAAI,EAAE,MACb,QAAS,WAET,QAAS,GAAyB,EAAI,EAAE,MAAO,CAChD,CAAC,EACA,KAAK,GAAU,CACf,GAAI,CAAC,GAA2B,CAAM,EACrC,MAAO,GAAI,CAAE,UAAW,qBAAiC,CAAC,EAG3D,EAAI,CAAE,SAAQ,kBAAmB,WAA4B,CAAC,CAC/D,CAAC,EACA,MAAM,AAAC,GAAmB,CAC1B,GAAI,GAAY,gBAEV,EAAgB,EAAgC,QACtD,AAAI,GAAgB,OAAO,OAAO,CAAa,EAAE,SAAS,CAA6B,GACtF,GAAY,GAGb,QAAQ,KAAK,EAAG,oCAAqC,CAAE,WAAU,CAAC,CAAC,EACnE,QAAQ,KAAK,EAAG,oBAAoB,EAAG,CAAK,EAE5C,EAAI,CAAE,YAAW,kBAAmB,QAAyB,CAAC,CAC/D,CAAC,EACA,QAAQ,IAAM,IAAK,GAAO,WAAW,CAAE,MAAO,EAAI,EAAE,MAAO,OAAQ,mBAAY,mBAAmB,CAAE,CAAC,CAAC,EACtG,MAAM,AAAC,GAAkB,CACzB,QAAQ,MAAM,EAAG,+BAAgC,CAAE,OAAM,CAAC,CAAC,CAC5D,CAAC,CACH,EAEA,gBAAiB,IAAM,CACtB,EAAI,CACH,OAAQ,KACR,OAAQ,KACR,OAAQ,KACR,UAAW,KACX,UAAW,GACX,OAAQ,KACR,kBAAmB,gBACpB,CAAC,CACF,CACD,EAAE,EAEI,GAA2B,AAAC,GAAyB,EAC1D,QAAS,MACT,OAAQ,cACR,GAAI,GAAa,IAAQ,OAAO,EAChC,OAAQ,CACP,CACC,OAAQ,EAAO,OACf,OAAQ,GAAa,EAAO,MAAM,EAClC,iBAAkB,EAAO,iBACzB,OAAQ,GAAe,EAAO,MAAM,EAAE,OACtC,mBAAoB,EAAO,mBAC3B,mBAAoB,GAA0B,EAAO,OAAQ,EAAO,MAAM,EAAE,MAC7E,CACD,CACD,GAEM,GAA6B,AAAC,GAA8C,CACjF,GAAI,CAAC,GAAU,MAAO,IAAW,SAAU,MAAO,GAClD,GAAM,GAAQ,SAAW,GAAU,EAAkC,MAAQ,OACvE,EAAc,eAAiB,GAAU,EAAkC,YAAc,OACzF,EAAiB,kBAAoB,GAAU,EAAkC,eAAiB,OAGxG,GAAI,CAFoB,oBAAqB,GAAU,EAAkC,gBAAkB,QAErF,MAAO,GAC7B,OAAW,KAAQ,CAAC,EAAa,EAAgB,CAAK,EACrD,GAAI,CAAC,GAAQ,CAAC,GAAwB,CAAI,EAAG,MAAO,GAGrD,MAAO,EACR,EAaM,GAAW,AAAC,GAA+B,EAChD,OAAQ,EAAM,OACd,OAAQ,EAAM,OACd,UAAW,EAAM,UACjB,MAAO,EAAM,gBACb,OAAQ,EAAM,OACd,aAAc,EAAM,aACpB,cAAe,EAAM,cACrB,kBAAmB,EAAM,iBAC1B,GAEM,GAAmB,CACxB,EACA,EACA,EACA,EACA,EACA,IAC8B,CAC9B,GAAM,CAAE,SAAQ,oBAAmB,YAAW,SAAQ,SAAQ,eAAc,SAC3E,GAAsB,EAAQ,EAEzB,EAAuB,cAAO,CAAgB,EAEpD,uBAAU,IAAM,CACf,AAAI,CAAC,GACA,GACC,EACJ,EACA,EACA,EACA,EAAqB,QACrB,EACA,CACD,CAEF,EAAG,CACF,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,CACD,CAAC,EAEM,CAAE,SAAQ,QAAO,oBAAmB,YAAW,QAAO,CAC9D,EAEO,GAAQ,GGtRf,GAAM,IAAwD,GAAS,gBAAC,aAAQ,GAAR,CAAe,KAAK,OAAO,YAAa,IAAK,QAAQ,YAAY,OAAO,eAAe,MAAM,+BACnK,gBAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,EAAE,gKAAgK,CACtN,EACM,GAAQ,GPUf,GAAM,IAAa,AAAC,GAAuB,EACzC,OAAQ,EAAM,OACd,OAAQ,EAAM,OACd,OAAQ,EAAM,OACd,SAAU,EAAM,SAChB,aAAc,EAAM,aACpB,cAAe,EAAM,cACrB,UAAW,EAAM,QAAQ,QAAU,EACnC,iBAAkB,EAAM,iBACxB,eAAgB,EAAM,QAAQ,OAAS,EACvC,SAAU,EAAM,QAAQ,SAAS,OAAO,EACxC,mBAAoB,EAAM,mBAC1B,uBAAwB,EAAM,uBAC9B,SAAU,IAAM,EAAM,SAAS,aAAsB,CACvD,GACM,GAAe,IAAM,CACzB,GAAM,GAAQ,EAAS,EACjB,CAAC,EAAQ,GAAa,gBAAkB,EAAK,EAC7C,CACJ,SACA,SACA,SACA,WACA,WACA,eACA,iBACA,qBACA,mBACA,WACA,yBACA,iBACE,EAAc,GAAY,UAAO,EAC/B,CACJ,SACA,SACA,oBACA,QACA,aACE,GAAiB,EAAQ,EAAQ,EAAQ,EAAkB,EAAoB,CAAsB,EACzG,uBAAU,IAAM,EAAO,CAAC,CAAK,CAAC,EAC9B,iBAAU,IAAM,CAOd,GANI,IAAsB,UACxB,GAAS,OAAgB,EACzB,EAAc,CACZ,KAAM,UAAa,eACrB,CAAC,GAEC,EAAQ,CACV,GAAI,CAAC,EAAgB,MAAO,GAAa,CAAM,EAC/C,GAII,KAHF,mBACA,oBAEE,EADC,KACD,EADC,CAFH,iBACA,oBAGF,EAAa,CACX,iBACA,kBACA,kBACF,CAAC,CACH,CACF,EAAG,CAAC,EAAQ,EAAO,EAAc,EAAmB,EAAU,EAAW,EAAe,CAAc,CAAC,EAChG,gBAAC,OAAI,UAAU,mBACrB,gBAAC,WACA,gBAAC,OAAI,UAAU,yCACd,gBAAC,GAAc,UAAU,kCAAkC,CAC5D,EACA,gBAAC,KAAE,UAAU,8EAEX,IAAsB,wBAAyC,EAAG,sBAAsB,EAAI,EAAG,yBAAyB,CAC1H,EACC,IAAsB,yBAA0C,gBAAC,KAAE,UAAU,yDAAwD,qDAErI,CACF,EACC,IAAsB,wBAAyC,gBAAC,OAAI,UAAU,oCAC7E,gBAAC,GAAY,UAAU,YAAY,CACpC,EAAS,gBAAC,IAAQ,OAAQ,EAAQ,UAAW,EAAW,OAAQ,EAAQ,EACvE,IAAS,WAAa,CAAC,IAAY,KAAsB,uBAAwC,IAAsB,mBAAoC,gBAAC,MAAa,EAC1K,GAAY,GAAqB,uBAAwC,gBAAC,OAAI,UAAU,6BACvF,gBAAC,OAAI,UAAU,+CACd,gBAAC,OAAI,UAAU,uCAAuC,EACtD,gBAAC,KAAE,UAAU,wCAAuC,IAAE,EACtD,gBAAC,OAAI,UAAU,uCAAuC,CACvD,EACA,gBAAC,OAAI,UAAU,oCACd,gBAAC,UAAO,QAAS,EAAU,UAAU,+BACpC,gBAAC,IAAsB,UAAU,4CAA4C,EAC7E,gBAAC,KAAE,UAAU,mDACX,EAAG,0BAA0B,CAC/B,CACD,CACD,CACD,CACF,CACF,EACO,GAAQ,Gd3Ff,MAAwB,uCAExB,EAA6C,iBsBnB7C,GAAM,IAAkD,GAAS,gBAAC,aAAQ,GAAR,CAAe,MAAM,6BAA6B,KAAK,eAAe,QAAQ,aAAa,SAAS,UAAU,SAAS,YACvL,gBAAC,KAAE,SAAS,sBACX,gBAAC,QAAK,EAAE,8ZAA8Z,KAAK,QAAQ,EACnb,gBAAC,QAAK,EAAE,2ZAA2Z,KAAK,QAAQ,EAChb,gBAAC,QAAK,EAAE,iaAAia,KAAK,QAAQ,EACtb,gBAAC,QAAK,EAAE,+QAA+Q,KAAK,QAAQ,EACpS,gBAAC,QAAK,EAAE,oDAAoD,KAAK,QAAQ,EACzE,gBAAC,QAAK,EAAE,0LAA0L,KAAK,QAAQ,EAC/M,gBAAC,QAAK,EAAE,kJAAkJ,KAAK,QAAQ,EACvK,gBAAC,QAAK,EAAE,mEAAmE,KAAK,QAAQ,EACxF,gBAAC,QAAK,EAAE,sZAAsZ,KAAK,QAAQ,EAC3a,gBAAC,QAAK,EAAE,qlDAAqlD,KAAK,QAAQ,CAC3mD,EACA,gBAAC,YACA,gBAAC,YAAS,GAAG,gBACZ,gBAAC,QAAK,MAAM,UAAU,OAAO,KAAK,KAAK,QAAQ,CAChD,CACD,CACD,EACM,GAAQ,GtBEf,MAAwC,yBuBrBxC,GAAM,IAAoD,GAAS,gBAAC,aAAQ,GAAR,CAAe,KAAK,OAAO,YAAa,IAAK,QAAQ,YAAY,OAAO,eAAe,MAAM,+BAC/J,gBAAC,QAAK,cAAc,QAAQ,eAAe,QAAQ,EAAE,yCAAyC,CAC/F,EACM,GAAQ,GCHf,OAAuB,yBAIvB,MAAuB,sCCJvB,OAAsB,iBAGtB,MAAoD,iBCFpD,OAA6B,mCAE7B,OAA6B,kCAC7B,EAAoC,6BCJpC,GAAM,IAAkD,GAAS,gBAAC,aAAQ,GAAR,CAAe,MAAM,6BAA6B,KAAK,OAAO,QAAQ,aACtI,gBAAC,QAAK,OAAO,eAAe,cAAc,QAAQ,eAAe,QAAQ,YAAY,QAAQ,EAAE,mBAAmB,CACnH,EACM,GAAQ,GDGf,MAAmE,iBAK7D,GAAoB,CAAC,CACzB,QACA,cACW,CACX,GAAM,CAAC,EAAa,GAAkB,eAAiB,IAAI,EACrD,EAAU,aAAyB,IAAI,EAG7C,gBAAU,IAAM,CACd,GAAM,GAAO,EAAQ,QACrB,GAAI,CAAC,EACH,OAEF,GAAI,GAAS,EACP,EAAc,AAAC,GAAkB,CACrC,EAAK,WAAa,EAAE,MACtB,EACM,EAAmB,AAAC,GAAkB,CAC1C,EAAS,EAAK,UAAY,EAAE,QAAQ,GAAG,KACzC,EACM,EAAkB,AAAC,GAAkB,CACzC,EAAK,UAAY,EAAS,EAAE,QAAQ,GAAG,KACzC,EACA,SAAK,iBAAiB,QAAS,CAAW,EAC1C,EAAK,iBAAiB,aAAc,CAAgB,EACpD,EAAK,iBAAiB,YAAa,CAAe,EAC3C,IAAM,CACX,EAAK,oBAAoB,QAAS,CAAW,EAC7C,EAAK,oBAAoB,aAAc,CAAgB,EACvD,EAAK,oBAAoB,YAAa,CAAe,CACvD,CACF,EAAG,CAAC,CAAC,EACL,GAAM,GAAsB,kBAAY,IAAM,CAC5C,GAAM,GAAO,EAAQ,QACrB,GAAI,CAAC,EAAM,OACX,GAAM,GAAS,EAAK,sBAAsB,EAC1C,EAAK,MAAM,UAAY,GAAG,WAAO,YAAc,EAAO,IAAM,MAC9D,EAAG,CAAC,CAAC,EACL,sBAAU,IAAM,CAEd,EAAS,gBAAa,KAAK,GAAW,EAAQ,OAAS,CAAW,EAAG,QAAQ,CAC/E,EAAG,CAAC,EAAa,CAAQ,CAAC,EACnB,gBAAC,WAAQ,MAAO,EAAa,SAAU,GAC5C,CAAC,CACC,UACI,gCACL,gBAAC,UAAQ,MAAR,CAAc,UAAU,mDACvB,EAAG,cAAc,CACnB,EACA,gBAAC,UAAQ,OAAR,CAAe,UAAU,6CACzB,gBAAC,YAAiB,IAAG,GAAC,YAAa,EAAa,MAAO,CACnD,MAAO,GACP,OAAQ,GACR,WAAY,EACZ,UAAW,QACX,aAAc,KAChB,EAAG,EACL,gBAAC,KAAE,UAAU,+BAA8B,IAAE,CAAM,EACnD,gBAAC,IAAgB,UAAU,4CAA4C,cAAY,OAAO,CAC3F,EAEA,gBAAC,cAAW,KAAM,EAAM,GAAI,WAAU,MAAM,kCAAkC,UAAU,cAAc,QAAQ,YAAY,YAAa,EAAqB,QAAS,IACpK,gBAAC,UAAQ,QAAR,CAAgB,IAAK,EAAS,UAAU,6PAA6P,QAAS,IAC9S,gBAAC,OAAI,UAAU,+BACb,gBAAa,IAAI,GAAW,gBAAC,UAAQ,OAAR,CAAe,IAAK,EAAQ,KAAM,UAAW,CAAC,CACtE,WACA,YACI,EAAW,kBAAmB,EAAW,kEAAoE,EAAS,gCAAkC,gCAAiC,2HAA4H,gCAAgC,EAAG,MAAO,EAAQ,MAC9W,CAAC,CACI,cACI,gCACR,gBAAC,OAAI,UAAU,qBACd,gBAAC,YAAiB,IAAG,GAAC,YAAa,EAAQ,KAAM,MAAO,CACjD,MAAO,GACP,OAAQ,GACR,WAAY,CACd,EAAG,EACR,gBAAC,KAAE,UAAU,4BAA4B,EAAQ,IAAK,EACrD,EAAW,gBAAC,QAAK,UAAU,cAC1B,gBAAC,IAAU,UAAU,aAAa,cAAY,OAAO,CACtD,EAAU,IACZ,EACA,gBAAC,QAAK,UAAW,EAAW,cAAe,EAAW,8BAAgC,6BAA6B,GAAG,IACnH,EAAQ,QACX,CACD,CACF,CAAiB,CACnB,CACD,CACD,CACD,CACF,CACF,EACO,GAAQ,GDnGf,GAAM,IAAY,CAAC,CACjB,oBACiB,EACjB,gBACF,GACM,GAAa,CAAC,CAClB,WACA,cAII,CACJ,GAAM,CACJ,kBACE,EAAc,EAAS,EACrB,CAAC,EAAa,GAAkB,eAAiB,GAAG,EACpD,CAAC,EAAkB,GAAuB,eAAiB,EAAE,EACnE,sBAAU,IAAM,CACd,GAAM,GAAiB,aAAM,IAAI,KAAe,GAAkB,EAClE,GAAI,CAAC,EAAe,QAAS,CAC3B,EAAe,EAAE,EACjB,MACF,CACA,EAAe,EAAe,WAAW,CAC3C,EAAG,CAAC,EAAa,EAAkB,CAAc,CAAC,EAC3C,gBAAC,gBACP,gBAAC,SAAM,QAAQ,eAAe,UAAU,mDACtC,EAAG,cAAc,CACnB,EACA,gBAAC,OAAI,UAAU,gPACd,gBAAC,OAAI,UAAU,qBACd,gBAAC,SAAM,QAAQ,UAAU,UAAU,WACjC,EAAG,SAAS,CACd,EACA,gBAAC,IAAkB,MAAO,EAAa,SAAU,EAAgB,CAClE,EACA,gBAAC,SAAM,KAAK,MAAM,KAAK,eAAe,MAAO,EAAkB,YAAa,EAAG,cAAc,EAAG,SAAU,GAAK,EAAoB,EAAE,OAAO,KAAK,EAAG,UAAU,oKAAoK,SAAU,EAAU,UAAW,GAAK,EAAE,MAAQ,SAAW,IAAK,qBAAc,CAC/Y,CACD,CACF,EACO,GAAQ,WAAK,EAAU,EGzC9B,GAAM,IAAe,iDAErB,kBACC,EACA,EACA,EACA,EACgB,CAChB,GAAM,GAAM,KAAM,IAAK,iBAAkB,CACxC,eACA,SACA,UACA,gBACD,CAAC,EAED,GAAI,CAAC,EAAI,GAAI,KAAM,MAAM,GAAI,KAAK,CACnC,CAOA,kBACC,EACA,EACA,EACA,EAC6B,CAC7B,GAAM,GAAM,KAAM,IAAK,gBAAiB,CACvC,eACA,OACA,SACA,gBACD,CAAC,EACD,GAAI,CAAC,EAAI,GAAI,KAAM,MAAM,GAAI,KAAK,EAElC,MAAO,GAAI,KAAK,CACjB,CAOO,YAA4B,EAA2C,CAC7E,MACC,OAAO,IAAU,UACjB,IAAU,MACV,OAAO,UAAU,eAAe,KAAK,EAAkC,MAAM,GAC7E,OAAO,UAAU,eAAe,KAAK,EAAkC,QAAQ,CAEjF,CAOO,YAA2B,EAA0C,CAC3E,MACC,OAAO,IAAU,UACjB,IAAU,MACV,OAAO,UAAU,eAAe,KAAK,EAAkC,MAAM,CAE/E,CAEA,GAAM,IAAO,CAAC,EAAc,IAC3B,MAAM,GAAG,KAAe,IAAQ,CAC/B,OAAQ,OACR,QAAS,CACR,eAAgB,kBACjB,EACA,KAAM,KAAK,UAAU,CAAI,CAC1B,CAAC,EJjEF,GAAM,IAAY,CAAC,CACjB,aACA,aACA,cACA,WACA,UACA,gBACA,gBACA,YACiB,EACjB,aACA,aACA,SACA,cACA,UAAW,EAAQ,QAAU,EAC7B,WAAY,EAAQ,SAAS,KAAK,EAClC,WAAY,IAAM,EAAS,UAAmB,EAC9C,SAAU,SAAY,CACpB,GAAI,CACF,EAAc,EAAI,EAClB,EAAc,IAAI,EAClB,KAAM,IAAY,EAAa,EAAQ,MAA8B,EAAe,CAAC,EACrF,GAAoB,EACpB,EAAc,EAAK,EACnB,EAAS,YAAqB,CAChC,OAAS,EAAP,CACA,QAAQ,MAAM,CAAK,EACnB,EAAc,EAAK,EACnB,GAAI,GACJ,AAAI,GAAmB,CAAK,EAC1B,GAAU,OAAO,OAAO,EAAsB,EAAE,SAAS,EAAM,IAAI,GAAK,EAAM,QAAU,OACpF,EAAM,OAAS,WACjB,EAAS,OAAgB,GAG3B,EAAS,OAAgB,EAE3B,EAAc,CACZ,KAAM,oBACN,SACF,CAAC,CACH,CACF,EACA,kBAAmB,IAAM,CACvB,EAAc,IAAI,CACpB,CACF,GACM,GAAkB,IAAM,CAC5B,GAAM,CACJ,cACA,aACA,YACA,WACA,aACA,oBACA,aACA,cACE,EAAc,EAAS,EAC3B,MAAO,iBAAC,OAAI,UAAU,mBACrB,gBAAO,OAAN,CAAW,UAAU,kEAAkE,KAAM,CAAC,CAAC,EAAY,aAAc,EAAmB,QAAO,IACnJ,gBAAC,UAAO,IAAP,CAAW,QAAS,CACjB,QAAS,EACT,EAAG,GACL,EAAG,QAAS,CACV,QAAS,EACT,EAAG,CACL,EAAG,WAAY,CACb,SAAU,EACZ,GACD,gBAAO,QAAN,CAAY,UAAU,oCAErB,EAAG,kBAAY,UAAW,wCAAwC,CACpE,EACA,gBAAO,SAAN,CAAa,QAAQ,SACrB,gBAAC,GAAU,UAAU,UAAU,CAChC,CACD,CACD,EACA,gBAAC,WACA,gBAAC,KAAE,UAAU,oEACX,EAAG,mBAAmB,CACxB,CACD,EACA,gBAAC,OAAI,UAAU,kBACd,gBAAC,IAAW,SAAU,EAAY,SAAU,EAAU,EACtD,gBAAC,KAAE,UAAU,oDACX,EAAG,+DAA+D,CACpE,CACD,EACA,gBAAC,OAAI,UAAU,4BACd,gBAAC,UAAO,OAAP,CAAc,QAAS,CACpB,QAAS,EAAc,EAAI,EAC7B,EAAG,KAAK,SAAS,SAAU,CACzB,MAAO,EAAc,IAAO,CAC9B,EAAG,WAAY,CACb,MAAO,EAAc,KAAO,CAC9B,EAAG,WAAY,CACb,OAAQ,CACN,SAAU,GACZ,CACF,EAAG,QAAS,IAAM,IAAK,GAAS,EAAG,SAAS,eAAe,SAAU,CAAC,GAAe,EAAY,UAAW,EAAW,+GAAgH,sDAAuD,4EAA6E,wEAAwE,GACpb,gBAAC,UAAO,KAAP,CAAY,WAAY,CACpB,OAAQ,CACN,SAAU,GACZ,CACF,EAAG,SAAS,cACb,EAAG,UAAU,CACf,CACD,CACD,EACC,GAAa,gBAAC,MAAa,EAC3B,GAAc,gBAAC,OAAI,UAAU,6BAC5B,gBAAC,OAAI,UAAU,+CACd,gBAAC,OAAI,UAAU,uCAAuC,EACtD,gBAAC,KAAE,UAAU,wCAAuC,IAAE,EACtD,gBAAC,OAAI,UAAU,uCAAuC,CACvD,EACA,gBAAC,OAAI,UAAU,oCACd,gBAAC,UAAO,QAAS,EAAY,UAAU,+BACtC,gBAAC,MAAY,EACb,gBAAC,KAAE,UAAU,mDACX,EAAG,sBAAsB,CAC3B,CACD,CACD,CACD,CACF,CACF,EACO,GAAQ,GK5If,OAAuB,yBACvB,GAAgC,iBCDhC,OAA+B,iBAC/B,GAAsB,gCAMtB,GAAM,IAAa,GAAK,IAClB,GAAW,CAAC,CAChB,UACA,UACA,eAKI,CACJ,GAAI,GACJ,MAAO,iBAAC,YAAK,MACR,EAAQ,IAAE,EAAU,GAAK,IAAI,IAAY,CAC9C,CACF,EACM,GAAe,IAAM,CACzB,GAAM,CACJ,cACA,SACA,gBACA,WACA,iBACE,EAAc,EACZ,CAAC,EAAU,GAAe,gBAA6B,GAAI,MAAK,EAAE,QAAQ,EAAI,EAAU,EACxF,EAAc,KAAO,IAAsC,CAC/D,EAAY,GAAI,MAAK,EAAE,QAAQ,EAAI,EAAU,EAC7C,GAAI,CACF,EAAc,EAAI,EAClB,KAAM,IAAY,EAAa,EAAQ,EAAS,EAAe,CAAC,EAChE,GAAmB,CAAO,EAC1B,EAAc,EAAK,CACrB,OAAS,EAAP,CACA,EAAc,EAAK,EACnB,EAAY,MAAS,EACrB,AAAI,GAAmB,CAAK,GAAK,EAAM,OAAS,eAC9C,GAAc,CACZ,KAAM,eACR,CAAC,EACD,QAAQ,MAAM,CAAK,GAEnB,EAAS,OAAgB,CAE7B,CACF,EACA,MAAO,iCACN,gBAAC,UAAO,KAAK,SAAS,SAAU,CAAC,CAAC,EAAU,UAAU,mGAAmG,QAAS,IAAM,IAAK,GAAY,KAA4B,GACnN,EAAG,QAAQ,EAAG,IACd,GAAY,gBAAC,YAAU,WAAY,IAAM,EAAY,MAAS,EAAG,KAAM,EAAU,SAAU,GAAU,CACvG,EAAU,IAAI,KACX,IACH,gBAAC,UAAO,KAAK,SAAS,UAAU,mGAAmG,SAAU,CAAC,CAAC,EAAU,QAAS,IAAM,IAAK,GAAY,MAA6B,GACpN,EAAG,SAAS,CACd,CACD,CACF,EACO,GAAQ,YAAK,EAAY,EC3DhC,MAA2E,iBAErE,GAAa,AAAC,GACV,GAAI,OAAM,CAAC,EAAE,KAAK,EAAE,EAAE,IAAI,CAAC,EAAG,IAAU,EAAM,IAAU,EAAE,EAE9D,GAAY,CAAC,CACjB,OACA,aACiB,EACjB,OACA,SACF,GACM,GAAe,CAAC,CACpB,YACA,cAII,CACJ,GAAM,CACJ,OACA,WACE,EAAc,EAAS,EACrB,EAAa,cAAQ,IAAM,GAAI,OAAM,CAAC,EAAE,KAAK,IAAI,EAAE,IAAI,IAAM,gBAA4B,CAAC,EAAG,CAAC,CAAC,EAC/F,CAAC,EAAQ,GAAa,eAAyB,GAAW,EAAE,CAAC,EAC7D,CAAC,EAAc,GAAmB,eAAiB,EAAE,EAC3D,gBAAU,IAAM,CACd,AAAK,GACH,EAAU,GAAW,EAAE,CAAC,CAE5B,EAAG,CAAC,CAAI,CAAC,EACT,GAAM,GAAqB,kBAAY,AAAC,GAAkB,CACxD,sBAAsB,IAAM,CArChC,MAsCM,KAAW,GAAO,UAAlB,QAA2B,QAC7B,CAAC,CACH,EAAG,CAAC,CAAU,CAAC,EACT,EAAW,kBAAY,CAAC,EAAe,IAAkB,CAC7D,GAAM,GAAa,CAAC,GAAG,CAAM,EAC7B,EAAW,GAAS,EACpB,EAAW,CAA6B,EACxC,GAAM,GAAoB,EAAW,KAAK,EAAE,EAE5C,AADA,EAAQ,EAAE,EACN,EAAkB,SAAW,GACjC,EAAQ,CAAiB,CAC3B,EAAG,CAAC,EAAS,CAAM,CAAC,EACd,EAAa,kBAAY,AAAC,GAAkB,CAChD,sBAAsB,IAAM,CAnDhC,QAoDM,QAAW,KAAX,cAAmB,UAAnB,QAA4B,OAC9B,CAAC,CACH,EAAG,CAAC,CAAU,CAAC,EACT,EAAY,kBAAY,AAAC,GAAkB,CAC/C,sBAAsB,IAAM,CAxDhC,MAyDM,KAAW,GAAO,UAAlB,QAA2B,MAC7B,CAAC,CACH,EAAG,CAAC,CAAU,CAAC,EACT,EAAe,AAAC,GAAkB,CA5D1C,MA6DI,AAAI,CAAC,MAAW,KAAX,QAAmB,UACxB,GAAgB,CAAK,EACrB,EAAmB,CAAK,EAC1B,EACM,EAAgB,kBAAY,CAAC,EAAsC,IAAkB,CACzF,GAAM,GAAQ,EAAM,OAAO,MAAM,QAAQ,EAAO,GAAQ,EAAE,EAC1D,GAAI,CAAC,MAAM,KAAK,CAAK,EAAG,MAAO,GAAmB,CAAK,EACvD,GAAI,EAAM,OAAS,EAEjB,MADA,GAAU,GAAW,EAAM,OAAO,KAAK,CAAC,EACpC,EAAM,OAAO,MAAM,SAAW,EAAG,OACrC,GAAQ,EAAM,OAAO,KAAK,EACnB,EAAU,CAAK,GAExB,EAAS,EAAO,CAAK,EACrB,AAAI,IAAU,EACZ,sBAAsB,IAAM,CA5ElC,MA6EQ,KAAU,UAAV,QAAmB,OACrB,CAAC,EACI,EAAW,EAAQ,CAAC,CAC7B,EAAG,CAAC,EAAW,EAAW,EAAY,EAAoB,EAAS,EAAU,CAAM,CAAC,EAC9E,EAAiB,kBAAY,CAAC,EAAwC,IAAkB,CAC5F,GAAI,EAAM,MAAQ,aAAe,EAAM,MAAQ,SAC7C,SAAM,eAAe,EACrB,EAAS,GAAI,CAAY,EAClB,EAAW,EAAQ,CAAC,EAE7B,GAAI,EAAM,MAAQ,EAAO,GAAQ,CAC/B,GAAI,IAAU,EAAG,MAAO,GAAU,CAAK,EACvC,EAAW,EAAQ,CAAC,CACtB,CACF,EAAG,CAAC,EAAY,EAAW,EAAc,EAAU,CAAM,CAAC,EACpD,EAAe,kBAAY,CAAC,EAAyC,IAAkB,CAC3F,EAAM,eAAe,EAErB,GAAM,GAAa,AADC,EAAM,cAAc,QAAQ,MAAM,EACvB,MAAM,EAAG,CAAC,EACzC,GAAI,EAAC,MAAM,KAAK,CAAU,EAE1B,IADA,EAAU,GAAW,CAAU,CAAC,EAC5B,EAAW,SAAW,EAAG,MAAO,GAAW,EAAW,MAAM,EAChE,EAAQ,CAAU,EAClB,EAAU,CAAK,EACjB,EAAG,CAAC,EAAW,EAAY,CAAO,CAAC,EACnC,sBAAU,IAAM,CACd,EAAW,CAAC,CACd,EAAG,CAAC,EAAY,CAAU,CAAC,EACpB,gBAAC,YAAS,UAAU,8CAC1B,gBAAC,UAAO,UAAU,WAAW,EAAG,qBAAqB,CAAE,EACtD,EAAW,IAAI,CAAC,EAAK,IAAM,gBAAC,SAAM,IAAK,EAAK,IAAK,EAAG,UAAW,EAAG,KAAK,SAAS,QAAQ,SAAS,MAAO,EAAO,GAAI,UAAU,UAAU,aAAa,gBAEpJ,UAAW,IAAM,EAAG,QAAS,IAAM,EAAa,CAAC,EAAG,QAAS,GAAS,EAAa,EAAO,CAAC,EAAG,SAAU,GAAS,EAAc,EAAO,CAAC,EAAG,UAAW,GAAS,EAAe,EAAO,CAAC,EAAG,UAAW,EAAW,oHAAqH,kDAAmD,yCAAyC,EAAG,SAAU,EAAU,CAAE,CAC1b,CACF,EACO,GAAQ,WAAK,EAAY,EFnGhC,GAAM,IAAY,CAAC,CACjB,aACA,cACA,OACA,WACA,gBACA,UACA,eACA,gBACA,aACA,YACiB,EACjB,aACA,cACA,OACA,aACA,UACA,gBACA,SACA,SAAU,SAAY,CACpB,GAAI,CACF,EAAc,IAAI,EAClB,EAAc,EAAI,EAClB,GAGI,QAAM,IAAW,EAAa,EAAM,EAAQ,EAAe,CAAC,EAF9D,mBAEE,EADC,IACD,EADC,CADH,mBAGF,EAAa,CACX,gBAAiB,QACjB,iBACA,eACF,CAAC,CACH,OAAS,EAAP,CACA,EAAc,EAAK,EACnB,EAAQ,EAAE,EACV,AAAI,GAAkB,CAAK,EACzB,GAAc,CACZ,KAAM,mBACR,CAAC,EACD,QAAQ,MAAM,CAAK,GAEnB,EAAS,OAAgB,CAE7B,CACF,EACA,WAAY,IAAM,EAAS,UAAmB,CAChD,GACM,GAAkB,IAAM,CAC5B,GAAM,GAAY,cAA0B,IAAI,EAC1C,CACJ,cACA,aACA,OACA,WACA,aACA,cACE,EAAc,EAAS,EACrB,EAAY,eAAQ,IAAM,CAC9B,GAAI,CAAC,GAAc,EACjB,MAAO,CACL,EAAG,CAAC,EAAG,IAAK,GAAI,GAAI,EAAG,CAAC,CAC1B,CAEJ,EAAG,CAAC,EAAY,CAAU,CAAC,EAC3B,MAAO,iBAAC,OAAI,UAAU,aACrB,gBAAC,WACA,gBAAC,KAAE,UAAU,oEACX,EAAG,uDAAuD,CAC5D,EACA,gBAAC,KAAE,UAAU,gCACX,EAAG,uBAAuB,EAAE,IAAC,gBAAC,QAAK,UAAU,eAAe,CAAY,CAC1E,CACD,EACA,gBAAC,QAAK,UAAU,kBACf,gBAAC,UAAO,IAAP,CAAW,QAAS,EAAW,WAAY,CACxC,KAAM,SACN,UAAW,EACb,GACD,gBAAC,IAAa,UAAW,EAAW,SAAU,EAAY,CAC3D,EACA,gBAAC,KAAE,UAAU,mCACX,EAAa,gBAAC,QAAK,UAAU,gBAAgB,EAAG,yCAAyC,CAAE,EAAU,EAAG,yBAAyB,EAAG,IACrI,gBAAC,OAAa,CACf,CACD,EACA,gBAAC,OAAI,UAAU,8CACd,gBAAC,OAAI,UAAU,+BACd,gBAAC,MAAY,EACb,gBAAC,KAAE,UAAU,2BAA2B,EAAG,iBAAiB,CAAE,CAC/D,EACA,gBAAC,QAAK,UAAU,6BAA4B,QAAM,EAClD,gBAAC,UAAO,KAAK,SAAS,QAAS,EAAY,UAAU,0FACnD,EAAG,cAAc,CACnB,CACD,EACA,gBAAC,OAAI,UAAU,4BACd,gBAAC,UAAO,OAAP,CAAc,SAAS,eAAe,KAAK,SAAS,SAAU,CAC3D,MAAO,EAAc,IAAO,CAC9B,EAAG,WAAY,CACb,MAAO,EAAc,KAAO,CAC9B,EAAG,QAAS,CACV,QAAS,EAAO,EAAI,EACtB,EAAG,WAAY,CACb,OAAQ,CACN,SAAU,GACZ,CACF,EAAG,QAAS,IAAM,IAAK,GAAS,EAAG,SAAU,CAAC,GAAQ,EAAY,IAAK,EAAW,UAAW,EAAW,+GAAgH,sDAAuD,wEAAyE,wEAAwE,GACja,gBAAC,UAAO,KAAP,CAAY,WAAY,CACpB,OAAQ,CACN,SAAU,GACZ,CACF,EAAG,SAAS,cACb,EAAG,UAAU,CACf,CACD,CACD,CACD,CACF,EACO,GAAQ,GGhIf,OAAuB,yBAQvB,GAAM,IAAY,CAAC,CACjB,WACA,aACiB,EACjB,UACA,UACF,GACM,GAAoB,IAAM,CAC9B,GAAM,CACJ,WACE,EAAc,EAAS,EAC3B,MAAO,iBAAC,OAAI,UAAU,mBACrB,gBAAC,WACA,gBAAC,KAAE,UAAU,oEACX,EAAG,qBAAqB,CAC1B,EACA,gBAAC,KAAE,UAAU,wCACX,EAAG,wDAAwD,CAC7D,CACD,EACA,gBAAC,OAAI,UAAU,aACb,EAAQ,IAAI,CAAC,EAAQ,IAAM,gBAAC,IAAa,QAAS,GAAK,EAAG,IAAK,EAAQ,OAAQ,EAAQ,CAAE,CAC3F,EACC,EAAQ,SAAS,KAAK,GAAK,gBAAC,OAAI,UAAU,4BACzC,gBAAC,KAAE,UAAU,uBACX,EAAG,+BAA+B,EAAG,IACtC,gBAAC,KAAE,UAAU,0BAA0B,OAAO,SAAS,KAAK,iCAAiC,IAAI,cAC/F,EAAG,cAAc,CACnB,CACD,CACD,EACD,gBAAC,GAAa,UAAU,OAAO,CAChC,CACF,EACM,GAAc,CAAC,CACnB,cACgB,EACZ,GAGD,CAAC,CACJ,SACA,aACI,CACJ,GAAM,GAAW,EAAc,EAAW,EAC1C,MAAO,iBAAC,UAAO,OAAP,CAAc,SAAU,CAC9B,MAAO,GACT,EAAG,WAAY,CACb,MAAO,IACT,EAAG,WAAY,CACb,OAAQ,CACN,SAAU,GACZ,CACF,EAAG,SAAU,GAAU,MAAQ,iBAAmB,eAAgB,QAAS,IAAM,EAAS,GAAU,MAAQ,WAAsB,aAAsB,EAAG,UAAW,EAAW,2GAA4G,EAAU,sDAAwD,yDAAyD,GACtZ,GAAU,MAAQ,gBAAC,GAAY,UAAU,wBAAwB,EAAK,gBAAC,IAAsB,UAAU,wBAAwB,EAChI,gBAAC,UAAO,KAAP,CAAY,UAAU,qBAAqB,WAAY,CACrD,OAAQ,CACN,SAAU,GACZ,CACF,EAAG,SAAU,GAAU,MAAQ,eAAiB,cAC/C,GAAU,MAAQ,EAAG,sBAAsB,EAAI,EAAG,0BAA0B,CAC9E,CACD,CACF,EACO,GAAQ,GCrEf,OAAqB,iBAErB,GAAM,IAA2B,IACxB,gBAAC,OAAI,UAAU,aACrB,gBAAC,OAAI,UAAU,uBACd,gBAAC,GAAY,UAAU,YAAY,CACpC,EACA,gBAAC,OAAI,UAAU,oBAAoB,EAAG,uDAAuD,CAAE,CAChG,EAEK,GAAQ,YAAK,EAAwB,EjCY5C,GAAM,IAAY,CAAC,CACjB,OACA,aACA,eACA,QACA,WACA,QACA,WACA,gBACiB,EACjB,QACA,QACA,WACA,aACA,aACA,OAAQ,EACR,eACA,UAAW,EAAS,UAAU,CAAK,EACnC,aAAc,EAAS,gBAAgB,CACzC,GACM,GAA+B,AAAC,GAGhC,CAHgC,QACpC,aADoC,EAEjC,IAFiC,EAEjC,CADH,aAGA,GAAM,CACJ,SACA,eACA,aACA,QACA,WACA,YACA,eACA,aACA,MAAO,GACL,EAAc,GAAW,UAAO,EAC9B,EAAQ,EAAS,EACvB,gBAAU,IAAM,CACd,EAAW,EAAQ,OAAkB,CACvC,EAAG,CAAC,EAAQ,CAAU,CAAC,EACvB,GAAM,GAAe,cAAQ,IAAM,CACjC,OAAQ,OACD,gBACH,MAAO,QACJ,cACH,MAAO,QACJ,WACH,MAAO,QACJ,aACH,MAAO,QACJ,UACH,MAAO,QACJ,QACH,MAAO,QACJ,UACH,MAAO,QACJ,wBACH,MAAO,YAEP,KAAM,IAAI,OAAM,EAAG,qBAAqB,CAAC,EAE/C,EAAG,CAAC,CAAK,CAAC,EACV,MAAO,iBAAQ,OAAP,CAAY,KAAM,EAAQ,aAAc,GAC9C,iBAAW,CACT,KAAM,IAAM,EAAa,EAAI,CAC/B,GACD,gBAAQ,SAAP,CAAc,WAAU,IACxB,gBAAC,gBACA,gBAAC,uBACC,GAAU,gBAAC,WAAK,IAAL,CAAS,KAAK,OAAO,GAAG,gBAClC,gBAAC,OAAO,EACR,gBAAC,OAAI,GAAG,QAAQ,UAAW,EAAW,GAAU,QAAU,OAAQ,sBAAsB,GACvF,gBAAQ,UAAP,CAAe,QAAO,IACtB,gBAAC,SAAO,IAAP,CAAW,QAAS,CACb,QAAS,CACX,EAAG,QAAS,CACV,QAAS,CACX,EAAG,KAAM,CACP,QAAS,CACX,EAAG,UAAU,6CAA6C,CACjE,EACA,gBAAC,OAAI,UAAU,2DACd,gBAAC,OAAI,UAAU,+EACd,gBAAQ,UAAP,CAAe,QAAO,IACtB,gBAAC,SAAO,IAAP,CAAW,OAAQ,GAAS,SAAW,WAAa,GAAM,KAAM,GAAS,SAAW,UAAY,OAAQ,QAAS,GAAS,SAAW,UAAY,OAAQ,QAAS,GAAS,SAAW,aAAe,UAAW,SAAU,CACjN,KAAM,CACJ,QAAS,EACT,MAAO,EACT,EACA,QAAS,CACP,WAAY,MACd,EACA,QAAS,CACP,QAAS,EACT,MAAO,CACT,EACA,WAAY,CACV,WAAY,CACd,CACF,EAAG,WAAY,CACb,OAAQ,CACN,SAAU,GACZ,CACF,EAAG,UAAW,8KACrB,gBAAO,YAAN,KACA,gBAAO,YAAN,CAAe,UAAU,sBAAsB,EAChD,gBAAC,OAAI,UAAU,gDACd,gBAAC,UAAO,QAAS,IAAM,EAAS,CAAY,EAAG,SAAU,CAAC,EAAW,UAAW,EAAW,CAAC,GAAa,gCAAiC,qGAAqG,GAC9O,gBAAC,IAAkB,UAAU,MAAM,CACpC,EAEA,gBAAQ,QAAP,CAAa,UAAU,uGACvB,gBAAC,GAAU,UAAU,UAAU,CAChC,CACD,EACA,gBAAC,OAAI,UAAU,YACd,gBAAC,SAAO,IAAP,CAAW,UAAU,YAAY,OAAO,WAAW,QAAS,CAChD,WAAY,EAAa,SAAW,SACtC,EAAG,WAAY,CACb,OAAQ,CACN,SAAU,GACZ,CACF,GACV,gBAAC,MAAa,CACf,EACA,gBAAC,uBACC,GAAc,gBAAC,SAAO,IAAP,CAAW,UAAU,0DAA0D,QAAS,CAC1F,QAAS,CACX,EAAG,QAAS,CACV,QAAS,CACX,EAAG,KAAM,CACP,QAAS,CACX,GACV,gBAAC,GAAY,UAAU,YAAY,CACpC,CACF,CACD,EACA,gBAAC,OAAI,UAAU,gEACd,gBAAC,KAAE,UAAU,+CACZ,gBAAC,YAAM,EAAG,eAAe,CAAE,EAC3B,gBAAC,KAAE,KAAK,iCAAiC,OAAO,SAAS,IAAI,cAC5D,gBAAC,IAAgB,UAAU,kCAAkC,CAC9D,CACD,EACC,GAAS,UAAqB,gBAAC,UAAO,QAAS,IAAM,EAAS,SAAkB,EAAG,UAAU,uCAC3F,EAAG,SAAS,CACd,EAAY,gBAAC,KAAE,OAAO,SAAS,KAAK,qCAAqC,UAAU,uDAAuD,IAAI,cAC5I,EAAG,YAAY,EAAE,SACnB,CACF,CACD,CACD,CACD,CACD,CACD,CACD,CACD,CACF,CACD,CACD,CACD,CACF,EACO,GAAQ,GD3Lf,GAAO,IAAQ,YAAK,EAAW,EmCF/B,OAA+B,2BAGlB,GAAW,sBAAe,CACtC,OAAQ,GACR,MAAO,CAAC,EACR,MAAO,CAAC,CACT,CAAC,EAEY,CAAE,OAAK,SAAQ,aAAW,SAAO,aAAW,eAAe,GCPxE,OAAuB,yBAKvB,GAAM,IAAe,cAAO,EAAQ,SAAU,CAE1C,SAAY,WACZ,SAAY,SACZ,aAAgB,UAChB,YAAe,OACf,YAAe,yBACf,YAAe,OACf,aAAgB,OAChB,WAAc,SACd,cAAiB,SACjB,WAAc,YACd,UAAW,CACT,QAAW,wBACX,cAAiB,KACnB,EACA,UAAW,CACT,YAAe,KACjB,EAEF,SAAU,CACR,MAAO,CACL,KAAM,CACJ,kBAAmB,IACnB,gBAAmB,mCACrB,EACA,MAAO,CACL,kBAAmB,IACnB,gBAAmB,yCACrB,CACF,CACF,CACF,CAAC,CAAC,EACI,GAAgB,EAAQ,MAAO,CAEjC,SAAY,WACZ,IAAO,MACP,MAAS,MACT,OAAU,MACV,KAAQ,MACR,OAAU,KACV,QAAW,OACX,OAAU,UACV,WAAc,SACd,aAAgB,UAElB,SAAU,CACR,MAAO,CACL,KAAM,CACJ,kBAAmB,IACnB,gBAAmB,mCACrB,EACA,MAAO,CACL,kBAAmB,IACnB,gBAAmB,yCACrB,CACF,CACF,CACF,CAAC,EACK,GAAQ,GAAU,CACtB,KAAM,CACJ,UAAW,+BACb,EACA,OAAQ,CACN,UAAW,iCACb,CACF,CAAC,EACK,GAAiB,EAAQ,OAAQ,CAEnC,SAAY,WACZ,IAAO,MACP,MAAS,MACT,OAAU,MACV,KAAQ,MACR,OAAU,IACV,eAAgB,MAChB,UAAa,uLACb,YAAa,YACb,OAAU,4KAEZ,YAAa,CACX,QAAS,KACT,UAAW,GAAG,0BAEZ,SAAY,WACZ,IAAO,MACP,MAAS,MACT,OAAU,MACV,KAAQ,MACR,YAAe,QACf,gBAAmB,0CAEvB,EACA,SAAU,CACR,MAAO,CACL,KAAM,CACJ,YAAa,CACX,qBAAsB,OACtB,mBAAoB,OACpB,sBAAuB,wEACzB,CACF,EACA,MAAO,CACL,YAAa,CACX,qBAAsB,UACtB,mBAAoB,UACpB,sBAAuB,yDACzB,CACF,CACF,CACF,CACF,CAAC,EACK,GAAgB,EAAQ,MAAO,CACnC,QAAW,OACX,WAAc,SACd,oCAAqC,CACnC,uBAAwB,IACxB,YAAe,yCACf,WAAc,kDAChB,CACF,CAAC,EACK,GAAc,EAAQ,OAAQ,CAClC,WAAc,yNACd,SAAY,WACZ,WAAc,SAChB,CAAC,EAIK,GAAe,EAAQ,EAAe,CAC1C,OAAU,OACV,MAAS,MACX,CAAC,EACK,GAA0B,AAAC,GAI9B,CAJ8B,QAC/B,aACA,QAAQ,SAFuB,EAG5B,IAH4B,EAG5B,CAFH,YACA,UAEI,uBAAC,MAAa,WAAY,CAC9B,MAAO,IACT,EAAG,SAAU,CACX,MAAO,GACT,EAAG,MAAO,GAAW,GACnB,gBAAC,IAAc,MAAO,GACrB,gBAAC,QACA,gBAAC,IAAa,UAAQ,UAAU,EAChC,gBAAC,QAAa,EAAG,uBAAuB,CAAE,CAC3C,CACD,EACA,gBAAC,IAAe,cAAW,GAAC,MAAO,EAAO,CAC3C,GACM,GAAQ,GC5Jf,OAAwB,iBACxB,GAAyB,iBACzB,GAA4B,iBAc5B,GAAM,IAA+B,AAAC,GAOhC,CAPgC,QACpC,aACA,SACA,QACA,QACA,YALoC,EAMjC,IANiC,EAMjC,CALH,YACA,SACA,QACA,QACA,aAGA,GAAM,CAAC,EAAO,GAAY,gBAAiB,EAAE,EACvC,EAAS,eAAgB,IACzB,GACG,KAAK,IAAI,EAAE,SAAS,EAC1B,CAAC,CAAK,CAAC,EACJ,EAAe,mBAAY,KAAO,IAA0B,CAChE,GAAM,GAAW,KAAM,OAAM,wDAAyD,CACpF,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAU,OAChB,GADgB,CAEnB,SACA,MAAO,EACP,cAAe,UACjB,EAAC,CACH,CAAC,EACD,GAAI,CAAC,EAAS,GAAI,CAChB,GAAI,EAAS,QAAU,IACrB,KAAM,IAAI,OAAM,sEAAsE,EAExF,GAAM,GAAS,KAAM,GAAS,KAAK,EAInC,KAAM,IAAI,OAAM,EAAM,OAAO,CAC/B,CACA,GAAM,CACJ,OACG,KAAM,GAAS,KAAK,EAGzB,EAAS,CAAG,CACd,EAAG,CAAC,EAAQ,CAAM,CAAC,EACb,EAAiB,mBAAY,IAAM,IAAK,GAAU,CAAK,EAAG,CAAC,EAAW,CAAK,CAAC,EAClF,MAAO,iBAAC,UAAgB,GAAhB,CAAuB,OAAO,GAAG,UAAS,GAAC,MAAO,EAAO,OAAQ,EAAQ,OAAQ,EAAQ,UAAW,EAAgB,aAAc,IACxI,UAAa,CAAC,CACZ,UACI,gBAAC,IAAa,QAAS,EAAM,MAAO,EAAO,CACnD,CACF,EACO,GAAQ,G/CrDf,GAAM,IAAW,CAChB,eACA,2BACA,6BACA,UACA,oBACA,qBACA,eACD",
  "names": []
}
