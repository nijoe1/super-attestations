{"version":3,"file":"openlogin.cjs.js","mappings":"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","sources":["webpack://@toruslabs/openlogin/webpack/bootstrap","webpack://@toruslabs/openlogin/webpack/runtime/compat get default export","webpack://@toruslabs/openlogin/webpack/runtime/define property getters","webpack://@toruslabs/openlogin/webpack/runtime/hasOwnProperty shorthand","webpack://@toruslabs/openlogin/webpack/runtime/make namespace object","webpack://@toruslabs/openlogin/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@toruslabs/openlogin/external commonjs2 \"ts-custom-error\"","webpack://@toruslabs/openlogin/./src/errors.ts","webpack://@toruslabs/openlogin/external commonjs2 \"loglevel\"","webpack://@toruslabs/openlogin/./src/loglevel.ts","webpack://@toruslabs/openlogin/external commonjs2 \"@toruslabs/openlogin-session-manager\"","webpack://@toruslabs/openlogin/external commonjs2 \"@toruslabs/openlogin-utils\"","webpack://@toruslabs/openlogin/external commonjs2 \"@toruslabs/broadcast-channel\"","webpack://@toruslabs/openlogin/external commonjs2 \"events\"","webpack://@toruslabs/openlogin/external commonjs2 \"@toruslabs/eccrypto\"","webpack://@toruslabs/openlogin/external commonjs2 \"@toruslabs/metadata-helpers\"","webpack://@toruslabs/openlogin/external commonjs2 \"bowser\"","webpack://@toruslabs/openlogin/./src/utils.ts","webpack://@toruslabs/openlogin/./src/PopupHandler.ts","webpack://@toruslabs/openlogin/./src/OpenLogin.ts","webpack://@toruslabs/openlogin/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"ts-custom-error\");","import { CustomError } from \"ts-custom-error\";\n\nexport interface IOpenloginError extends CustomError {\n  code: number;\n  message: string;\n  toString(): string;\n}\n\nexport type ErrorCodes = {\n  [key: number]: string;\n};\n\nexport abstract class OpenloginError extends CustomError implements IOpenloginError {\n  code: number;\n\n  message: string;\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(message);\n\n    this.code = code;\n    this.message = message || \"\";\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"OpenloginError\" });\n  }\n\n  toJSON(): IOpenloginError {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message,\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJSON());\n  }\n}\n\nexport class InitializationError extends OpenloginError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5001: \"Invalid constructor params\",\n    5002: \"SDK not initialized. please call init first\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"InitializationError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): OpenloginError {\n    return new InitializationError(code, `${InitializationError.messages[code]}, ${extraMessage}`);\n  }\n\n  public static invalidParams(extraMessage = \"\"): OpenloginError {\n    return InitializationError.fromCode(5001, extraMessage);\n  }\n\n  public static notInitialized(extraMessage = \"\"): OpenloginError {\n    return InitializationError.fromCode(5002, extraMessage);\n  }\n}\n\n/**\n * login errors\n */\n\nexport class LoginError extends OpenloginError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5111: \"Invalid login params\",\n    5112: \"User not logged in.\",\n    5113: \"login popup has been closed by the user\",\n    5114: \"Login failed\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"LoginError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): OpenloginError {\n    return new LoginError(code, `${LoginError.messages[code]}, ${extraMessage}`);\n  }\n\n  public static invalidLoginParams(extraMessage = \"\"): OpenloginError {\n    return LoginError.fromCode(5111, extraMessage);\n  }\n\n  public static userNotLoggedIn(extraMessage = \"\"): OpenloginError {\n    return LoginError.fromCode(5112, extraMessage);\n  }\n\n  public static popupClosed(extraMessage = \"\"): OpenloginError {\n    return LoginError.fromCode(5113, extraMessage);\n  }\n\n  public static loginFailed(extraMessage = \"\"): OpenloginError {\n    return LoginError.fromCode(5114, extraMessage);\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"loglevel\");","import loglevel from \"loglevel\";\n\nconst log = loglevel.getLogger(\"openlogin\");\n\nlog.setLevel(\"error\");\n\nexport default log;\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/openlogin-session-manager\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/openlogin-utils\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/broadcast-channel\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"events\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/eccrypto\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/metadata-helpers\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"bowser\");","import { getPublic, sign } from \"@toruslabs/eccrypto\";\nimport { keccak256 } from \"@toruslabs/metadata-helpers\";\nimport { base64url, LOGIN_PROVIDER, safeatob } from \"@toruslabs/openlogin-utils\";\nimport bowser from \"bowser\";\n\nimport log from \"./loglevel\";\n\n// don't use destructuring for process.env cause it messes up webpack env plugin\nexport const version = process.env.OPENLOGIN_VERSION;\n\nexport async function whitelistUrl(clientId: string, appKey: string, origin: string): Promise<string> {\n  const appKeyBuf = Buffer.from(appKey.padStart(64, \"0\"), \"hex\");\n  if (base64url.encode(getPublic(appKeyBuf)) !== clientId) throw new Error(\"appKey mismatch\");\n  const sig = await sign(appKeyBuf, keccak256(Buffer.from(origin, \"utf8\")));\n  return base64url.encode(sig);\n}\n\nexport function getHashQueryParams(replaceUrl = false): { sessionId?: string; sessionNamespace?: string; error?: string } {\n  const result: { sessionId?: string; sessionNamespace?: string; error?: string } = {};\n\n  const url = new URL(window.location.href);\n  url.searchParams.forEach((value, key) => {\n    if (key !== \"result\") {\n      result[key] = value;\n    }\n  });\n  const queryResult = url.searchParams.get(\"result\");\n  if (queryResult) {\n    try {\n      const queryParams = JSON.parse(safeatob(queryResult));\n      Object.keys(queryParams).forEach((key) => {\n        result[key] = queryParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  const hash = url.hash.substring(1);\n  const hashUrl = new URL(`${window.location.origin}/?${hash}`);\n  hashUrl.searchParams.forEach((value, key) => {\n    if (key !== \"result\") {\n      result[key] = value;\n    }\n  });\n  const hashResult = hashUrl.searchParams.get(\"result\");\n\n  if (hashResult) {\n    try {\n      const hashParams = JSON.parse(safeatob(hashResult));\n      Object.keys(hashParams).forEach((key) => {\n        result[key] = hashParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  if (replaceUrl) {\n    const cleanUrl = window.location.origin + window.location.pathname;\n    window.history.replaceState({ ...window.history.state, as: cleanUrl, url: cleanUrl }, \"\", cleanUrl);\n  }\n\n  return result;\n}\n\nexport function constructURL(params: { baseURL: string; query?: Record<string, unknown>; hash?: Record<string, unknown> }): string {\n  const { baseURL, query, hash } = params;\n\n  const url = new URL(baseURL);\n  if (query) {\n    Object.keys(query).forEach((key) => {\n      url.searchParams.append(key, query[key] as string);\n    });\n  }\n  if (hash) {\n    const h = new URL(constructURL({ baseURL, query: hash })).searchParams.toString();\n    url.hash = h;\n  }\n  return url.toString();\n}\n\nexport function getPopupFeatures(): string {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n  const w = 1200;\n  const h = 700;\n\n  const width = window.innerWidth\n    ? window.innerWidth\n    : document.documentElement.clientWidth\n    ? document.documentElement.clientWidth\n    : window.screen.width;\n\n  const height = window.innerHeight\n    ? window.innerHeight\n    : document.documentElement.clientHeight\n    ? document.documentElement.clientHeight\n    : window.screen.height;\n\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n\nexport function isMobileOrTablet(): boolean {\n  const browser = bowser.getParser(window.navigator.userAgent);\n  const platform = browser.getPlatform();\n  return platform.type === bowser.PLATFORMS_MAP.tablet || platform.type === bowser.PLATFORMS_MAP.mobile;\n}\n\nexport function getTimeout(loginProvider: string) {\n  if ((loginProvider === LOGIN_PROVIDER.FACEBOOK || loginProvider === LOGIN_PROVIDER.LINE) && isMobileOrTablet()) {\n    return 1000 * 60 * 5; // 5 minutes to finish the login\n  }\n  return 1000 * 10; // 10 seconds\n}\n","import { BroadcastChannel } from \"@toruslabs/broadcast-channel\";\nimport { EventEmitter } from \"events\";\n\nimport { getPopupFeatures } from \"./utils\";\n\nclass PopupHandler extends EventEmitter {\n  url: string;\n\n  target: string;\n\n  features: string;\n\n  window: Window;\n\n  windowTimer: number;\n\n  iClosedWindow: boolean;\n\n  timeout: number;\n\n  constructor({ url, target, features, timeout = 30000 }: { url: string; target?: string; features?: string; timeout?: number }) {\n    super();\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this.timeout = timeout;\n    this._setupTimer();\n  }\n\n  _setupTimer(): void {\n    this.windowTimer = Number(\n      setInterval(() => {\n        if (this.window && this.window.closed) {\n          clearInterval(this.windowTimer);\n          setTimeout(() => {\n            if (!this.iClosedWindow) {\n              this.emit(\"close\");\n            }\n            this.iClosedWindow = false;\n            this.window = undefined;\n          }, this.timeout);\n        }\n        if (this.window === undefined) clearInterval(this.windowTimer);\n      }, 500)\n    );\n  }\n\n  open(): void {\n    this.window = window.open(this.url, this.target, this.features);\n    if (this.window?.focus) this.window.focus();\n  }\n\n  close(): void {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect: boolean): void {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url);\n    } else {\n      window.location.href = this.url;\n    }\n  }\n\n  async listenOnChannel(loginId: string): Promise<{ sessionId: string; sessionNamespace?: string }> {\n    return new Promise<{ sessionId: string; sessionNamespace?: string }>((resolve, reject) => {\n      const bc = new BroadcastChannel<{ error?: string; data?: { sessionId: string; sessionNamespace?: string } }>(loginId, {\n        webWorkerSupport: false,\n        type: \"server\",\n      });\n      bc.addEventListener(\"message\", (ev) => {\n        this.close();\n        bc.close();\n        if (ev.error) {\n          reject(new Error(ev.error));\n        } else {\n          resolve(ev.data);\n        }\n      });\n    });\n  }\n}\n\nexport default PopupHandler;\n","import { OpenloginSessionManager } from \"@toruslabs/openlogin-session-manager\";\nimport {\n  BaseLoginParams,\n  BaseRedirectParams,\n  BrowserStorage,\n  jsonToBase64,\n  LoginParams,\n  OPENLOGIN_NETWORK,\n  OPENLOGIN_NETWORK_TYPE,\n  OpenLoginOptions,\n  OpenloginSessionConfig,\n  OpenloginSessionData,\n  OpenloginUserInfo,\n  UX_MODE,\n} from \"@toruslabs/openlogin-utils\";\nimport log from \"loglevel\";\n\nimport { InitializationError, LoginError } from \"./errors\";\nimport PopupHandler from \"./PopupHandler\";\nimport { constructURL, getHashQueryParams, getTimeout, version } from \"./utils\";\n\nclass OpenLogin {\n  state: OpenloginSessionData = {};\n\n  options: OpenLoginOptions;\n\n  private versionSupportNetworks: OPENLOGIN_NETWORK_TYPE[] = [OPENLOGIN_NETWORK.MAINNET, OPENLOGIN_NETWORK.CYAN, OPENLOGIN_NETWORK.AQUA];\n\n  private sessionManager: OpenloginSessionManager<OpenloginSessionData>;\n\n  private currentStorage: BrowserStorage;\n\n  private _storageBaseKey = \"openlogin_store\";\n\n  constructor(options: OpenLoginOptions) {\n    if (!options.clientId) throw InitializationError.invalidParams(\"clientId is required\");\n    if (!options.sdkUrl) {\n      if (options.network === OPENLOGIN_NETWORK.MAINNET) {\n        options.sdkUrl = \"https://app.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.CYAN) {\n        options.sdkUrl = \"https://cyan.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.TESTNET) {\n        options.sdkUrl = \"https://testing.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.AQUA) {\n        options.sdkUrl = \"https://aqua.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.DEVELOPMENT) {\n        options.sdkUrl = \"http://localhost:3000\";\n      }\n    }\n    if (!options.sdkUrl) {\n      throw InitializationError.invalidParams(\"network or sdk url\");\n    }\n\n    if (!options.redirectUrl) {\n      options.redirectUrl = `${window.location.protocol}//${window.location.host}${window.location.pathname}`;\n    }\n\n    if (!options.uxMode) options.uxMode = UX_MODE.REDIRECT;\n    if (typeof options.replaceUrlOnRedirect !== \"boolean\") options.replaceUrlOnRedirect = true;\n    if (!options.originData) options.originData = {};\n    if (!options.whiteLabel) options.whiteLabel = {};\n    if (!options.loginConfig) options.loginConfig = {};\n    if (!options.mfaSettings) options.mfaSettings = {};\n    if (!options.storageServerUrl) options.storageServerUrl = \"https://broadcast-server.tor.us\";\n    if (!options.storageKey) options.storageKey = \"local\";\n    if (!options.webauthnTransports) options.webauthnTransports = [\"internal\"];\n    if (!options.sessionTime) options.sessionTime = 86400;\n\n    this.options = options;\n  }\n\n  get privKey(): string {\n    return this.state.privKey ? this.state.privKey.padStart(64, \"0\") : \"\";\n  }\n\n  get coreKitKey(): string {\n    return this.state.coreKitKey ? this.state.coreKitKey.padStart(64, \"0\") : \"\";\n  }\n\n  get ed25519PrivKey(): string {\n    return this.state.ed25519PrivKey ? this.state.ed25519PrivKey.padStart(128, \"0\") : \"\";\n  }\n\n  get coreKitEd25519Key(): string {\n    return this.state.coreKitEd25519PrivKey ? this.state.coreKitEd25519PrivKey.padStart(128, \"0\") : \"\";\n  }\n\n  get sessionId(): string {\n    return this.state.sessionId || \"\";\n  }\n\n  get sessionNamespace(): string {\n    return this.options.sessionNamespace || \"\";\n  }\n\n  async init(): Promise<void> {\n    // get sessionNamespace from the redirect result.\n    const params = getHashQueryParams(this.options.replaceUrlOnRedirect);\n    if (params.sessionNamespace) this.options.sessionNamespace = params.sessionNamespace;\n\n    const storageKey = this.options.sessionNamespace ? `${this._storageBaseKey}_${this.options.sessionNamespace}` : this._storageBaseKey;\n    this.currentStorage = BrowserStorage.getInstance(storageKey, this.options.storageKey);\n\n    const sessionId = this.currentStorage.get<string>(\"sessionId\");\n\n    this.sessionManager = new OpenloginSessionManager({\n      sessionServerBaseUrl: this.options.storageServerUrl,\n      sessionNamespace: this.options.sessionNamespace,\n      sessionTime: this.options.sessionTime,\n      sessionId,\n    });\n\n    if (this.options.network === OPENLOGIN_NETWORK.TESTNET) {\n      // using console log because it shouldn't be affected by loglevel config\n      // eslint-disable-next-line no-console\n      console.log(\"%c WARNING! You are on testnet. Please set network: 'mainnet' in production\", \"color: #FF0000\");\n    }\n\n    if (params.error) {\n      throw LoginError.loginFailed(params.error);\n    }\n\n    if (params.sessionId) {\n      this.currentStorage.set(\"sessionId\", params.sessionId);\n      this.sessionManager.sessionKey = params.sessionId;\n    }\n\n    if (this.sessionManager.sessionKey) {\n      const data = await this._authorizeSession();\n      // Fill state with correct info from session\n      // If session is invalid all the data is unset here.\n      this.updateState(data);\n      if (Object.keys(data).length === 0) {\n        // If session is invalid, unset the sessionId from localStorage.\n        this.currentStorage.set(\"sessionId\", \"\");\n      }\n    }\n  }\n\n  async login(params: LoginParams & Partial<BaseRedirectParams>): Promise<{ privKey: string }> {\n    if (!params.loginProvider) throw LoginError.invalidLoginParams(`loginProvider is required`);\n\n    // in case of redirect mode, redirect url will be dapp specified\n    // in case of popup mode, redirect url will be sdk specified\n    const defaultParams: BaseRedirectParams = {\n      redirectUrl: this.options.redirectUrl,\n    };\n\n    const loginParams: LoginParams = {\n      loginProvider: params.loginProvider,\n      ...defaultParams,\n      ...params,\n    };\n    // do this in popup-window route\n    // loginParams.redirectUrl = this.options.uxMode === UX_MODE.POPUP ? `${this.options.sdkUrl}/popup-window` : loginParams.redirectUrl;\n\n    const base64url = this.getBaseUrl();\n\n    // construct the url to open for either popup/redirect mode and call request method to handle the rest\n    const loginId = await this.getLoginId(loginParams);\n    const configParams: BaseLoginParams = {\n      loginId,\n      sessionNamespace: this.options.sessionNamespace,\n    };\n\n    if (this.options.uxMode === UX_MODE.REDIRECT) {\n      const loginUrl = constructURL({\n        baseURL: base64url,\n        hash: { b64Params: jsonToBase64(configParams) },\n      });\n      window.location.href = loginUrl;\n      return undefined;\n    }\n    return new Promise((resolve, reject) => {\n      const loginUrl = constructURL({\n        baseURL: base64url,\n        hash: { b64Params: jsonToBase64(configParams) },\n      });\n      const currentWindow = new PopupHandler({ url: loginUrl, timeout: getTimeout(params.loginProvider) });\n\n      currentWindow.on(\"close\", () => {\n        reject(LoginError.popupClosed());\n      });\n\n      currentWindow\n        .listenOnChannel(loginId)\n        .then(({ sessionId, sessionNamespace }) => {\n          this.sessionManager.sessionKey = sessionId;\n          this.options.sessionNamespace = sessionNamespace;\n          this.currentStorage.set(\"sessionId\", sessionId);\n          return this.sessionManager.authorizeSession();\n        })\n        .then((sessionData: OpenloginSessionData) => {\n          this.updateState(sessionData);\n          return resolve({ privKey: this.privKey });\n        })\n        .catch(reject);\n\n      currentWindow.open();\n    });\n  }\n\n  async logout(): Promise<void> {\n    if (!this.sessionManager.sessionKey) throw LoginError.userNotLoggedIn();\n    await this.sessionManager.invalidateSession();\n    this.updateState({\n      privKey: \"\",\n      coreKitKey: \"\",\n      coreKitEd25519PrivKey: \"\",\n      ed25519PrivKey: \"\",\n      walletKey: \"\",\n      oAuthPrivateKey: \"\",\n      tKey: \"\",\n      userInfo: {\n        name: \"\",\n        profileImage: \"\",\n        dappShare: \"\",\n        idToken: \"\",\n        oAuthIdToken: \"\",\n        oAuthAccessToken: \"\",\n        appState: \"\",\n        email: \"\",\n        verifier: \"\",\n        verifierId: \"\",\n        aggregateVerifier: \"\",\n        typeOfLogin: \"\",\n      },\n    });\n\n    this.currentStorage.set(\"sessionId\", \"\");\n  }\n\n  getUserInfo(): OpenloginUserInfo {\n    if (!this.sessionManager.sessionKey) {\n      throw LoginError.userNotLoggedIn();\n    }\n    return this.state.userInfo;\n  }\n\n  async getLoginId(loginParams: LoginParams & Partial<BaseRedirectParams>): Promise<string> {\n    if (!this.sessionManager) throw InitializationError.notInitialized();\n    const dataObject: OpenloginSessionConfig = {\n      options: this.options,\n      params: loginParams,\n    };\n\n    const loginId = OpenloginSessionManager.generateRandomSessionKey();\n    const loginSessionMgr = new OpenloginSessionManager<OpenloginSessionConfig>({\n      sessionServerBaseUrl: this.options.storageServerUrl,\n      sessionNamespace: this.options.sessionNamespace,\n      sessionTime: 600, // each login key must be used with 10 mins (might be used at the end of popup redirect)\n      sessionId: loginId,\n    });\n\n    await loginSessionMgr.createSession(JSON.parse(JSON.stringify(dataObject)));\n\n    return loginId;\n  }\n\n  private async _authorizeSession(): Promise<OpenloginSessionData> {\n    try {\n      if (!this.sessionManager.sessionKey) return {};\n      const result = await this.sessionManager.authorizeSession();\n      return result;\n    } catch (err) {\n      log.error(\"authorization failed\", err);\n      return {};\n    }\n  }\n\n  private updateState(data: Partial<OpenloginSessionData>) {\n    this.state = { ...this.state, ...data };\n  }\n\n  private getBaseUrl(): string {\n    if (this.versionSupportNetworks.includes(this.options.network)) {\n      return `${this.options.sdkUrl}/v${version.split(\".\")[0]}/start`;\n    }\n    return `${this.options.sdkUrl}/start`;\n  }\n}\n\nexport default OpenLogin;\n","export * from \"./errors\";\nexport { default as loglevel } from \"./loglevel\";\nexport { default } from \"./OpenLogin\";\nexport * from \"./utils\";\n"],"names":["CustomError","OpenloginError","constructor","code","message","_defineProperty","Object","defineProperty","value","toJSON","name","toString","JSON","stringify","InitializationError","fromCode","extraMessage","arguments","length","undefined","messages","invalidParams","notInitialized","LoginError","invalidLoginParams","userNotLoggedIn","popupClosed","loginFailed","loglevel","log","getLogger","setLevel","getPublic","sign","keccak256","base64url","LOGIN_PROVIDER","safeatob","bowser","version","process","env","OPENLOGIN_VERSION","whitelistUrl","clientId","appKey","origin","appKeyBuf","Buffer","from","padStart","encode","Error","sig","getHashQueryParams","replaceUrl","result","url","URL","window","location","href","searchParams","forEach","key","queryResult","get","queryParams","parse","keys","error","hash","substring","hashUrl","hashResult","hashParams","cleanUrl","pathname","history","replaceState","_objectSpread","state","as","constructURL","params","baseURL","query","append","h","getPopupFeatures","dualScreenLeft","screenLeft","screenX","dualScreenTop","screenTop","screenY","w","width","innerWidth","document","documentElement","clientWidth","screen","height","innerHeight","clientHeight","systemZoom","left","Math","abs","top","features","isMobileOrTablet","browser","getParser","navigator","userAgent","platform","getPlatform","type","PLATFORMS_MAP","tablet","mobile","getTimeout","loginProvider","FACEBOOK","LINE","BroadcastChannel","EventEmitter","PopupHandler","_ref","target","timeout","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","setTimeout","emit","open","_this$window","focus","close","redirect","locationReplaceOnRedirect","replace","listenOnChannel","loginId","Promise","resolve","reject","bc","webWorkerSupport","addEventListener","ev","data","OpenloginSessionManager","BrowserStorage","jsonToBase64","OPENLOGIN_NETWORK","UX_MODE","OpenLogin","options","MAINNET","CYAN","AQUA","sdkUrl","network","TESTNET","DEVELOPMENT","redirectUrl","protocol","host","uxMode","REDIRECT","replaceUrlOnRedirect","originData","whiteLabel","loginConfig","mfaSettings","storageServerUrl","storageKey","webauthnTransports","sessionTime","privKey","coreKitKey","ed25519PrivKey","coreKitEd25519Key","coreKitEd25519PrivKey","sessionId","sessionNamespace","init","_storageBaseKey","currentStorage","getInstance","sessionManager","sessionServerBaseUrl","console","set","sessionKey","_authorizeSession","updateState","login","defaultParams","loginParams","getBaseUrl","getLoginId","configParams","loginUrl","b64Params","currentWindow","on","then","authorizeSession","sessionData","catch","logout","invalidateSession","walletKey","oAuthPrivateKey","tKey","userInfo","profileImage","dappShare","idToken","oAuthIdToken","oAuthAccessToken","appState","email","verifier","verifierId","aggregateVerifier","typeOfLogin","getUserInfo","dataObject","generateRandomSessionKey","loginSessionMgr","createSession","err","versionSupportNetworks","includes","split","default"],"sourceRoot":""}