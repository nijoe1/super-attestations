{"version":3,"file":"eccrypto.cjs.js","mappings":"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","sources":["webpack://@toruslabs/eccrypto/webpack/bootstrap","webpack://@toruslabs/eccrypto/webpack/runtime/compat get default export","webpack://@toruslabs/eccrypto/webpack/runtime/define property getters","webpack://@toruslabs/eccrypto/webpack/runtime/global","webpack://@toruslabs/eccrypto/webpack/runtime/hasOwnProperty shorthand","webpack://@toruslabs/eccrypto/webpack/runtime/make namespace object","webpack://@toruslabs/eccrypto/external node-commonjs \"crypto\"","webpack://@toruslabs/eccrypto/external commonjs2 \"elliptic\"","webpack://@toruslabs/eccrypto/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"crypto\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"elliptic\");","import nodeCrypto from \"crypto\";\nimport { ec as EC } from \"elliptic\";\n\nconst ec = new EC(\"secp256k1\");\nconst browserCrypto = global.crypto || global.msCrypto || {};\nconst subtle = browserCrypto.subtle || (browserCrypto as any).webkitSubtle;\n\nconst EC_GROUP_ORDER = Buffer.from(\"fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\", \"hex\");\nconst ZERO32 = Buffer.alloc(32, 0);\n\nexport interface Ecies {\n  iv: Buffer;\n  ephemPublicKey: Buffer;\n  ciphertext: Buffer;\n  mac: Buffer;\n}\n\nfunction assert(condition: boolean, message: string) {\n  if (!condition) {\n    throw new Error(message || \"Assertion failed\");\n  }\n}\nfunction isScalar(x: Buffer): boolean {\n  return Buffer.isBuffer(x) && x.length === 32;\n}\n\nfunction isValidPrivateKey(privateKey: Buffer): boolean {\n  if (!isScalar(privateKey)) {\n    return false;\n  }\n  return (\n    privateKey.compare(ZERO32) > 0 &&\n    // > 0\n    privateKey.compare(EC_GROUP_ORDER) < 0\n  ); // < G\n}\n\n// Compare two buffers in constant time to prevent timing attacks.\nfunction equalConstTime(b1: Buffer, b2: Buffer): boolean {\n  if (b1.length !== b2.length) {\n    return false;\n  }\n  let res = 0;\n  for (let i = 0; i < b1.length; i++) {\n    res |= b1[i] ^ b2[i]; // jshint ignore:line\n  }\n\n  return res === 0;\n}\n\n/* This must check if we're in the browser or\nnot, since the functions are different and does\nnot convert using browserify */\nfunction randomBytes(size: number): Buffer {\n  const arr = new Uint8Array(size);\n  if (typeof browserCrypto.getRandomValues === \"undefined\") {\n    return Buffer.from(nodeCrypto.randomBytes(size));\n  }\n  browserCrypto.getRandomValues(arr);\n\n  return Buffer.from(arr);\n}\n\nasync function sha512(msg: Buffer): Promise<Uint8Array> {\n  if (subtle) {\n    const hash = await subtle.digest(\"SHA-512\", msg);\n    const result = new Uint8Array(hash);\n    return result;\n  }\n  const hash = nodeCrypto.createHash(\"sha512\");\n  const result = hash.update(msg).digest();\n  return new Uint8Array(result);\n}\n\ntype AesFunctionType = (iv: Buffer, key: Buffer, data: Buffer) => Promise<Buffer>;\n\nfunction getAes(op: \"encrypt\" | \"decrypt\"): AesFunctionType {\n  return async function (iv: Buffer, key: Buffer, data: Buffer) {\n    if (subtle) {\n      const importAlgorithm = {\n        name: \"AES-CBC\",\n      };\n      const cryptoKey = await subtle.importKey(\"raw\", key, importAlgorithm, false, [op]);\n      const encAlgorithm = {\n        name: \"AES-CBC\",\n        iv,\n      };\n      const result = await subtle[op](encAlgorithm, cryptoKey, data);\n      return Buffer.from(new Uint8Array(result));\n    } else if (op === \"encrypt\") {\n      const cipher = nodeCrypto.createCipheriv(\"aes-256-cbc\", key, iv);\n      const firstChunk = cipher.update(data);\n      const secondChunk = cipher.final();\n      return Buffer.concat([firstChunk, secondChunk]);\n    } else if (op === \"decrypt\") {\n      const decipher = nodeCrypto.createDecipheriv(\"aes-256-cbc\", key, iv);\n      const firstChunk = decipher.update(data);\n      const secondChunk = decipher.final();\n      return Buffer.concat([firstChunk, secondChunk]);\n    }\n    throw new Error(`Unsupported operation: ${op}`);\n  };\n}\nconst aesCbcEncrypt = getAes(\"encrypt\");\nconst aesCbcDecrypt = getAes(\"decrypt\");\n\nasync function hmacSha256Sign(key: Buffer, msg: Buffer): Promise<Buffer> {\n  if (subtle) {\n    const importAlgorithm = {\n      name: \"HMAC\",\n      hash: {\n        name: \"SHA-256\",\n      },\n    };\n    const cryptoKey = await subtle.importKey(\"raw\", new Uint8Array(key), importAlgorithm, false, [\"sign\", \"verify\"]);\n    const sig = await subtle.sign(\"HMAC\", cryptoKey, msg);\n    const result = Buffer.from(new Uint8Array(sig));\n    return result;\n  }\n  const hmac = nodeCrypto.createHmac(\"sha256\", Buffer.from(key));\n  hmac.update(msg);\n  const result = hmac.digest();\n  return result;\n}\nasync function hmacSha256Verify(key, msg, sig) {\n  const expectedSig = await hmacSha256Sign(key, msg);\n  return equalConstTime(expectedSig, sig);\n}\n\n/**\n * Generate a new valid private key. Will use the window.crypto or window.msCrypto as source\n * depending on your browser.\n */\nexport const generatePrivate = function (): Buffer {\n  let privateKey = randomBytes(32);\n  while (!isValidPrivateKey(privateKey)) {\n    privateKey = randomBytes(32);\n  }\n  return privateKey;\n};\n\nexport const getPublic = function (privateKey: Buffer): Buffer {\n  // This function has sync API so we throw an error immediately.\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  // XXX(Kagami): `elliptic.utils.encode` returns array for every\n  // encoding except `hex`.\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(\"array\"));\n};\n\n/**\n * Get compressed version of public key.\n */\nexport const getPublicCompressed = function (privateKey: Buffer): Buffer {\n  // jshint ignore:line\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  // See https://github.com/wanderer/secp256k1-node/issues/46\n  const compressed = true;\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, \"array\"));\n};\n\n// NOTE(Kagami): We don't use promise shim in Browser implementation\n// because it's supported natively in new browsers (see\n// <http://caniuse.com/#feat=promises>) and we can use only new browsers\n// because of the WebCryptoAPI (see\n// <http://caniuse.com/#feat=cryptography>).\nexport const sign = async function (privateKey: Buffer, msg: Buffer): Promise<Buffer> {\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  assert(msg.length > 0, \"Message should not be empty\");\n  assert(msg.length <= 32, \"Message is too long\");\n  return Buffer.from(\n    ec\n      .sign(msg, privateKey, {\n        canonical: true,\n      })\n      .toDER()\n  );\n};\n\nexport const verify = async function (publicKey: Buffer, msg: Buffer, sig: Buffer): Promise<null> {\n  assert(publicKey.length === 65 || publicKey.length === 33, \"Bad public key\");\n  if (publicKey.length === 65) {\n    assert(publicKey[0] === 4, \"Bad public key\");\n  }\n  if (publicKey.length === 33) {\n    assert(publicKey[0] === 2 || publicKey[0] === 3, \"Bad public key\");\n  }\n  assert(msg.length > 0, \"Message should not be empty\");\n  assert(msg.length <= 32, \"Message is too long\");\n  if (ec.verify(msg, sig, publicKey)) {\n    return null;\n  }\n  throw new Error(\"Bad signature\");\n};\n\nexport const derive = async function (privateKeyA: Buffer, publicKeyB: Buffer): Promise<Buffer> {\n  assert(Buffer.isBuffer(privateKeyA), \"Bad private key\");\n  assert(Buffer.isBuffer(publicKeyB), \"Bad public key\");\n  assert(privateKeyA.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKeyA), \"Bad private key\");\n  assert(publicKeyB.length === 65 || publicKeyB.length === 33, \"Bad public key\");\n  if (publicKeyB.length === 65) {\n    assert(publicKeyB[0] === 4, \"Bad public key\");\n  }\n  if (publicKeyB.length === 33) {\n    assert(publicKeyB[0] === 2 || publicKeyB[0] === 3, \"Bad public key\");\n  }\n  const keyA = ec.keyFromPrivate(privateKeyA);\n  const keyB = ec.keyFromPublic(publicKeyB);\n  const Px = keyA.derive(keyB.getPublic()); // BN instance\n  return Buffer.from(Px.toArray());\n};\n\nexport const deriveUnpadded = derive;\n\nexport const derivePadded = async function (privateKeyA: Buffer, publicKeyB: Buffer): Promise<Buffer> {\n  assert(Buffer.isBuffer(privateKeyA), \"Bad private key\");\n  assert(Buffer.isBuffer(publicKeyB), \"Bad public key\");\n  assert(privateKeyA.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKeyA), \"Bad private key\");\n  assert(publicKeyB.length === 65 || publicKeyB.length === 33, \"Bad public key\");\n  if (publicKeyB.length === 65) {\n    assert(publicKeyB[0] === 4, \"Bad public key\");\n  }\n  if (publicKeyB.length === 33) {\n    assert(publicKeyB[0] === 2 || publicKeyB[0] === 3, \"Bad public key\");\n  }\n  const keyA = ec.keyFromPrivate(privateKeyA);\n  const keyB = ec.keyFromPublic(publicKeyB);\n  const Px = keyA.derive(keyB.getPublic()); // BN instance\n  return Buffer.from(Px.toString(16, 64), \"hex\");\n};\n\nexport const encrypt = async function (publicKeyTo: Buffer, msg: Buffer, opts?: { iv?: Buffer; ephemPrivateKey?: Buffer }): Promise<Ecies> {\n  opts = opts || {};\n\n  let ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n  // There is a very unlikely possibility that it is not a valid key\n  while (!isValidPrivateKey(ephemPrivateKey)) {\n    ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n  }\n  const ephemPublicKey = getPublic(ephemPrivateKey);\n  const Px = await deriveUnpadded(ephemPrivateKey, publicKeyTo);\n  const hash = await sha512(Px);\n  const iv = opts.iv || randomBytes(16);\n  const encryptionKey = hash.slice(0, 32);\n  const macKey = hash.slice(32);\n  const data = await aesCbcEncrypt(iv, Buffer.from(encryptionKey), msg);\n  const ciphertext = data;\n  const dataToMac = Buffer.concat([iv, ephemPublicKey, ciphertext]);\n  const mac = await hmacSha256Sign(Buffer.from(macKey), dataToMac);\n  return {\n    iv,\n    ephemPublicKey,\n    ciphertext,\n    mac,\n  };\n};\n\nexport const decrypt = async function (privateKey: Buffer, opts: Ecies, _padding?: boolean): Promise<Buffer> {\n  const padding = _padding ?? false;\n  const deriveLocal = padding ? derivePadded : deriveUnpadded;\n  const Px = await deriveLocal(privateKey, opts.ephemPublicKey);\n  const hash = await sha512(Px);\n  const encryptionKey = hash.slice(0, 32);\n  const macKey = hash.slice(32);\n  const dataToMac = Buffer.concat([opts.iv, opts.ephemPublicKey, opts.ciphertext]);\n  const macGood = await hmacSha256Verify(macKey, dataToMac, opts.mac);\n  if (!macGood && padding === false) {\n    return decrypt(privateKey, opts, true);\n  } else if (!macGood && padding === true) {\n    throw new Error(\"bad MAC after trying padded\");\n  }\n  const msg = await aesCbcDecrypt(opts.iv, Buffer.from(encryptionKey), opts.ciphertext);\n  return Buffer.from(new Uint8Array(msg));\n};\n"],"names":["nodeCrypto","ec","EC","browserCrypto","global","crypto","msCrypto","subtle","webkitSubtle","EC_GROUP_ORDER","Buffer","from","ZERO32","alloc","assert","condition","message","Error","isScalar","x","isBuffer","length","isValidPrivateKey","privateKey","compare","equalConstTime","b1","b2","res","i","randomBytes","size","arr","Uint8Array","getRandomValues","sha512","msg","hash","digest","result","createHash","update","getAes","op","iv","key","data","importAlgorithm","name","cryptoKey","importKey","encAlgorithm","cipher","createCipheriv","firstChunk","secondChunk","final","concat","decipher","createDecipheriv","aesCbcEncrypt","aesCbcDecrypt","hmacSha256Sign","sig","sign","hmac","createHmac","hmacSha256Verify","expectedSig","generatePrivate","getPublic","keyFromPrivate","getPublicCompressed","compressed","canonical","toDER","verify","publicKey","derive","privateKeyA","publicKeyB","keyA","keyB","keyFromPublic","Px","toArray","deriveUnpadded","derivePadded","toString","encrypt","publicKeyTo","opts","ephemPrivateKey","ephemPublicKey","encryptionKey","slice","macKey","ciphertext","dataToMac","mac","decrypt","_padding","padding","deriveLocal","macGood"],"sourceRoot":""}