import { _IWritable, Duplex as DuplexStream } from "readable-stream";
import { ObservableStore } from "./ObservableStore";
declare class ObservableStoreStream<T> extends DuplexStream {
    handler: (state: T) => void;
    obsStore: ObservableStore<T>;
    constructor(obsStore: ObservableStore<T>);
    pipe<U extends _IWritable>(dest: U, options?: {
        end?: boolean;
    }): U;
    _write(chunk: any, _encoding: string, callback: (error?: Error | null) => void): void;
    _read(_size: number): void;
    _destroy(err: Error | null, callback: (error: Error | null) => void): void;
}
export declare function storeAsStream<T>(obsStore: ObservableStore<T>): ObservableStoreStream<T>;
export {};
