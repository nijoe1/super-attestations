"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RevocationResolver__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "contract IEAS",
                name: "eas",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "AccessDenied",
        type: "error",
    },
    {
        inputs: [],
        name: "InsufficientValue",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidEAS",
        type: "error",
    },
    {
        inputs: [],
        name: "NotPayable",
        type: "error",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "uid",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "schema",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint64",
                        name: "time",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "expirationTime",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "revocationTime",
                        type: "uint64",
                    },
                    {
                        internalType: "bytes32",
                        name: "refUID",
                        type: "bytes32",
                    },
                    {
                        internalType: "address",
                        name: "recipient",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "attester",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "revocable",
                        type: "bool",
                    },
                    {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                    },
                ],
                internalType: "struct Attestation",
                name: "attestation",
                type: "tuple",
            },
        ],
        name: "attest",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "isPayable",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "uid",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "schema",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint64",
                        name: "time",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "expirationTime",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "revocationTime",
                        type: "uint64",
                    },
                    {
                        internalType: "bytes32",
                        name: "refUID",
                        type: "bytes32",
                    },
                    {
                        internalType: "address",
                        name: "recipient",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "attester",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "revocable",
                        type: "bool",
                    },
                    {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                    },
                ],
                internalType: "struct Attestation[]",
                name: "attestations",
                type: "tuple[]",
            },
            {
                internalType: "uint256[]",
                name: "values",
                type: "uint256[]",
            },
        ],
        name: "multiAttest",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "uid",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "schema",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint64",
                        name: "time",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "expirationTime",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "revocationTime",
                        type: "uint64",
                    },
                    {
                        internalType: "bytes32",
                        name: "refUID",
                        type: "bytes32",
                    },
                    {
                        internalType: "address",
                        name: "recipient",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "attester",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "revocable",
                        type: "bool",
                    },
                    {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                    },
                ],
                internalType: "struct Attestation[]",
                name: "attestations",
                type: "tuple[]",
            },
            {
                internalType: "uint256[]",
                name: "values",
                type: "uint256[]",
            },
        ],
        name: "multiRevoke",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "uid",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "schema",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint64",
                        name: "time",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "expirationTime",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "revocationTime",
                        type: "uint64",
                    },
                    {
                        internalType: "bytes32",
                        name: "refUID",
                        type: "bytes32",
                    },
                    {
                        internalType: "address",
                        name: "recipient",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "attester",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "revocable",
                        type: "bool",
                    },
                    {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                    },
                ],
                internalType: "struct Attestation",
                name: "attestation",
                type: "tuple",
            },
        ],
        name: "revoke",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bool",
                name: "status",
                type: "bool",
            },
        ],
        name: "setRevocation",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "version",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        stateMutability: "payable",
        type: "receive",
    },
];
const _bytecode = "0x61010060405234801561001157600080fd5b5060405161098c38038061098c83398101604081905261003091610079565b6001608052600060a081905260c052806001600160a01b038116610067576040516341bc07ff60e11b815260040160405180910390fd5b6001600160a01b031660e052506100a9565b60006020828403121561008b57600080fd5b81516001600160a01b03811681146100a257600080fd5b9392505050565b60805160a05160c05160e0516108aa6100e260003960006104be015260006101f2015260006101c9015260006101a001526108aa6000f3fe6080604052600436106100745760003560e01c8063ce46e0461161004e578063ce46e04614610113578063e49617e114610127578063e60c35051461013a578063f545cb661461014d57600080fd5b806354fd4d50146100b257806388e5b2d9146100dd57806391db0b7e1461010057600080fd5b366100ad576040517f1574f9f300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b005b600080fd5b3480156100be57600080fd5b506100c7610199565b6040516100d4919061061d565b60405180910390f35b6100f06100eb3660046106ba565b61023c565b60405190151581526020016100d4565b6100f061010e3660046106ba565b610308565b34801561011f57600080fd5b5060006100f0565b6100f0610135366004610726565b6103c0565b6100f0610148366004610726565b6103d7565b34801561015957600080fd5b506100ab610168366004610769565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b60606101c47f00000000000000000000000000000000000000000000000000000000000000006103e8565b6101ed7f00000000000000000000000000000000000000000000000000000000000000006103e8565b6102167f00000000000000000000000000000000000000000000000000000000000000006103e8565b6040516020016102289392919061078b565b604051602081830303815290604052905090565b60006102466104a6565b833460005b828110156102f857600086868381811061026757610267610801565b905060200201359050828111156102aa576040517f1101129400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102db8989848181106102bf576102bf610801565b90506020028101906102d19190610830565b5060005460ff1690565b6102ec576000945050505050610300565b9091039060010161024b565b506001925050505b949350505050565b60006103126104a6565b833460005b828110156102f857600086868381811061033357610333610801565b90506020020135905082811115610376576040517f1101129400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103a389898481811061038b5761038b610801565b905060200281019061039d9190610830565b50600190565b6103b4576000945050505050610300565b90910390600101610317565b60006103ca6104a6565b60005460ff165b92915050565b60006103e16104a6565b60016103d1565b606060006103f583610517565b600101905060008167ffffffffffffffff8111156104155761041561086e565b6040519080825280601f01601f19166020018201604052801561043f576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461044957509392505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610515576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610560577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef8100000000831061058c576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106105aa57662386f26fc10000830492506010015b6305f5e10083106105c2576305f5e100830492506008015b61271083106105d657612710830492506004015b606483106105e8576064830492506002015b600a83106103d15760010192915050565b60005b838110156106145781810151838201526020016105fc565b50506000910152565b602081526000825180602084015261063c8160408501602087016105f9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008083601f84011261068057600080fd5b50813567ffffffffffffffff81111561069857600080fd5b6020830191508360208260051b85010111156106b357600080fd5b9250929050565b600080600080604085870312156106d057600080fd5b843567ffffffffffffffff808211156106e857600080fd5b6106f48883890161066e565b9096509450602087013591508082111561070d57600080fd5b5061071a8782880161066e565b95989497509550505050565b60006020828403121561073857600080fd5b813567ffffffffffffffff81111561074f57600080fd5b8201610140818503121561076257600080fd5b9392505050565b60006020828403121561077b57600080fd5b8135801515811461076257600080fd5b6000845161079d8184602089016105f9565b80830190507f2e0000000000000000000000000000000000000000000000000000000000000080825285516107d9816001850160208a016105f9565b600192019182015283516107f48160028401602088016105f9565b0160020195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec183360301811261086457600080fd5b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea164736f6c6343000813000a";
const isSuperArgs = (xs) => xs.length > 1;
class RevocationResolver__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(eas, overrides) {
        return super.getDeployTransaction(eas, overrides || {});
    }
    deploy(eas, overrides) {
        return super.deploy(eas, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.RevocationResolver__factory = RevocationResolver__factory;
//# sourceMappingURL=RevocationResolver__factory.js.map